{"version":3,"sources":["webpack:///static/js/1.034574f84f19d48ecaf1.js","webpack:///./src/components/compareChart.vue","webpack:///./~/zrender/lib/core/util.js?10f4","webpack:///./~/echarts/lib/echarts.js?68a2","webpack:///./~/echarts/lib/util/graphic.js?e267","webpack:///./~/echarts/lib/util/model.js?e2bd","webpack:///./~/echarts/lib/util/number.js?43e3","webpack:///./~/zrender/lib/core/env.js?9ccc","webpack:///./~/zrender/lib/core/vector.js?6654","webpack:///./~/zrender/lib/graphic/Path.js?c119","webpack:///./~/echarts/lib/model/Model.js?f4df","webpack:///./~/echarts/lib/util/format.js?7f72","webpack:///./~/zrender/lib/core/BoundingRect.js?76f6","webpack:///./~/echarts/lib/util/clazz.js?3e66","webpack:///./~/echarts/lib/model/Component.js?0e02","webpack:///./~/echarts/lib/component/toolbox/featureManager.js?78cc","webpack:///./~/echarts/lib/util/layout.js?2b1e","webpack:///./~/zrender/lib/contain/text.js?3a43","webpack:///./~/echarts/lib/coord/axisHelper.js?4730","webpack:///./~/zrender/lib/core/curve.js?9511","webpack:///./~/zrender/lib/core/event.js?24ff","webpack:///./~/zrender/lib/core/matrix.js?97a2","webpack:///./~/zrender/lib/mixin/Eventful.js?223b","webpack:///group.vue?9aaa","webpack:///./src/components/units/group.vue?de6d*","webpack:///./src/components/units/group.vue?a849*","webpack:///./src/components/units/group.vue?310a*","webpack:///./src/components/units/group.vue?f76f*","webpack:///./~/zrender/lib/tool/color.js?284f","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js?ba01","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js?e2b1","webpack:///./~/echarts/lib/scale/Scale.js?c922","webpack:///./~/zrender/lib/config.js?2861","webpack:///./~/zrender/lib/container/Group.js?8d57","webpack:///./~/zrender/lib/core/PathProxy.js?69e9","webpack:///dateSelect.vue?0b8c","webpack:///./src/components/units/dateSelect.vue?ede7*","webpack:///./~/echarts/lib/CoordinateSystem.js?2b30","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js?e3fc","webpack:///./~/echarts/lib/component/dataZoom/helper.js?ee2f","webpack:///./~/echarts/lib/data/DataDiffer.js?f330","webpack:///./~/echarts/lib/model/Series.js?186c","webpack:///./~/echarts/lib/scale/Interval.js?08e9","webpack:///./~/echarts/lib/util/component.js?cc72","webpack:///./~/echarts/lib/util/symbol.js?be2c","webpack:///./src/components/units/dateSelect.vue?6f2e*","webpack:///./src/components/units/dateSelect.vue?49e6","webpack:///./src/components/units/dateSelect.vue?149c*","webpack:///./~/zrender/lib/core/timsort.js?0a74","webpack:///./~/zrender/lib/graphic/Displayable.js?5c45","webpack:///./~/zrender/lib/graphic/Gradient.js?5165","webpack:///./~/echarts/lib/chart/helper/Symbol.js?9fa3","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js?2189","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js?00cf","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js?35c0","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js?6417","webpack:///./~/echarts/lib/component/axis/AxisView.js?f854","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js?ce88","webpack:///./~/echarts/lib/component/dataZoom/DataZoomModel.js?4b9b","webpack:///./~/echarts/lib/component/dataZoom/DataZoomView.js?03fe","webpack:///./~/echarts/lib/component/dataZoom/history.js?b152","webpack:///./~/echarts/lib/component/gridSimple.js?eec5","webpack:///./~/echarts/lib/component/helper/listComponent.js?566d","webpack:///./~/echarts/lib/coord/Axis.js?736c","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js?a8d0","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js?0573","webpack:///./~/echarts/lib/coord/cartesian/Grid.js?f167","webpack:///./~/echarts/lib/data/List.js?b096","webpack:///./~/echarts/lib/data/helper/completeDimensions.js?9c9e","webpack:///./~/echarts/lib/model/mixin/colorPalette.js?b454","webpack:///./~/echarts/lib/scale/helper.js?370b","webpack:///./~/echarts/lib/util/throttle.js?56b3","webpack:///./~/echarts/lib/view/Chart.js?72f3","webpack:///./~/echarts/lib/view/Component.js?415a","webpack:///./~/zrender/lib/Element.js?325b","webpack:///./~/zrender/lib/animation/Animator.js?d2b9","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js?6d88","webpack:///./~/zrender/lib/contain/util.js?0031","webpack:///./~/zrender/lib/core/LRU.js?018e","webpack:///./~/zrender/lib/core/guid.js?f0e4","webpack:///./~/zrender/lib/core/log.js?26a2","webpack:///./~/zrender/lib/graphic/Image.js?bf1b","webpack:///./~/zrender/lib/graphic/Pattern.js?a97e","webpack:///./~/zrender/lib/graphic/Style.js?22d9","webpack:///./~/zrender/lib/graphic/helper/poly.js?788c","webpack:///./~/zrender/lib/mixin/Transformable.js?f61b","webpack:///ECharts.vue?2290","webpack:///./~/vue-echarts/components/ECharts.vue?bd4d*","webpack:///./~/echarts/lib/ExtensionAPI.js?e283","webpack:///./~/echarts/lib/chart/bar.js?931c","webpack:///./~/echarts/lib/chart/bar/BarSeries.js?61cd","webpack:///./~/echarts/lib/chart/bar/BarView.js?20fc","webpack:///./~/echarts/lib/chart/bar/BaseBarSeries.js?72f5","webpack:///./~/echarts/lib/chart/bar/barItemStyle.js?15d9","webpack:///./~/echarts/lib/chart/bar/helper.js?25d2","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js?6b79","webpack:///./~/echarts/lib/chart/helper/labelHelper.js?2f49","webpack:///./~/echarts/lib/chart/line.js?f251","webpack:///./~/echarts/lib/chart/line/LineSeries.js?6f66","webpack:///./~/echarts/lib/chart/line/LineView.js?018e","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js?8da6","webpack:///./~/echarts/lib/chart/line/poly.js?c760","webpack:///./~/echarts/lib/component/axis.js?8a87","webpack:///./~/echarts/lib/component/axisPointer.js?110d","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js?e99a","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js?4293","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js?027a","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js?ab1e","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js?86e8","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js?076a","webpack:///./~/echarts/lib/component/dataZoomSelect.js?7083","webpack:///./~/echarts/lib/component/dataZoom/AxisProxy.js?0ffe","webpack:///./~/echarts/lib/component/dataZoom/SelectZoomModel.js?3dbd","webpack:///./~/echarts/lib/component/dataZoom/SelectZoomView.js?e1fd","webpack:///./~/echarts/lib/component/dataZoom/dataZoomAction.js?375c","webpack:///./~/echarts/lib/component/dataZoom/dataZoomProcessor.js?d800","webpack:///./~/echarts/lib/component/dataZoom/typeDefaulter.js?6484","webpack:///./~/echarts/lib/component/helper/BrushController.js?71cb","webpack:///./~/echarts/lib/component/helper/BrushTargetManager.js?dc36","webpack:///./~/echarts/lib/component/helper/brushHelper.js?1612","webpack:///./~/echarts/lib/component/helper/cursorHelper.js?f071","webpack:///./~/echarts/lib/component/helper/interactionMutex.js?ab5d","webpack:///./~/echarts/lib/component/helper/sliderMove.js?10f2","webpack:///./~/echarts/lib/component/legend.js?d893","webpack:///./~/echarts/lib/component/legend/LegendModel.js?bbe7","webpack:///./~/echarts/lib/component/legend/LegendView.js?124f","webpack:///./~/echarts/lib/component/legend/legendAction.js?b7a9","webpack:///./~/echarts/lib/component/legend/legendFilter.js?93b2","webpack:///./~/echarts/lib/component/title.js?e263","webpack:///./~/echarts/lib/component/toolbox.js?df71","webpack:///./~/echarts/lib/component/toolbox/ToolboxModel.js?d00b","webpack:///./~/echarts/lib/component/toolbox/ToolboxView.js?4a74","webpack:///./~/echarts/lib/component/toolbox/feature/DataView.js?d1f9","webpack:///./~/echarts/lib/component/toolbox/feature/DataZoom.js?a2b6","webpack:///./~/echarts/lib/component/toolbox/feature/MagicType.js?3d24","webpack:///./~/echarts/lib/component/toolbox/feature/Restore.js?59fa","webpack:///./~/echarts/lib/component/toolbox/feature/SaveAsImage.js?3d0c","webpack:///./~/echarts/lib/component/tooltip.js?b491","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js?2c54","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js?19ac","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js?ae52","webpack:///./~/echarts/lib/coord/axisDefault.js?4492","webpack:///./~/echarts/lib/coord/axisModelCreator.js?34e4","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js?9345","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js?9246","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js?103b","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js?1817","webpack:///./~/echarts/lib/helper.js?5794","webpack:///./~/echarts/lib/layout/barGrid.js?d23e","webpack:///./~/echarts/lib/layout/points.js?4302","webpack:///./~/echarts/lib/loading/default.js?8a5f","webpack:///./~/echarts/lib/model/Global.js?b9d3","webpack:///./~/echarts/lib/model/OptionManager.js?a7a5","webpack:///./~/echarts/lib/model/globalDefault.js?fd54","webpack:///./~/echarts/lib/model/mixin/areaStyle.js?4e41","webpack:///./~/echarts/lib/model/mixin/boxLayout.js?92d7","webpack:///./~/echarts/lib/model/mixin/itemStyle.js?9011","webpack:///./~/echarts/lib/model/mixin/lineStyle.js?3579","webpack:///./~/echarts/lib/model/mixin/textStyle.js?e4c8","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js?f171","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js?aff6","webpack:///./~/echarts/lib/processor/dataSample.js?6fcd","webpack:///./~/echarts/lib/scale/Log.js?0ad0","webpack:///./~/echarts/lib/scale/Ordinal.js?3a6b","webpack:///./~/echarts/lib/scale/Time.js?6fdf","webpack:///./~/echarts/lib/visual/seriesColor.js?4b6a","webpack:///./~/echarts/lib/visual/symbol.js?518b","webpack:///./~/vue-echarts/components/ECharts.vue?1398*","webpack:///./~/lodash.debounce/index.js?3bdc","webpack:///./~/vue-echarts/components/ECharts.vue?6f89","webpack:///./~/vue-echarts/components/ECharts.vue?bf54*","webpack:///./~/zrender/lib/Handler.js?fbeb","webpack:///./~/zrender/lib/Layer.js?f586","webpack:///./~/zrender/lib/Painter.js?ee99","webpack:///./~/zrender/lib/Storage.js?7e93","webpack:///./~/zrender/lib/animation/Animation.js?8743","webpack:///./~/zrender/lib/animation/Clip.js?fef9","webpack:///./~/zrender/lib/animation/easing.js?64b6","webpack:///./~/zrender/lib/contain/arc.js?7367","webpack:///./~/zrender/lib/contain/cubic.js?b90e","webpack:///./~/zrender/lib/contain/line.js?4326","webpack:///./~/zrender/lib/contain/path.js?2e7f","webpack:///./~/zrender/lib/contain/quadratic.js?f589","webpack:///./~/zrender/lib/contain/windingLine.js?625a","webpack:///./~/zrender/lib/core/GestureMgr.js?00fd","webpack:///./~/zrender/lib/core/bbox.js?1b56","webpack:///./~/zrender/lib/dom/HandlerProxy.js?2fc7","webpack:///./~/zrender/lib/graphic/CompoundPath.js?8636","webpack:///./~/zrender/lib/graphic/LinearGradient.js?4250","webpack:///./~/zrender/lib/graphic/RadialGradient.js?895e","webpack:///./~/zrender/lib/graphic/Text.js?3244","webpack:///./~/zrender/lib/graphic/helper/roundRect.js?418d","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js?2713","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js?a17c","webpack:///./~/zrender/lib/graphic/mixin/RectText.js?94ea","webpack:///./~/zrender/lib/graphic/shape/Arc.js?2994","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js?f5c4","webpack:///./~/zrender/lib/graphic/shape/Circle.js?076e","webpack:///./~/zrender/lib/graphic/shape/Line.js?7728","webpack:///./~/zrender/lib/graphic/shape/Polygon.js?d37d","webpack:///./~/zrender/lib/graphic/shape/Polyline.js?3cdb","webpack:///./~/zrender/lib/graphic/shape/Rect.js?3b3d","webpack:///./~/zrender/lib/graphic/shape/Ring.js?b71c","webpack:///./~/zrender/lib/graphic/shape/Sector.js?9767","webpack:///./~/zrender/lib/mixin/Animatable.js?35cb","webpack:///./~/zrender/lib/mixin/Draggable.js?fbca","webpack:///./~/zrender/lib/tool/path.js?dc4b","webpack:///./~/zrender/lib/tool/transformPath.js?ddb2","webpack:///./~/zrender/lib/zrender.js?5dcd","webpack:///compareChart.vue","webpack:///./src/components/compareChart.vue?bd19","webpack:///./src/components/compareChart.vue?2a80","webpack:///./src/components/compareChart.vue?b66d"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Component","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","get","prefixedKey","removeKey","noop","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","__ecComponentInfo","componentIndex","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","parent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","max","left","Infinity","top","right","bottom","canvasList","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","name","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","existInstance","getInstanceByDom","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","Axis","number","format","matrix","vector","color","helper","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","Path","Transformable","BoundingRect","round","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","extendShape","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","aspect","cx","cy","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","gTextStyleModel","fontStyle","fontWeight","fontSize","fontFamily","join","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","transform","invert","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","clipPointsByRect","points","point","clipRectByRect","targetRect","has","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","val","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","parseDate","NaN","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","marker","getTooltipMarker","$vars","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","makeGetter","hostObj","parsedKey","match","queryType","includeMainTypes","queryParam","queryComponents","dataDimToCoordDim","dataDim","dimensions","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","_trim","str","quantityExponent","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","precision","returnStr","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","TIME_REG","getTimezoneOffset","exec","timezoneOffset","timeOffset","quantity","pow","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","ArrayCtor","Float32Array","out","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","numberUtil","textContain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","extraCssText","s2d","formatTime","isUTC","date","utc","M","h","capitalFirst","substr","truncateText","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","checkClassType","superCall","superApply","IS_CONTAINER","host","hasOwn","ret","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","getDependencies","deps","arrayPush","componentUtil","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","features","ctor","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","getTextWidth","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","font","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","__webpack_exports__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default","__WEBPACK_IMPORTED_MODULE_1_vue__","__WEBPACK_IMPORTED_MODULE_2_vuex__","__WEBPACK_IMPORTED_MODULE_3_muse_components_selectField__","__WEBPACK_IMPORTED_MODULE_4_muse_components_menu__","handleChange","default","changeCity","showCity","Boolean","showGroup","created","getConfig","computed","mounted","methods","handleChangeCity","setCity","handleChangeGroup","setGroup","sources","mappings","file","sourcesContent","sourceRoot","content","locals","_vm","$createElement","_c","_self","cities","staticClass","ref","attrs","city","change","title","_v","_l","cityCode","cityName","_e","groups","leaderId","leaderName","staticRenderFns","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","collectAxesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","collectSeriesInfo","seriesTooltipTrigger","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","collect","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","excludes","includes","propName","setting","_setting","_extent","_interval","scaleProto","getSetting","unionExtent","unionExtentFromData","getDataExtent","start","end","thisExtent","_isBlank","config","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","showYear","showMonth","showDate","showMonthAll","showDateAll","month","handleChangeMonth","handleChangeDate","handleChangeYear","setYear","setMonth","setDate","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","completeDimOpt","encodeDef","dimsDef","getDimensionsInfo","completeDimensions","categoryIndex","nameList","createNameList","categories","dimValueGetter","hasItemOption","categoryAxesModels","initData","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","angle","geo","AXIS_DIMS","COORDS","isCoordSupported","coordType","createNameEach","capitalNames","capitalAttrs","callback","nameObj","capital","eachAxisDim","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","defaultKeyGetter","DataDiffer","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","fillDataTextStyle","newSeriesOption","cloneShallow","getLinkedData","getRawData","getBaseAxis","multipleSeries","formattedValue","setEachItem","dimIdx","tooltip","valStr","vertially","tooltipName","tooltipDims","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","getTooltipPosition","roundNumber","_intervalPrecision","getInterval","_niceExtent","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","Triangle","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","size","symbolBuildProxies","Symbol","symbolType","beforeBrush","textVerticalAlign","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolUtil","createSymbol","symbolPath","setColor","year","disabled","getDate","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","drift","labelHelper","symbolProto","_createSymbol","hostModel","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","getItemStyle","elStyle","opacity","valueDim","findLabelValueDim","setTextToStyle","onEmphasis","ratio","onNormal","fadeOut","getItemGraphicEl","dataToPoint","getValues","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","globalListener","unregister","confineInContainer","viewWidth","viewHeight","AxisBuilder","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","align","verticalAlign","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","dataToCoord","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","textEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","nameDirection","tickDirection","dumbGroup","updateTransform","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","axisTick","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","axisLabelShow","labelRotation","labelRotate","categoryData","triggerEvent","tickVal","itemTextStyleModel","textColor","pos","labelStr","textEl","targetType","decomposeTransform","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","axisRotation","textRotation","rawTick","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","axisPointerClazz","registerAxisPointerClass","gridModel","getZero","theAxis","grid","toGlobalCoord","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posMap","dirMap","labelInside","getLabelInterval","retrieveRaw","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","AxisProxy","DataZoomModel","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","thisOption","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","indices","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","getTargetCoordInfo","save","coordModel","store","coordIndex","coordSysLists","getCoordSysModel","giveStore","ATTR","history","newSnapshot","dataZoomId","percentRange","head","snapshot","xAxis","yAxis","positionGroup","getBoxLayoutParams","addBackground","padding","fixExtentWithBands","nTick","normalizedExtent","onBand","_labelInterval","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","isHorizontal","origin","rangeStart","rangeEnd","setRange","resetRange","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","isAxisUsedInTheGrid","getLabelUnionRect","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","ifAxisCanNotOnZero","otherAxisDim","axes","axesMap","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","labelUnionRect","axesMapOnDim","getCartesian","coordList","getCartesians","_findConvertTarget","cartesian","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","baseAxis","otherAxis","getOtherAxis","grids","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","isDataArray","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","itemName","DataCtor","stackedValue","dimData","dimExtent","getSum","sum","rawIndex","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","eachItemGraphicEl","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dataDimNameMap","dimCount","value0","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","colorIdx","colorNameMap","colorPalette","fixExtent","lib","ORIGIN_METHOD","RATE","fn","delay","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","Chart","elSetState","state","toggleHighlight","dataIdx","chartProto","componentProto","guid","Animatable","clipPath","beforeUpdate","afterUpdate","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","PI2","normalizeRadian","LinkedList","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","idStart","ZImage","globalImageCache","src","_image","cachedImgObj","onload","pending","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","textStroke","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","smoothSpline","smoothBezier","smooth","controlPoints","smoothConstraint","cp1","cp2","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default","__WEBPACK_IMPORTED_MODULE_1_lodash_debounce__","__WEBPACK_IMPORTED_MODULE_1_lodash_debounce___default","__WEBPACK_IMPORTED_MODULE_2_vue__","ACTION_EVENTS","MOUSE_EVENTS","initOptions","autoResize","cache","_delegateGet","computedOptions","watch","_init","deep","mergeOptions","_delegateMethod","_chart","_key","_this","$el","$emit","__resizeHanlder","leading","beforeDestroy","registerMap","chartInstance","echartsAPIList","barLayoutGrid","eachSeriesByType","brushSelector","removeRect","animationModel","removeSector","updateStyle","isPolar","itemStyleModel","getBarItemStyle","labelPositionOutside","setLabel","getLineWidth","rawLayout","BAR_BORDER_WIDTH_QUERY","BarView","coordinateSystemType","_render","isHorizontalOrRadial","oldData","_data","elementCreator","newIndex","oldIndex","rectShape","animateProperty","animateTarget","isRadial","sector","sectorShape","fixedLineWidth","signX","signY","getMarkerPosition","pt","legendHoverLink","barMinHeight","barMinAngle","getBorderLineDash","labelText","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","SymbolCtor","newIdx","symbolEl","oldIdx","enableAnimation","labelDims","clipOverflow","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","dir","sign","getStackedOnPoints","valueAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","gradient","lineAnimationDiff","polyHelper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","categoryAxis","getAxesByScale","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","stackedOnBBox","axisTrigger","link","tooltipOption","AxisPointerModel","triggerOn","shadowStyle","borderColor","borderWidth","handle","icon","AxisPonterView","disopse","BaseAxisPointer","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","createIcon","handleModel","handlers","iconStr","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","doClear","buildLabel","getAxisDimIndex","viewHelper","cartesianAxisHelper","CartesianAxisPointer","otherExtent","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","calculateDataExtent","seriesExtent","fixExtentByAxis","setAxisModel","isRestore","percentWindow","_percentWindow","valueWindow","_valueWindow","useOrigin","setMinMaxSpan","minMaxSpan","_minMaxSpan","_dataZoomModel","minMax","valueSpan","_dataExtent","_dimName","_axisIndex","getTargetSeriesModels","getOtherAxisModel","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","getMinMaxSpan","calculateDataWindow","percentExtent","boundValue","boundPercent","reset","dataWindow","restore","filterData","isInWindow","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","linkedNodesFinder","effectedModels","resetSingleAxis","filterSingleAxis","valueRange","BrushController","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_mounted","_uid","baseUID","_handlers","mouseHandlers","doEnableBrush","controller","brushOption","interactionMutex","take","MUTEX_RESOURCE_KEY","brushType","DEFAULT_BRUSH_OPT","doDisableBrush","release","createCover","cover","coverRenderers","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","COVER_Z","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panels","panel","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","removeOnClick","shouldShowCover","track","UNSELECT_THRESHOLD","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","brushStyle","MIN_RESIZE_LINE_WIDTH","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","transformable","mainEl","globalDir","getGlobalDirection","CURSOR_MAP","pointsToRect","clipByPanel","formatRectRange","localDirection","inverseMap","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","DIRECTION_MAP","driftPolygon","thisGroup","localD","localZero","xmin","ymin","resetCursor","currPanel","setCursorStyle","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","brushMode","determineBrushType","getCreatingRange","defaultBrushType","handleDragEnd","getLineRenderer","xyIndex","localTrack","ends","getLinearBrushOtherExtent","ne","sw","nw","se","enableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","getKey","tmpIdPrefix","oldGetKey","addOrUpdate","newBrushOption","oldCovers","newCovers","unmount","mousedown","mousemove","mouseup","lineX","lineY","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","targetInfoBuilders","builder","include","formatMinMax","INCLUDE_FINDER_MAIN_TYPES","axisConvert","axisNameIndex","to","rangeOrCoordRange","xyMinMax","axisDiffProcessor","refer","scales","getScales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","brushHelper","COORD_CONVERTS","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","makePanelOpts","getDefaultBrushType","getPanelRect","makeRectPanelClipPath","makeRectIsTargetByCursor","makeLinearBrushOtherExtent","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","geoModel","xminymin","xmaxymax","normalizeRect","cursorHelper","graphicUtil","localPoints","specifiedXYIndex","brushWidth","targetModel","onIrrelevantElement","IRRELEVANT_EXCLUDES","targetCoordSysModel","topTarget","getStore","resourceKey","userKey","isTaken","getSpanSign","handleEnds","handleIndex","restrict","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","LegendModel","selected","_updateData","legendData","hasSelected","isSelected","select","availableNames","getSeries","_availableNames","unSelect","toggleSelected","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","symbolCreator","listComponentHelper","_symbolTypeStore","legendModel","selectMode","itemAlign","legendDrawedMap","getSeriesByName","legendSymbolType","_createItem","eachRawSeries","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","textX","hitRect","legendIndex","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","legendModels","findComponents","filterSeries","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","sublink","open","groupRect","layoutOption","layoutRect","alignStyle","featureManager","ToolboxModel","feature","featureOpt","featureName","Feature","itemSize","showTitle","iconStyle","isUserFeatureName","toolboxModel","featureNames","oldName","featureOpts","featureModel","onclick","unusable","createIconPaths","setIconStatus","iconName","iconPaths","iconStatus","iconStyleModel","icons","getIcons","titles","__title","_features","_featureNames","titleText","needPutOnTop","topOffset","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","assembleSeriesWithCategoryAxis","tables","valueAxisDim","headers","columns","lines","ITEM_SPLITER","items","BLOCK_SPLITER","assembleOtherSeries","vals","getContentFromModel","trim","isTSVFormat","block","parseTSVContents","tsv","tsvLines","itemSplitRegex","header","parseListContents","hasName","parseContents","blockMetaList","blocks","RegExp","blockMeta","axisKey","DataView","tryMergeDataOption","originalData","newVal","readOnly","optionToContent","contentToOption","lang","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","removeChild","root","cssText","innerHTML","viewMain","textarea","htmlOrDom","appendChild","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","which","selectionStart","selectionEnd","substring","newSeriesOptList","seriesOpt","DataZoom","_brushController","_onBrush","_isZoomActive","retrieveAxisSetting","updateBackBtnStatus","updateZoomBtnStatus","zoomActive","dataZoomSelectActive","brushTargetManager","sliderMove","DATA_ZOOM_ID_BASE","zoom","back","nextActive","_dispatchZoomAction","setBatch","findDataZoom","found","dzModel","addForAxis","dataZoomOpt","axisIndicesName","givenAxisIndices","forEachComponent","axisOpt","newOpt","$fromToolbox","dataZoomOpts","dataZoom","toolboxOpt","toolbox","MagicType","bar","tiled","availableIcons","seriesOptGenreator","markPoint","markLine","radioTypes","generateNewSeriesTypes","newSeriesOpt","radio","currentType","Restore","SaveAsImage","$a","download","href","MouseEvent","html","write","evt","bubbles","cancelable","dispatchEvent","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_x","_y","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","setContent","setEnterable","enterable","viewportRoot","getViewportRoot","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","confineTooltipPosition","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitLine","splitArea","timeAxis","logAxis","logBase","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","coordExtent","dimAxisMapper","_axes","Cartesian","_dimList","_dataCoordConvert","input","dimList","output","axisX","axisY","dataToPoints","containLabel","axisModelCommonMixin","createList","createScale","mixinAxisModelCommonMethods","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","calBarWidthAndOffset","barSeries","barWidth","barMaxWidth","barGap","barCategoryGap","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","barWidthAndOffset","getSeriesByType","isSeriesFiltered","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","lastCoord","lastCoordOrigin","coordDims","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","rawSeriesIndex","eachRawSeriesByType","getCurrentSeriesIndices","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","animationDuration","progressiveThreshold","useUTC","lineType","getLineDash","dotSize","dashSize","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","clockWise","pointerColor","dataRange","visualMap","componentName","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","mpData","mlData","samplers","average","nearest","indexSampler","sampler","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","encodeColor","colorAccessPath","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","wait","invokeFunc","lastArgs","thisArg","lastThis","undefined","lastInvokeTime","leadingEdge","timerId","timerExpired","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","nativeMin","maxWait","shouldInvoke","now","trailingEdge","trailing","cancel","debounced","isInvoking","TypeError","FUNC_ERROR_TEXT","toNumber","nativeMax","isObjectLike","isSymbol","objectToString","symbolTag","NAN","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","freeGlobal","freeSelf","objectProto","makeEventPacket","eveType","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","lastHovered","hovered","hoveredTarget","lastHoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","cursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","fillRect","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","Painter","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","token","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","remainder","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_a","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","center","GestureMgr","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","pinchEnd","pinchPre","pinchCenter","extremity","fromPoints","xDim","yDim","tx","ty","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","touchmove","touchend","click","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","strokeText","fillText","r1","r2","r3","r4","total","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","interpolate","segs","w2","w3","maxValue","lastIndexOf","baseline","textShadowColor","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","roundRectHelper","shadowTemp","modified","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","__WEBPACK_IMPORTED_MODULE_3__units_mainMenu__","__WEBPACK_IMPORTED_MODULE_3__units_mainMenu___default","__WEBPACK_IMPORTED_MODULE_4__Modal__","__WEBPACK_IMPORTED_MODULE_4__Modal___default","__WEBPACK_IMPORTED_MODULE_5__units_group__","__WEBPACK_IMPORTED_MODULE_5__units_group___default","__WEBPACK_IMPORTED_MODULE_6__units_dateSelect__","__WEBPACK_IMPORTED_MODULE_6__units_dateSelect___default","__WEBPACK_IMPORTED_MODULE_7_muse_components_dropDownMenu__","__WEBPACK_IMPORTED_MODULE_8_muse_components_menu__","__WEBPACK_IMPORTED_MODULE_9_muse_components_snackbar__","__WEBPACK_IMPORTED_MODULE_10_vue_echarts_components_ECharts_vue__","__WEBPACK_IMPORTED_MODULE_10_vue_echarts_components_ECharts_vue___default","__WEBPACK_IMPORTED_MODULE_11_echarts_lib_chart_bar__","__WEBPACK_IMPORTED_MODULE_12_echarts_lib_chart_line__","__WEBPACK_IMPORTED_MODULE_13_echarts_lib_component_title__","__WEBPACK_IMPORTED_MODULE_14_echarts_lib_component_legend__","__WEBPACK_IMPORTED_MODULE_15_echarts_lib_component_tooltip__","__WEBPACK_IMPORTED_MODULE_16_echarts_lib_component_toolbox__","mainMenu","Modal","dateSelect","selectedWorker","code","chartOption","fullDate","legend","saveAsImage","targetNum","trendDataWithCondition","completionNum","achievingRate","linkGrowthRate","$refs","parentId","getGeneralOrderStatistics","categoryCode","getTrendDataWithCondition","then","updateBar","handleChangeService","generalOrderStatistics","categoryName","changeSelect","lengend","yAxisConfig","class","drawer-opened","openDrawer","slot","auto-resize","snackbarMsg","actionClick","hideSnackbar"],"mappings":"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KiN35wCV,OjN45wCU6kE,WiN35wCV,EjN45wCUp+C,UiN35wCV,YjN45wCUnoB,KAAMsP,EiN15wChB67H,iBjN45wCQa,EAAY/mI,GiN35wCpB,IjN65wC4B,IAAlB+mI,EAAYhnI,GACd8lE,EAAMrqE,MACJiB,KiN35wCV,QjN45wCUkV,KiN15wCV,QjN65wC4B,IAAlBo1H,EAAY/mI,GACd6lE,EAAMrqE,MACJiB,KiN35wCV,QjN45wCUkV,KiN35wCV,KjN45wCU0rD,WACEn6C,UiNz5wCZ,ejN65wCM5mB,KAAKopI,aACHt7F,OACEiQ,MiN35wCV,EjN45wCUlsB,KAAM9jB,EAAEozD,aAAa9rD,KiN35wC/B,SjN45wCU02F,QAAS/rG,KiN35wCnBqpI,SjN45wCUh3H,IiN35wCV,MjN45wCUF,KiN15wCV,UjN45wCQk8C,SACE9kD,QiN35wCV,OjN45wCU65D,aACEjjE,KiNz5wCZ,WjN45wCQmpI,QACEj3H,IiN35wCV,MjN45wCU5T,KiN15wCV+rI,GjN45wCQ91B,SACEh5E,OiN35wCV,WjN45wCUwxE,SiN35wCV,GjN45wCU56F,MiN35wCV,GjN45wCUD,IiN35wCV,GjN45wCUy6F,SACEy8B,iBAGJ7lE,MACErxD,IiN35wCV,MjN45wCUF,KiN35wCV,KjN45wCUG,MiN35wCV,KjN45wCUC,OiN35wCV,KjN45wCU8sG,ciN15wCV,GjN45wCQ/1C,QACEnpE,KiN35wCV,WjN45wCU6gC,aiN35wCV,EjN45wCUviC,KAAMsP,EiN15wChB2kE,YjN45wCQnJ,MiN35wCRA,EjN45wCQz9D,OiN15wCRA,GjN45wCM8oG,EiN35wCNr/F,mBjNi6wCS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUna,EAAQC,EAASC,GkNhwxCjCD,EAAAD,EAAAC,QAAAC,EAAA,OAKAD,EAAA6D,MAAA9D,EAAAU,EAAA,kpCAAyqC,IAAQ+a,QAAA,EAAAg2B,SAAA,yDAAA5O,SAAA6O,SAAA,8mBAAAC,KAAA,mBAAAC,gBAAA,iiDAA0xEC,WAAA,OlNwwxCl8G,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAU7xC,EAAQC,EAASC,GmNnxxCjC,GAAA4xC,GAAA5xC,EAAA,IACA,iBAAA4xC,SAAA9xC,EAAAU,EAAAoxC,EAAA,MACAA,EAAAC,SAAA/xC,EAAAC,QAAA6xC,EAAAC,OAEA7xC,GAAA,gBAAA4xC,GAAA,InN2xxCS,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAU9xC,EAAQC,GoN1yxCxBD,EAAAC,SAAgBsR,OAAA,WAAmB,GAAAygC,GAAAptC,KAAairC,EAAAmC,EAAAC,eAA0BC,EAAAF,EAAAG,MAAAD,IAAArC,CAC1E,OAAAqC,GAAA,OACAo9F,OACAC,gBAAAv9F,EAAAw9F,cAEGt9F,EAAA,YAAAF,EAAAW,GAAA,KAAAT,EAAA,aACHG,YAAA,iBACAE,OACAG,MAAA,YAEGR,EAAA,OACHG,YAAA,mBACAo9F,KAAA,UACGv9F,EAAA,SACHK,OACA7B,aAAAsB,EAAAm9F,iBAEG,GAAAn9F,EAAAW,GAAA,KAAAT,EAAA,OACHG,YAAA,mBACAo9F,KAAA,UACGv9F,EAAA,cACHK,OACA7B,aAAAsB,EAAAm9F,iBAEG,GAAAn9F,EAAAW,GAAA,KAAAT,EAAA,OACHG,YAAA,mBACAo9F,KAAA,UACGv9F,EAAA,oBACHK,OACA7vC,MAAAsvC,EAAA+zB,aAAAgoE,KACAttG,UAAA,IACAh4B,GAAA,mBAEAgC,IACAgoC,OAAAT,EAAAg9F,uBAEG98F,EAAA,gBACHK,OACA7vC,MAAA,GACAgwC,MAAA,UAEGV,EAAAW,GAAA,KAAAX,EAAAY,GAAAZ,EAAA,gCAAAzkC,GACH,MAAA2kC,GAAA,gBACA/wC,IAAAoM,EAAAqhI,aACAr8F,OACA7vC,MAAA6K,EAAAqhI,aACAl8F,MAAAnlC,EAAA2hI,mBAGG,SAAAl9F,EAAAW,GAAA,KAAAT,EAAA,OACHK,OACA9pC,GAAA,iBAEGypC,EAAA,WACHI,IAAA,MACAC,OACA3U,QAAAoU,EAAAg8F,YACA0B,cAAA,OAEG,GAAA19F,EAAAW,GAAA,KAAAX,EAAA,SAAAE,EAAA,eACHK,OACA9sC,QAAAusC,EAAA29F,YACA/hI,OAAA,MAEAnD,IACAmlI,YAAA59F,EAAA69F,aACA59G,MAAA+f,EAAA69F,gBAEG79F,EAAAe,MAAA,IACFI","file":"static/js/1.034574f84f19d48ecaf1.js","sourcesContent":["webpackJsonp([1],Array(413).concat([\n/* 413 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(703)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(682),\n  /* template */\n  __webpack_require__(711),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 414 */,\n/* 415 */,\n/* 416 */,\n/* 417 */,\n/* 418 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 419 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(427);\n\n    var GlobalModel = __webpack_require__(622);\n    var ExtensionAPI = __webpack_require__(559);\n    var CoordinateSystemManager = __webpack_require__(459);\n    var OptionManager = __webpack_require__(623);\n\n    var ComponentModel = __webpack_require__(434);\n    var SeriesModel = __webpack_require__(463);\n\n    var ComponentView = __webpack_require__(516);\n    var ChartView = __webpack_require__(515);\n    var graphic = __webpack_require__(420);\n    var modelUtil = __webpack_require__(421);\n    var throttle = __webpack_require__(514);\n\n    var zrender = __webpack_require__(679);\n    var zrUtil = __webpack_require__(418);\n    var colorTool = __webpack_require__(449);\n    var Eventful = __webpack_require__(443);\n    var timsort = __webpack_require__(470);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.6.1',\n        dependencies: {\n            zrender: '3.5.1'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(636));\n    echarts.registerPreprocessor(__webpack_require__(630));\n    echarts.registerLoading('default', __webpack_require__(621));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(510);\n    echarts.Model = __webpack_require__(430);\n\n    echarts.Axis = __webpack_require__(506);\n\n    echarts.graphic = __webpack_require__(420);\n    echarts.number = __webpack_require__(422);\n    echarts.format = __webpack_require__(431);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(442);\n    echarts.vector = __webpack_require__(428);\n    echarts.color = __webpack_require__(449);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(618);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(100)))\n\n/***/ }),\n/* 420 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(418);\n\n    var pathTool = __webpack_require__(677);\n    var Path = __webpack_require__(429);\n    var colorTool = __webpack_require__(449);\n    var matrix = __webpack_require__(442);\n    var vector = __webpack_require__(428);\n    var Transformable = __webpack_require__(556);\n    var BoundingRect = __webpack_require__(432);\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(454);\n\n    graphic.Image = __webpack_require__(552);\n\n    graphic.Text = __webpack_require__(661);\n\n    graphic.Circle = __webpack_require__(668);\n\n    graphic.Sector = __webpack_require__(674);\n\n    graphic.Ring = __webpack_require__(673);\n\n    graphic.Polygon = __webpack_require__(670);\n\n    graphic.Polyline = __webpack_require__(671);\n\n    graphic.Rect = __webpack_require__(672);\n\n    graphic.Line = __webpack_require__(669);\n\n    graphic.BezierCurve = __webpack_require__(667);\n\n    graphic.Arc = __webpack_require__(666);\n\n    graphic.CompoundPath = __webpack_require__(658);\n\n    graphic.LinearGradient = __webpack_require__(659);\n\n    graphic.RadialGradient = __webpack_require__(660);\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    graphic.getFont = function (opt, ecModel) {\n        var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 421 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(431);\n    var nubmerUtil = __webpack_require__(422);\n    var Model = __webpack_require__(430);\n    var zrUtil = __webpack_require__(418);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n/* 422 */\n/***/ (function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 423 */,\n/* 424 */,\n/* 425 */,\n/* 426 */,\n/* 427 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 428 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 429 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(471);\n    var zrUtil = __webpack_require__(418);\n    var PathProxy = __webpack_require__(455);\n    var pathContain = __webpack_require__(652);\n\n    var Pattern = __webpack_require__(553);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 430 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(418);\n    var clazzUtil = __webpack_require__(433);\n    var env = __webpack_require__(427);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(628));\n    mixin(Model, __webpack_require__(625));\n    mixin(Model, __webpack_require__(629));\n    mixin(Model, __webpack_require__(627));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 431 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var numberUtil = __webpack_require__(422);\n    var textContain = __webpack_require__(437);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n/* 432 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(428);\n    var matrix = __webpack_require__(442);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 433 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 434 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(430);\n    var zrUtil = __webpack_require__(418);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(465);\n    var clazzUtil = __webpack_require__(433);\n    var layout = __webpack_require__(436);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(626));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 435 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var features = {};\n\n    module.exports = {\n        register: function (name, ctor) {\n            features[name] = ctor;\n        },\n\n        get: function (name) {\n            return features[name];\n        }\n    };\n\n\n/***/ }),\n/* 436 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(418);\n    var BoundingRect = __webpack_require__(432);\n    var numberUtil = __webpack_require__(422);\n    var formatUtil = __webpack_require__(431);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n/* 437 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(418);\n    var BoundingRect = __webpack_require__(432);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 438 */,\n/* 439 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(634);\n    var IntervalScale = __webpack_require__(464);\n    __webpack_require__(635);\n    __webpack_require__(633);\n    var Scale = __webpack_require__(452);\n\n    var numberUtil = __webpack_require__(422);\n    var zrUtil = __webpack_require__(418);\n    var textContain = __webpack_require__(437);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: scale.type === 'interval' ? model.get('minInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 440 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(428);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 441 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(443);\n    var env = __webpack_require__(427);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 442 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 443 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 444 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vuex__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_muse_components_selectField__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_muse_components_menu__ = __webpack_require__(20);\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_1_vue__[\"a\" /* default */].component(__WEBPACK_IMPORTED_MODULE_3_muse_components_selectField__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_3_muse_components_selectField__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_1_vue__[\"a\" /* default */].component(__WEBPACK_IMPORTED_MODULE_4_muse_components_menu__[\"a\" /* menuItem */].name, __WEBPACK_IMPORTED_MODULE_4_muse_components_menu__[\"a\" /* menuItem */]);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'Group',\n  props: {\n    handleChange: {\n      type: Function,\n      default: function _default() {}\n    },\n    changeCity: {\n      type: Function,\n      default: function _default() {}\n    },\n    showCity: {\n      type: Boolean,\n      default: true\n    },\n    showGroup: {\n      type: Boolean,\n      default: true\n    }\n  },\n  created: function created() {\n    this.getConfig();\n  },\n\n  computed: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"a\" /* mapState */])(['cities', 'city', 'groups', 'group'])),\n  mounted: function mounted() {},\n\n  methods: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"c\" /* mapActions */])(['getConfig']), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"b\" /* mapMutations */])(['setCity', 'setGroup']), {\n    handleChangeCity: function handleChangeCity(v) {\n      this.setCity(v);\n      this.changeCity();\n      this.handleChange();\n    },\n    handleChangeGroup: function handleChangeGroup(v) {\n      this.setGroup(v);\n      this.handleChange();\n    }\n  })\n});\n\n/***/ }),\n/* 445 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(410)();\n// imports\n\n\n// module\nexports.push([module.i, \".city-select,.group-select{display:inline-block;height:36px;margin-top:5px;margin-left:10px;padding:0 10px;min-height:36px}.city-select-field,.group-select-field{width:84px;top:-1px}\", \"\", {\"version\":3,\"sources\":[\"D:/code/vue-dashboard/src/components/units/group.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,qBAAsB,AACtB,YAAa,AACb,eAAgB,AAChB,iBAAkB,AAClB,eAAgB,AAChB,eAAiB,CAClB,AACD,uCACE,WAAY,AACZ,QAAU,CACX\",\"file\":\"group.vue\",\"sourcesContent\":[\"\\n.city-select, .group-select {\\r\\n  display: inline-block;\\r\\n  height: 36px;\\r\\n  margin-top: 5px;\\r\\n  margin-left: 10px;\\r\\n  padding: 0 10px;\\r\\n  min-height: 36px;\\n}\\n.city-select-field, .group-select-field {\\r\\n  width: 84px;\\r\\n  top: -1px;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 446 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(445);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(411)(\"a4925e18\", content, true);\n\n/***/ }),\n/* 447 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(446)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(444),\n  /* template */\n  __webpack_require__(448),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 448 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [(_vm.showCity && _vm.cities && _vm.cities.length) ? _c('div', {\n    staticClass: \"city-select\"\n  }, [_c('mu-select-field', {\n    ref: \"city\",\n    staticClass: \"city-select-field\",\n    attrs: {\n      \"value\": _vm.city\n    },\n    on: {\n      \"change\": _vm.handleChangeCity\n    }\n  }, [_c('mu-menu-item', {\n    attrs: {\n      \"value\": \"\",\n      \"title\": \"全部城市\"\n    }\n  }), _vm._v(\" \"), _vm._l((_vm.cities), function(item) {\n    return _c('mu-menu-item', {\n      key: item.cityCode,\n      attrs: {\n        \"value\": item.cityCode,\n        \"title\": item.cityName\n      }\n    })\n  })], 2)], 1) : _vm._e(), _vm._v(\" \"), (_vm.showGroup && _vm.groups && _vm.groups.length) ? _c('div', {\n    staticClass: \"group-select\"\n  }, [_c('mu-select-field', {\n    ref: \"group\",\n    staticClass: \"group-select-field\",\n    attrs: {\n      \"value\": _vm.group\n    },\n    on: {\n      \"change\": _vm.handleChangeGroup\n    }\n  }, [_c('mu-menu-item', {\n    attrs: {\n      \"value\": \"\",\n      \"title\": \"全部小组\"\n    }\n  }), _vm._v(\" \"), _vm._l((_vm.groups), function(item) {\n    return _c('mu-menu-item', {\n      key: item.leaderId,\n      attrs: {\n        \"value\": item.leaderId,\n        \"title\": item.leaderName\n      }\n    })\n  })], 2)], 1) : _vm._e()])\n},staticRenderFns: []}\n\n/***/ }),\n/* 449 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(549);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 450 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var Model = __webpack_require__(430);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 451 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(418);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 452 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(433);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 453 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 454 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(418);\n    var Element = __webpack_require__(545);\n    var BoundingRect = __webpack_require__(432);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 455 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(440);\n    var vec2 = __webpack_require__(428);\n    var bbox = __webpack_require__(656);\n    var BoundingRect = __webpack_require__(432);\n    var dpr = __webpack_require__(453).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 456 */,\n/* 457 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vuex__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_muse_components_selectField__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_muse_components_menu__ = __webpack_require__(20);\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_1_vue__[\"a\" /* default */].component(__WEBPACK_IMPORTED_MODULE_3_muse_components_selectField__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_3_muse_components_selectField__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_1_vue__[\"a\" /* default */].component(__WEBPACK_IMPORTED_MODULE_4_muse_components_menu__[\"a\" /* menuItem */].name, __WEBPACK_IMPORTED_MODULE_4_muse_components_menu__[\"a\" /* menuItem */]);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'dateSelect',\n  props: {\n    handleChange: {\n      type: Function,\n      default: function _default() {}\n    },\n    showYear: {\n      type: Boolean,\n      default: true\n    },\n    showMonth: {\n      type: Boolean,\n      default: true\n    },\n    showDate: {\n      type: Boolean,\n      default: true\n    },\n    showMonthAll: {\n      type: Boolean,\n      default: true\n    },\n    showDateAll: {\n      type: Boolean,\n      default: true\n    }\n  },\n  mounted: function mounted() {\n    var z = this;\n    if (z.month === '0' && z.showMonthAll === false) {\n      z.handleChangeMonth('01');\n    }\n    if (z.date === '0' && z.showDateAll === false) {\n      z.handleChangeDate('01');\n    }\n  },\n\n  computed: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"a\" /* mapState */])(['year', 'month', 'date'])),\n  methods: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"b\" /* mapMutations */])(['setYear', 'setMonth', 'setDate']), {\n    handleChangeYear: function handleChangeYear(v) {\n      this.setYear(v);\n      this.handleChange();\n    },\n    handleChangeMonth: function handleChangeMonth(v) {\n      this.setMonth(v);\n      if (v === '0') {\n        this.setDate('0');\n      }\n      this.handleChange();\n    },\n    handleChangeDate: function handleChangeDate(v) {\n      this.setDate(v);\n      this.handleChange();\n    }\n  })\n});\n\n/***/ }),\n/* 458 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(410)();\n// imports\n\n\n// module\nexports.push([module.i, \"#yearDropDown{margin-right:-34px}\", \"\", {\"version\":3,\"sources\":[\"D:/code/vue-dashboard/src/components/units/dateSelect.vue\"],\"names\":[],\"mappings\":\"AA2IA,cACE,kBAAoB,CACrB\",\"file\":\"dateSelect.vue\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\r\\n/*.date-select, .group-select {\\r\\n  display: inline-block;\\r\\n  height: 36px;\\r\\n  margin-top: 5px;\\r\\n  margin-left: 10px;\\r\\n  padding: 0 10px;\\r\\n  min-height: 36px;\\r\\n}\\r\\n.date-select-field, .group-select-field {\\r\\n  width: 84px;\\r\\n  top: -1px;\\r\\n}*/\\n#yearDropDown {\\r\\n  margin-right: -34px;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 459 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(418);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 460 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(510);\n    var completeDimensions = __webpack_require__(511);\n    var zrUtil = __webpack_require__(418);\n    var modelUtil = __webpack_require__(421);\n    var CoordinateSystem = __webpack_require__(459);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 461 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var formatUtil = __webpack_require__(431);\n    var zrUtil = __webpack_require__(418);\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 462 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 463 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var formatUtil = __webpack_require__(431);\n    var classUtil = __webpack_require__(433);\n    var modelUtil = __webpack_require__(421);\n    var ComponentModel = __webpack_require__(434);\n    var colorPaletteMixin = __webpack_require__(512);\n    var env = __webpack_require__(427);\n    var layout = __webpack_require__(436);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 464 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(422);\n    var formatUtil = __webpack_require__(431);\n    var Scale = __webpack_require__(452);\n    var helper = __webpack_require__(513);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         */\n        niceTicks: function (splitNumber, minInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval=false]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 465 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var clazz = __webpack_require__(433);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 466 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(420);\n    var BoundingRect = __webpack_require__(432);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 467 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(458);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(411)(\"788691bc\", content, true);\n\n/***/ }),\n/* 468 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(467)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(457),\n  /* template */\n  __webpack_require__(469),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 469 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('div', {\n    staticClass: \"date-select\"\n  }, [(_vm.showYear) ? _c('mu-dropDown-menu', {\n    attrs: {\n      \"value\": _vm.year,\n      \"id\": \"yearDropDown\"\n    },\n    on: {\n      \"change\": _vm.handleChangeYear\n    }\n  }, [_c('mu-menu-item', {\n    attrs: {\n      \"value\": \"2017\",\n      \"title\": \"2017年\"\n    }\n  }), _vm._v(\" \"), _c('mu-menu-item', {\n    attrs: {\n      \"value\": \"2018\",\n      \"title\": \"2018年\"\n    }\n  }), _vm._v(\" \"), _c('mu-menu-item', {\n    attrs: {\n      \"value\": \"2019\",\n      \"title\": \"2019年\"\n    }\n  }), _vm._v(\" \"), _c('mu-menu-item', {\n    attrs: {\n      \"value\": \"2020\",\n      \"title\": \"2020年\"\n    }\n  }), _vm._v(\" \"), _c('mu-menu-item', {\n    attrs: {\n      \"value\": \"2020\",\n      \"title\": \"2021年\"\n    }\n  }), _vm._v(\" \"), _c('mu-menu-item', {\n    attrs: {\n      \"value\": \"2020\",\n      \"title\": \"2022年\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (_vm.showMonth) ? _c('mu-dropDown-menu', {\n    attrs: {\n      \"value\": _vm.month,\n      \"id\": \"monthDropDown\",\n      \"maxHeight\": 480\n    },\n    on: {\n      \"change\": _vm.handleChangeMonth\n    }\n  }, [(_vm.showMonthAll) ? _c('mu-menu-item', {\n    attrs: {\n      \"value\": \"0\",\n      \"title\": \"全年\"\n    }\n  }) : _vm._e(), _vm._v(\" \"), _vm._l((12), function(n) {\n    return _c('mu-menu-item', {\n      key: n,\n      attrs: {\n        \"value\": n < 10 ? ('0' + n) : n.toString(),\n        \"title\": n + '月'\n      }\n    })\n  })], 2) : _vm._e(), _vm._v(\" \"), (_vm.showDate) ? _c('mu-dropDown-menu', {\n    attrs: {\n      \"value\": _vm.date,\n      \"id\": \"dateDropDown\",\n      \"maxHeight\": 480,\n      \"disabled\": _vm.month === '0'\n    },\n    on: {\n      \"change\": _vm.handleChangeDate\n    }\n  }, [(_vm.showDateAll) ? _c('mu-menu-item', {\n    attrs: {\n      \"value\": \"0\",\n      \"title\": \"全月\"\n    }\n  }) : _vm._e(), _vm._v(\" \"), _vm._l(((new Date(_vm.year, _vm.month, 0)).getDate()), function(n) {\n    return _c('mu-menu-item', {\n      key: n,\n      attrs: {\n        \"value\": n < 10 ? ('0' + n) : n.toString(),\n        \"title\": n + '日'\n      }\n    })\n  })], 2) : _vm._e()], 1)])\n},staticRenderFns: []}\n\n/***/ }),\n/* 470 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 471 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(418);\n\n    var Style = __webpack_require__(554);\n\n    var Element = __webpack_require__(545);\n    var RectText = __webpack_require__(665);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 472 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 473 */,\n/* 474 */,\n/* 475 */,\n/* 476 */,\n/* 477 */,\n/* 478 */,\n/* 479 */,\n/* 480 */,\n/* 481 */,\n/* 482 */,\n/* 483 */,\n/* 484 */,\n/* 485 */,\n/* 486 */,\n/* 487 */,\n/* 488 */,\n/* 489 */,\n/* 490 */,\n/* 491 */,\n/* 492 */,\n/* 493 */,\n/* 494 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(418);\n    var symbolUtil = __webpack_require__(466);\n    var graphic = __webpack_require__(420);\n    var numberUtil = __webpack_require__(422);\n    var labelHelper = __webpack_require__(567);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, elStyle, seriesModel, labelModel, color\n        );\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, hoverItemStyle, seriesModel, hoverLabelModel, color\n        );\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n/* 495 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var modelUtil = __webpack_require__(421);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n/* 496 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(427);\n    var zrUtil = __webpack_require__(418);\n    var get = __webpack_require__(421).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n/* 497 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var graphic = __webpack_require__(420);\n    var textContain = __webpack_require__(437);\n    var formatUtil = __webpack_require__(431);\n    var matrix = __webpack_require__(442);\n    var axisHelper = __webpack_require__(439);\n    var AxisBuilder = __webpack_require__(498);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 498 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var formatUtil = __webpack_require__(431);\n    var graphic = __webpack_require__(420);\n    var Model = __webpack_require__(430);\n    var numberUtil = __webpack_require__(422);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(428);\n    var matrix = __webpack_require__(442);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 499 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(450);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(419).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n/* 500 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 501 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = __webpack_require__(418);\n    var env = __webpack_require__(427);\n    var echarts = __webpack_require__(419);\n    var modelUtil = __webpack_require__(421);\n    var helper = __webpack_require__(461);\n    var AxisProxy = __webpack_require__(582);\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty' or 'weakFilter'.\n                                    // 'filter': data items which are out of window will be removed. This option is\n                                    //          applicable when filtering outliers. For each data item, it will be\n                                    //          filtered if one of the relevant dimensions is out of the window.\n                                    // 'weakFilter': data items which are out of window will be removed. This option\n                                    //          is applicable when filtering outliers. For each data item, it will be\n                                    //          filtered only if all  of the relevant dimensions are out of the same\n                                    //          side of the window.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // 'none': Do not filter.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null,         // End value. If endValue specified, end is ignored.\n            minSpan: null,          // 0 ~ 100\n            maxSpan: null,          // 0 ~ 100\n            minValueSpan: null,     // The range of dataZoom can not be smaller than that.\n            maxValueSpan: null      // The range of dataZoom can not be larger than that.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n         *      corresponding to the axisModel\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function (axisModel) {\n            if (axisModel) {\n                return axisModel.__dzAxisProxy;\n            }\n\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var rangePropMode = dataZoomModel._rangePropMode;\n            if (rawOption[names[0]] != null) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (rawOption[names[1]] != null) {\n                rangePropMode[index] = 'value';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n/***/ }),\n/* 502 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ComponentView = __webpack_require__(516);\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n/***/ }),\n/* 503 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file History manager.\n */\n\n\n    var zrUtil = __webpack_require__(418);\n    var each = zrUtil.each;\n\n    var ATTR = '\\0_ec_hist_store';\n\n    var history = {\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n         */\n        push: function (ecModel, newSnapshot) {\n            var store = giveStore(ecModel);\n\n            // If previous dataZoom can not be found,\n            // complete an range with current range.\n            each(newSnapshot, function (batchItem, dataZoomId) {\n                var i = store.length - 1;\n                for (; i >= 0; i--) {\n                    var snapshot = store[i];\n                    if (snapshot[dataZoomId]) {\n                        break;\n                    }\n                }\n                if (i < 0) {\n                    // No origin range set, create one by current range.\n                    var dataZoomModel = ecModel.queryComponents(\n                        {mainType: 'dataZoom', subType: 'select', id: dataZoomId}\n                    )[0];\n                    if (dataZoomModel) {\n                        var percentRange = dataZoomModel.getPercentRange();\n                        store[0][dataZoomId] = {\n                            dataZoomId: dataZoomId,\n                            start: percentRange[0],\n                            end: percentRange[1]\n                        };\n                    }\n                }\n            });\n\n            store.push(newSnapshot);\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object} snapshot\n         */\n        pop: function (ecModel) {\n            var store = giveStore(ecModel);\n            var head = store[store.length - 1];\n            store.length > 1 && store.pop();\n\n            // Find top for all dataZoom.\n            var snapshot = {};\n            each(head, function (batchItem, dataZoomId) {\n                for (var i = store.length - 1; i >= 0; i--) {\n                    var batchItem = store[i][dataZoomId];\n                    if (batchItem) {\n                        snapshot[dataZoomId] = batchItem;\n                        break;\n                    }\n                }\n            });\n\n            return snapshot;\n        },\n\n        /**\n         * @public\n         */\n        clear: function (ecModel) {\n            ecModel[ATTR] = null;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {number} records. always >= 1.\n         */\n        count: function (ecModel) {\n            return giveStore(ecModel).length;\n        }\n\n    };\n\n    /**\n     * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n     * History length of each dataZoom may be different.\n     * this._history[0] is used to store origin range.\n     * @type {Array.<Object>}\n     */\n    function giveStore(ecModel) {\n        var store = ecModel[ATTR];\n        if (!store) {\n            store = ecModel[ATTR] = [{}];\n        }\n        return store;\n    }\n\n    module.exports = history;\n\n\n\n/***/ }),\n/* 504 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(420);\n    var zrUtil = __webpack_require__(418);\n    var echarts = __webpack_require__(419);\n\n    __webpack_require__(509);\n\n    __webpack_require__(573);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n/* 505 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(436);\n    var formatUtil = __webpack_require__(431);\n    var graphic = __webpack_require__(420);\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n/***/ }),\n/* 506 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(422);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(418);\n    var axisHelper = __webpack_require__(439);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getModel('textStyle').getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 507 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var axisHelper = __webpack_require__(439);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 508 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(434);\n    var zrUtil = __webpack_require__(418);\n    var axisModelCreator = __webpack_require__(613);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(507));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n/* 509 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(436);\n    var axisHelper = __webpack_require__(439);\n\n    var zrUtil = __webpack_require__(418);\n    var Cartesian2D = __webpack_require__(616);\n    var Axis2D = __webpack_require__(614);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(617);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (\n                        axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis)\n                    )) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(459).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n/* 510 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(430);\n    var DataDiffer = __webpack_require__(462);\n\n    var zrUtil = __webpack_require__(418);\n    var modelUtil = __webpack_require__(421);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(100)))\n\n/***/ }),\n/* 511 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(418);\n    var modelUtil = __webpack_require__(421);\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                    // coordDim === 'value' && valueCandidate == null && (valueCandidate = resultDimIdx);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                // coordDim === 'value' && valueCandidate == null && (valueCandidate = resultDimIdx);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                // Ensure At least one value dim.\n                // (dataDimNameMap.get('value') == null\n                //     && (valueCandidate == null || valueCandidate === resultDimIdx)\n                //     // Try to set as 'value' only if coordDim is not set as 'extra'.\n                //     && coordDim == null\n                // )\n                // ? 'value'\n                // :\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 512 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(433);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 513 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(422);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = numberUtil.getPrecisionSafe(interval) + 2;\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 514 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 515 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(454);\n    var componentUtil = __webpack_require__(465);\n    var clazzUtil = __webpack_require__(433);\n    var modelUtil = __webpack_require__(421);\n    var zrUtil = __webpack_require__(418);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 516 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(454);\n    var componentUtil = __webpack_require__(465);\n    var clazzUtil = __webpack_require__(433);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 517 */,\n/* 518 */,\n/* 519 */,\n/* 520 */,\n/* 521 */,\n/* 522 */,\n/* 523 */,\n/* 524 */,\n/* 525 */,\n/* 526 */,\n/* 527 */,\n/* 528 */,\n/* 529 */,\n/* 530 */,\n/* 531 */,\n/* 532 */,\n/* 533 */,\n/* 534 */,\n/* 535 */,\n/* 536 */,\n/* 537 */,\n/* 538 */,\n/* 539 */,\n/* 540 */,\n/* 541 */,\n/* 542 */,\n/* 543 */,\n/* 544 */,\n/* 545 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(550);\n    var Eventful = __webpack_require__(443);\n    var Transformable = __webpack_require__(556);\n    var Animatable = __webpack_require__(675);\n    var zrUtil = __webpack_require__(418);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 546 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(647);\n    var color = __webpack_require__(449);\n    var util = __webpack_require__(418);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 547 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n/* 548 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 549 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 550 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 551 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(453);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 552 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(471);\n    var BoundingRect = __webpack_require__(432);\n    var zrUtil = __webpack_require__(418);\n\n    var LRU = __webpack_require__(549);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 553 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 554 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 555 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(664);\n    var smoothBezier = __webpack_require__(663);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 556 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(442);\n    var vector = __webpack_require__(428);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 557 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts__ = __webpack_require__(419);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_debounce__ = __webpack_require__(639);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_debounce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_debounce__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue__ = __webpack_require__(2);\n\n\n\n\n\n\nvar ACTION_EVENTS = ['legendselectchanged', 'legendselected', 'legendunselected', 'datazoom', 'datarangeselected', 'timelinechanged', 'timelineplaychanged', 'restore', 'dataviewchanged', 'magictypechanged', 'geoselectchanged', 'geoselected', 'geounselected', 'pieselectchanged', 'pieselected', 'pieunselected', 'mapselectchanged', 'mapselected', 'mapunselected', 'axisareaselected', 'brush', 'brushselected'];\n\nvar MOUSE_EVENTS = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousedown', 'mouseup', 'globalout'];\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  props: {\n    options: Object,\n    theme: String,\n    initOptions: Object,\n    group: String,\n    autoResize: Boolean\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n  computed: {\n    width: {\n      cache: false,\n      get: function get() {\n        return this._delegateGet('width', 'getWidth');\n      }\n    },\n    height: {\n      cache: false,\n      get: function get() {\n        return this._delegateGet('height', 'getHeight');\n      }\n    },\n    isDisposed: {\n      cache: false,\n      get: function get() {\n        return !!this._delegateGet('isDisposed', 'isDisposed');\n      }\n    },\n    computedOptions: {\n      cache: false,\n      get: function get() {\n        return this._delegateGet('computedOptions', 'getOption');\n      }\n    }\n  },\n  watch: {\n    options: {\n      handler: function handler(options) {\n        if (!this.chart && options) {\n          this._init();\n        } else {\n          this.chart.setOption(this.options, true);\n        }\n      },\n\n      deep: true\n    },\n    group: {\n      handler: function handler(group) {\n        this.chart.group = group;\n      }\n    }\n  },\n  methods: {\n    mergeOptions: function mergeOptions(options) {\n      this._delegateMethod('setOption', options);\n    },\n    resize: function resize(options) {\n      this._delegateMethod('resize', options);\n    },\n    dispatchAction: function dispatchAction(payload) {\n      this._delegateMethod('dispatchAction', payload);\n    },\n    convertToPixel: function convertToPixel(finder, value) {\n      return this._delegateMethod('convertToPixel', finder, value);\n    },\n    convertFromPixel: function convertFromPixel(finder, value) {\n      return this._delegateMethod('convertFromPixel', finder, value);\n    },\n    containPixel: function containPixel(finder, value) {\n      return this._delegateMethod('containPixel', finder, value);\n    },\n    showLoading: function showLoading(type, options) {\n      this._delegateMethod('showLoading', type, options);\n    },\n    hideLoading: function hideLoading() {\n      this._delegateMethod('hideLoading');\n    },\n    getDataURL: function getDataURL(options) {\n      return this._delegateMethod('getDataURL', options);\n    },\n    getConnectedDataURL: function getConnectedDataURL(options) {\n      return this._delegateMethod('getConnectedDataURL', options);\n    },\n    clear: function clear() {\n      this._delegateMethod('clear');\n    },\n    dispose: function dispose() {\n      this._delegateMethod('dispose');\n    },\n    _delegateMethod: function _delegateMethod(name) {\n      var _chart;\n\n      if (!this.chart) {\n        __WEBPACK_IMPORTED_MODULE_2_vue__[\"a\" /* default */].util.warn('Cannot call [' + name + '] before the chart is initialized. Set prop [options] first.', this);\n        return;\n      }\n\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return (_chart = this.chart)[name].apply(_chart, args);\n    },\n    _delegateGet: function _delegateGet(name, method) {\n      if (!this.chart) {\n        __WEBPACK_IMPORTED_MODULE_2_vue__[\"a\" /* default */].util.warn('Cannot get [' + name + '] before the chart is initialized. Set prop [options] first.', this);\n      }\n      return this.chart[method]();\n    },\n    _init: function _init() {\n      var _this = this;\n\n      if (this.chart) {\n        return;\n      }\n\n      var chart = __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default.a.init(this.$el, this.theme, this.initOptions);\n\n      if (this.group) {\n        chart.group = this.group;\n      }\n\n      chart.setOption(this.options, true);\n\n      ACTION_EVENTS.forEach(function (event) {\n        chart.on(event, function (params) {\n          _this.$emit(event, params);\n        });\n      });\n      MOUSE_EVENTS.forEach(function (event) {\n        chart.on(event, function (params) {\n          _this.$emit(event, params);\n\n          _this.$emit('chart' + event, params);\n        });\n      });\n\n      if (this.autoResize) {\n        this.__resizeHanlder = __WEBPACK_IMPORTED_MODULE_1_lodash_debounce___default()(function () {\n          chart.resize();\n        }, 100, { leading: true });\n        window.addEventListener('resize', this.__resizeHanlder);\n      }\n\n      this.chart = chart;\n    }\n  },\n  mounted: function mounted() {\n    if (this.options) {\n      this._init();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n    if (this.autoResize) {\n      window.removeEventListener('resize', this.__resizeHanlder);\n    }\n    this.dispose();\n  },\n  connect: function connect(group) {\n    if (typeof group !== 'string') {\n      group = group.map(function (chart) {\n        return chart.chart;\n      });\n    }\n    __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default.a.connect(group);\n  },\n  disconnect: function disconnect(group) {\n    __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default.a.disConnect(group);\n  },\n  registerMap: function registerMap() {\n    __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default.a.registerMap.apply(__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default.a, arguments);\n  },\n  registerTheme: function registerTheme() {\n    __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default.a.registerTheme.apply(__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default.a, arguments);\n  }\n});\n\n/***/ }),\n/* 558 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(410)();\n// imports\n\n\n// module\nexports.push([module.i, \".echarts{width:600px;height:400px}\", \"\", {\"version\":3,\"sources\":[\"D:/code/vue-dashboard/node_modules/vue-echarts/components/ECharts.vue\"],\"names\":[],\"mappings\":\"AACA,SACE,YAAa,AACb,YAAc,CACf\",\"file\":\"ECharts.vue\",\"sourcesContent\":[\"\\n.echarts {\\n  width: 600px;\\n  height: 400px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 559 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(418);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 560 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n\n    __webpack_require__(509);\n\n    __webpack_require__(561);\n    __webpack_require__(562);\n\n    var barLayoutGrid = __webpack_require__(619);\n    var echarts = __webpack_require__(419);\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    __webpack_require__(504);\n\n\n/***/ }),\n/* 561 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(563).extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n/***/ }),\n/* 562 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var graphic = __webpack_require__(420);\n    var helper = __webpack_require__(565);\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(__webpack_require__(430).prototype, __webpack_require__(564));\n\n    var BarView = __webpack_require__(419).extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d'\n                || coordinateSystemType === 'polar'\n            ) {\n                this._render(seriesModel, ecModel, api);\n            }\n            else if (__DEV__) {\n                console.warn('Only cartesian2d and polar supported for bar.');\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _render: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var coord = seriesModel.coordinateSystem;\n            var baseAxis = coord.getBaseAxis();\n            var isHorizontalOrRadial;\n\n            if (coord.type === 'cartesian2d') {\n                isHorizontalOrRadial = baseAxis.isHorizontal();\n            }\n            else if (coord.type === 'polar') {\n                isHorizontalOrRadial = baseAxis.dim === 'angle';\n            }\n\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\n                    var el = elementCreator[coord.type](\n                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\n                    );\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, dataIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = elementCreator[coord.type](\n                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\n                        );\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, newIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    if (coord.type === 'cartesian2d') {\n                        el && removeRect(dataIndex, animationModel, el);\n                    }\n                    else {\n                        el && removeSector(dataIndex, animationModel, el);\n                    }\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        if (el.type === 'sector') {\n                            removeSector(el.dataIndex, ecModel, el);\n                        }\n                        else {\n                            removeRect(el.dataIndex, ecModel, el);\n                        }\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    var elementCreator = {\n\n        cartesian2d: function (\n            data, dataIndex, itemModel, layout, isHorizontal,\n            animationModel, isUpdate\n        ) {\n            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var rectShape = rect.shape;\n                var animateProperty = isHorizontal ? 'height' : 'width';\n                var animateTarget = {};\n                rectShape[animateProperty] = 0;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return rect;\n        },\n\n        polar: function (\n            data, dataIndex, itemModel, layout, isRadial,\n            animationModel, isUpdate\n        ) {\n            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var sectorShape = sector.shape;\n                var animateProperty = isRadial ? 'r' : 'endAngle';\n                var animateTarget = {};\n                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return sector;\n        }\n    };\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function removeSector(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                r: el.shape.r0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    var getLayout = {\n        cartesian2d: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            var fixedLineWidth = getLineWidth(itemModel, layout);\n\n            // fix layout with lineWidth\n            var signX = layout.width > 0 ? 1 : -1;\n            var signY = layout.height > 0 ? 1 : -1;\n            return {\n                x: layout.x + signX * fixedLineWidth / 2,\n                y: layout.y + signY * fixedLineWidth / 2,\n                width: layout.width - signX * fixedLineWidth,\n                height: layout.height - signY * fixedLineWidth\n            };\n        },\n\n        polar: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            return {\n                cx: layout.cx,\n                cy: layout.cy,\n                r0: layout.r0,\n                r: layout.r,\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n            };\n        }\n    };\n\n    function updateStyle(\n        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\n    ) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        if (!isPolar && isHorizontal) {\n            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n        }\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        if (!isPolar) {\n            helper.setLabel(\n                el.style, hoverStyle, itemModel, color,\n                seriesModel, dataIndex, labelPositionOutside\n            );\n        }\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n/***/ }),\n/* 563 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(463);\n    var createListFromArray = __webpack_require__(460);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n            // 最小角度为0，仅对极坐标系下的柱状图有效\n            barMinAngle: 0,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n/***/ }),\n/* 564 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var getBarItemStyle = __webpack_require__(451)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n/***/ }),\n/* 565 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var graphic = __webpack_require__(420);\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 566 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(420);\n    var Symbol = __webpack_require__(494);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n/* 567 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = __webpack_require__(420);\n    var zrUtil = __webpack_require__(418);\n    var modelUtil = __webpack_require__(421);\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    helper.setTextToStyle = function (\n        data, dataIndex, valueDim, elStyle, seriesModel, labelModel, color\n    ) {\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                data.get(valueDim, dataIndex)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 568 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var echarts = __webpack_require__(419);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(569);\n    __webpack_require__(570);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(637), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(620), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(632), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(504);\n\n\n/***/ }),\n/* 569 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(460);\n    var SeriesModel = __webpack_require__(463);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n/* 570 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(418);\n    var SymbolDraw = __webpack_require__(566);\n    var Symbol = __webpack_require__(494);\n    var lineAnimationDiff = __webpack_require__(571);\n    var graphic = __webpack_require__(420);\n    var modelUtil = __webpack_require__(421);\n    var polyHelper = __webpack_require__(572);\n    var ChartView = __webpack_require__(515);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n/* 571 */\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n/* 572 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(429);\n    var vec2 = __webpack_require__(428);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n/* 573 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(508);\n\n    __webpack_require__(580);\n\n\n/***/ }),\n/* 574 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(419);\n    var axisPointerModelHelper = __webpack_require__(450);\n    var axisTrigger = __webpack_require__(579);\n    var zrUtil = __webpack_require__(418);\n\n    __webpack_require__(575);\n    __webpack_require__(576);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(578);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, function (payload, ecModel, api) {\n        var outputFinder = axisTrigger(\n            ecModel.getComponent('axisPointer').coordSysAxesInfo,\n            payload.currTrigger,\n            [payload.x, payload.y],\n            payload,\n            payload.dispatchAction || zrUtil.bind(api.dispatchAction, api),\n            ecModel,\n            api,\n            payload.tooltipOption\n        );\n\n        return outputFinder;\n    });\n\n\n\n/***/ }),\n/* 575 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(419);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n/* 576 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(496);\n\n    var AxisPonterView = __webpack_require__(419).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n/* 577 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var clazzUtil = __webpack_require__(433);\n    var graphic = __webpack_require__(420);\n    var get = __webpack_require__(421).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(450);\n    var eventTool = __webpack_require__(441);\n    var throttle = __webpack_require__(514);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n/* 578 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(420);\n    var BaseAxisPointer = __webpack_require__(577);\n    var viewHelper = __webpack_require__(497);\n    var cartesianAxisHelper = __webpack_require__(500);\n    var AxisView = __webpack_require__(499);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n/* 579 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var modelUtil = __webpack_require__(421);\n    var modelHelper = __webpack_require__(450);\n    var findPointFromSeries = __webpack_require__(495);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {string} [currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [point] x and y, which are mandatory, specify a point to\n     *              tigger axisPointer and tooltip.\n     * @param {Object} [finder] {\n     *                  seriesIndex, dataIndex,\n     *                  axesInfo: [{\n     *                      axisDim: 'x'|'y'|'angle'|..., axisIndex: ..., value: ...\n     *                  }, ...]\n     *              }\n     *              These properties, which are optional, restrict target axes.\n     * @param {Function} dispatchAction\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [tooltipOption]\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(\n        coordSysAxesInfo, currTrigger, point, finder, dispatchAction,\n        ecModel, api, tooltipOption\n    ) {\n        finder = finder || {};\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: tooltipOption,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n/* 580 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var graphic = __webpack_require__(420);\n    var AxisBuilder = __webpack_require__(498);\n    var AxisView = __webpack_require__(499);\n    var cartesianAxisHelper = __webpack_require__(500);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n/***/ }),\n/* 581 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * DataZoom component entry\n */\n\n\n    __webpack_require__(587);\n\n    __webpack_require__(501);\n    __webpack_require__(502);\n\n    __webpack_require__(583);\n    __webpack_require__(584);\n\n    __webpack_require__(586);\n    __webpack_require__(585);\n\n\n\n/***/ }),\n/* 582 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Axis operator\n */\n\n\n    var zrUtil = __webpack_require__(418);\n    var numberUtil = __webpack_require__(422);\n    var helper = __webpack_require__(461);\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n         * @private\n         * @type {Object}\n         */\n        this._minMaxSpan;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        getMinMaxSpan: function () {\n            return zrUtil.clone(this._minMaxSpan);\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            setMinMaxSpan(this);\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            if (filterMode === 'none') {\n                return;\n            }\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n                var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n                if (filterMode === 'weakFilter') {\n                    seriesData && seriesData.filterSelf(function (dataIndex) {\n                        var leftOut;\n                        var rightOut;\n                        var hasValue;\n                        for (var i = 0; i < dataDims.length; i++) {\n                            var value = seriesData.get(dataDims[i], dataIndex);\n                            var thisHasValue = !isNaN(value);\n                            var thisLeftOut = value < valueWindow[0];\n                            var thisRightOut = value > valueWindow[1];\n                            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n                                return true;\n                            }\n                            thisHasValue && (hasValue = true);\n                            thisLeftOut && (leftOut = true);\n                            thisRightOut && (rightOut = true);\n                        }\n                        // If both left out and right out, do not filter.\n                        return hasValue && leftOut && rightOut;\n                    });\n                }\n                else {\n                    seriesData && each(dataDims, function (dim) {\n                        if (filterMode === 'empty') {\n                            seriesModel.setData(\n                                seriesData.map(dim, function (value) {\n                                    return !isInWindow(value) ? NaN : value;\n                                })\n                            );\n                        }\n                        else {\n                            seriesData.filterSelf(dim, isInWindow);\n                        }\n                    });\n                }\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    function setMinMaxSpan(axisProxy) {\n        var minMaxSpan = axisProxy._minMaxSpan = {};\n        var dataZoomModel = axisProxy._dataZoomModel;\n\n        each(['min', 'max'], function (minMax) {\n            minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span');\n\n            // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n            var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n            if (valueSpan != null) {\n                minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n\n                valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n                if (valueSpan != null) {\n                    minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(\n                        valueSpan, axisProxy._dataExtent, [0, 100], true\n                    );\n                }\n            }\n        });\n    }\n\n    module.exports = AxisProxy;\n\n\n\n/***/ }),\n/* 583 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = __webpack_require__(501);\n\n    module.exports = DataZoomModel.extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n/***/ }),\n/* 584 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(502).extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n/***/ }),\n/* 585 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = __webpack_require__(418);\n    var helper = __webpack_require__(461);\n    var echarts = __webpack_require__(419);\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n/***/ }),\n/* 586 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom processor\n */\n\n\n    var echarts = __webpack_require__(419);\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n/***/ }),\n/* 587 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(434).registerSubTypeDefaulter('dataZoom', function (option) {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n/***/ }),\n/* 588 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Box selection tool.\n *\n * @module echarts/component/helper/BrushController\n */\n\n\n\n    var Eventful = __webpack_require__(443);\n    var zrUtil = __webpack_require__(418);\n    var graphic = __webpack_require__(420);\n    var interactionMutex = __webpack_require__(592);\n    var DataDiffer = __webpack_require__(462);\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var map = zrUtil.map;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathPow = Math.pow;\n\n    var COVER_Z = 10000;\n    var UNSELECT_THRESHOLD = 6;\n    var MIN_RESIZE_LINE_WIDTH = 6;\n    var MUTEX_RESOURCE_KEY = 'globalPan';\n\n    var DIRECTION_MAP = {\n        w: [0, 0],\n        e: [0, 1],\n        n: [1, 0],\n        s: [1, 1]\n    };\n    var CURSOR_MAP = {\n        w: 'ew',\n        e: 'ew',\n        n: 'ns',\n        s: 'ns',\n        ne: 'nesw',\n        sw: 'nesw',\n        nw: 'nwse',\n        se: 'nwse'\n    };\n    var DEFAULT_BRUSH_OPT = {\n        brushStyle: {\n            lineWidth: 2,\n            stroke: 'rgba(0,0,0,0.3)',\n            fill: 'rgba(0,0,0,0.1)'\n        },\n        transformable: true,\n        brushMode: 'single',\n        removeOnClick: false\n    };\n\n    var baseUID = 0;\n\n    /**\n     * @alias module:echarts/component/helper/BrushController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     * @event module:echarts/component/helper/BrushController#brush\n     *        params:\n     *            areas: Array.<Array>, coord relates to container group,\n     *                                    If no container specified, to global.\n     *            opt {\n     *                isEnd: boolean,\n     *                removeOnClick: boolean\n     *            }\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function BrushController(zr) {\n\n        if (__DEV__) {\n            zrUtil.assert(zr);\n        }\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:zrender/zrender~ZRender}\n         * @private\n         */\n        this._zr = zr;\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *     'line', 'rect', 'polygon' or false\n         *     If passing false/null/undefined, disable brush.\n         *     If passing 'auto', determined by panel.defaultBrushType\n         * @private\n         * @type {string}\n         */\n        this._brushType;\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *\n         * @private\n         * @type {Object}\n         */\n        this._brushOption;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._panels;\n\n        /**\n         * @private\n         * @type {Array.<nubmer>}\n         */\n        this._track = [];\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._dragging;\n\n        /**\n         * @private\n         * @type {Array}\n         */\n        this._covers = [];\n\n        /**\n         * @private\n         * @type {moudule:zrender/container/Group}\n         */\n        this._creatingCover;\n\n        /**\n         * `true` means global panel\n         * @private\n         * @type {module:zrender/container/Group|boolean}\n         */\n        this._creatingPanel;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._enableGlobalPan;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        if (__DEV__) {\n            this._mounted;\n        }\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._uid = 'brushController_' + baseUID++;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._handlers = {};\n        each(mouseHandlers, function (handler, eventName) {\n            this._handlers[eventName] = zrUtil.bind(handler, this);\n        }, this);\n    }\n\n    BrushController.prototype = {\n\n        constructor: BrushController,\n\n        /**\n         * If set to null/undefined/false, select disabled.\n         * @param {Object} brushOption\n         * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n         *                          If passing false/null/undefined, disable brush.\n         *                          If passing 'auto', determined by panel.defaultBrushType.\n         *                              ('auto' can not be used in global panel)\n         * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n         * @param {boolean} [brushOption.transformable=true]\n         * @param {boolean} [brushOption.removeOnClick=false]\n         * @param {Object} [brushOption.brushStyle]\n         * @param {number} [brushOption.brushStyle.width]\n         * @param {number} [brushOption.brushStyle.lineWidth]\n         * @param {string} [brushOption.brushStyle.stroke]\n         * @param {string} [brushOption.brushStyle.fill]\n         * @param {number} [brushOption.z]\n         */\n        enableBrush: function (brushOption) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            this._brushType && doDisableBrush(this);\n            brushOption.brushType && doEnableBrush(this, brushOption);\n\n            return this;\n        },\n\n        /**\n         * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n         *        Each items: {\n         *            panelId, // mandatory.\n         *            clipPath, // mandatory. function.\n         *            isTargetByCursor, // mandatory. function.\n         *            defaultBrushType, // optional, only used when brushType is 'auto'.\n         *            getLinearBrushOtherExtent, // optional. function.\n         *        }\n         */\n        setPanels: function (panelOpts) {\n            if (panelOpts && panelOpts.length) {\n                var panels = this._panels = {};\n                zrUtil.each(panelOpts, function (panelOpts) {\n                    panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n                });\n            }\n            else {\n                this._panels = null;\n            }\n            return this;\n        },\n\n        /**\n         * @param {Object} [opt]\n         * @return {boolean} [opt.enableGlobalPan=false]\n         */\n        mount: function (opt) {\n            opt = opt || {};\n\n            if (__DEV__) {\n                this._mounted = true; // should be at first.\n            }\n\n            this._enableGlobalPan = opt.enableGlobalPan;\n\n            var thisGroup = this.group;\n            this._zr.add(thisGroup);\n\n            thisGroup.attr({\n                position: opt.position || [0, 0],\n                rotation: opt.rotation || 0,\n                scale: opt.scale || [1, 1]\n            });\n            this._transform = thisGroup.getLocalTransform();\n\n            return this;\n        },\n\n        eachCover: function (cb, context) {\n            each(this._covers, cb, context);\n        },\n\n        /**\n         * Update covers.\n         * @param {Array.<Object>} brushOptionList Like:\n         *        [\n         *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n         *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n         *            ...\n         *        ]\n         *        `brushType` is required in each cover info. (can not be 'auto')\n         *        `id` is not mandatory.\n         *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n         *        If brushOptionList is null/undefined, all covers removed.\n         */\n        updateCovers: function (brushOptionList) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n                return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n            });\n\n            var tmpIdPrefix = '\\0-brush-index-';\n            var oldCovers = this._covers;\n            var newCovers = this._covers = [];\n            var controller = this;\n            var creatingCover = this._creatingCover;\n\n            (new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey))\n                .add(addOrUpdate)\n                .update(addOrUpdate)\n                .remove(remove)\n                .execute();\n\n            return this;\n\n            function getKey(brushOption, index) {\n                return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index)\n                    + '-' + brushOption.brushType;\n            }\n\n            function oldGetKey(cover, index) {\n                return getKey(cover.__brushOption, index);\n            }\n\n            function addOrUpdate(newIndex, oldIndex) {\n                var newBrushOption = brushOptionList[newIndex];\n                // Consider setOption in event listener of brushSelect,\n                // where updating cover when creating should be forbiden.\n                if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n                    newCovers[newIndex] = oldCovers[oldIndex];\n                }\n                else {\n                    var cover = newCovers[newIndex] = oldIndex != null\n                        ? (\n                            oldCovers[oldIndex].__brushOption = newBrushOption,\n                            oldCovers[oldIndex]\n                        )\n                        : endCreating(controller, createCover(controller, newBrushOption));\n                    updateCoverAfterCreation(controller, cover);\n                }\n            }\n\n            function remove(oldIndex) {\n                if (oldCovers[oldIndex] !== creatingCover) {\n                    controller.group.remove(oldCovers[oldIndex]);\n                }\n            }\n        },\n\n        unmount: function () {\n            if (__DEV__) {\n                if (!this._mounted) {\n                    return;\n                }\n            }\n\n            this.enableBrush(false);\n\n            // container may 'removeAll' outside.\n            clearCovers(this);\n            this._zr.remove(this.group);\n\n            if (__DEV__) {\n                this._mounted = false; // should be at last.\n            }\n\n            return this;\n        },\n\n        dispose: function () {\n            this.unmount();\n            this.off();\n        }\n    };\n\n    zrUtil.mixin(BrushController, Eventful);\n\n    function doEnableBrush(controller, brushOption) {\n        var zr = controller._zr;\n\n        // Consider roam, which takes globalPan too.\n        if (!controller._enableGlobalPan) {\n            interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n        }\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.on(eventName, handler);\n        });\n\n        controller._brushType = brushOption.brushType;\n        controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    }\n\n    function doDisableBrush(controller) {\n        var zr = controller._zr;\n\n        interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.off(eventName, handler);\n        });\n\n        controller._brushType = controller._brushOption = null;\n    }\n\n    function createCover(controller, brushOption) {\n        var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n        cover.__brushOption = brushOption;\n        updateZ(cover, brushOption);\n        controller.group.add(cover);\n        return cover;\n    }\n\n    function endCreating(controller, creatingCover) {\n        var coverRenderer = getCoverRenderer(creatingCover);\n        if (coverRenderer.endCreating) {\n            coverRenderer.endCreating(controller, creatingCover);\n            updateZ(creatingCover, creatingCover.__brushOption);\n        }\n        return creatingCover;\n    }\n\n    function updateCoverShape(controller, cover) {\n        var brushOption = cover.__brushOption;\n        getCoverRenderer(cover).updateCoverShape(\n            controller, cover, brushOption.range, brushOption\n        );\n    }\n\n    function updateZ(cover, brushOption) {\n        var z = brushOption.z;\n        z == null && (z = COVER_Z);\n        cover.traverse(function (el) {\n            el.z = z;\n            el.z2 = z; // Consider in given container.\n        });\n    }\n\n    function updateCoverAfterCreation(controller, cover) {\n        getCoverRenderer(cover).updateCommon(controller, cover);\n        updateCoverShape(controller, cover);\n    }\n\n    function getCoverRenderer(cover) {\n        return coverRenderers[cover.__brushOption.brushType];\n    }\n\n    // return target panel or `true` (means global panel)\n    function getPanelByPoint(controller, e, localCursorPoint) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panel;\n        var transform = controller._transform;\n        each(panels, function (pn) {\n            pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n        });\n        return panel;\n    }\n\n    // Return a panel or true\n    function getPanelByCover(controller, cover) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panelId = cover.__brushOption.panelId;\n        // User may give cover without coord sys info,\n        // which is then treated as global panel.\n        return panelId != null ? panels[panelId] : true;\n    }\n\n    function clearCovers(controller) {\n        var covers = controller._covers;\n        var originalLength = covers.length;\n        each(covers, function (cover) {\n            controller.group.remove(cover);\n        }, controller);\n        covers.length = 0;\n\n        return !!originalLength;\n    }\n\n    function trigger(controller, opt) {\n        var areas = map(controller._covers, function (cover) {\n            var brushOption = cover.__brushOption;\n            var range = zrUtil.clone(brushOption.range);\n            return {\n                brushType: brushOption.brushType,\n                panelId: brushOption.panelId,\n                range: range\n            };\n        });\n\n        controller.trigger('brush', areas, {\n            isEnd: !!opt.isEnd,\n            removeOnClick: !!opt.removeOnClick\n        });\n    }\n\n    function shouldShowCover(controller) {\n        var track = controller._track;\n\n        if (!track.length) {\n            return false;\n        }\n\n        var p2 = track[track.length - 1];\n        var p1 = track[0];\n        var dx = p2[0] - p1[0];\n        var dy = p2[1] - p1[1];\n        var dist = mathPow(dx * dx + dy * dy, 0.5);\n\n        return dist > UNSELECT_THRESHOLD;\n    }\n\n    function getTrackEnds(track) {\n        var tail = track.length - 1;\n        tail < 0 && (tail = 0);\n        return [track[0], track[tail]];\n    }\n\n    function createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n        var cover = new graphic.Group();\n\n        cover.add(new graphic.Rect({\n            name: 'main',\n            style: makeStyle(brushOption),\n            silent: true,\n            draggable: true,\n            cursor: 'move',\n            drift: curry(doDrift, controller, cover, 'nswe'),\n            ondragend: curry(trigger, controller, {isEnd: true})\n        }));\n\n        each(\n            edgeNames,\n            function (name) {\n                cover.add(new graphic.Rect({\n                    name: name,\n                    style: {opacity: 0},\n                    draggable: true,\n                    silent: true,\n                    invisible: true,\n                    drift: curry(doDrift, controller, cover, name),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            }\n        );\n\n        return cover;\n    }\n\n    function updateBaseRect(controller, cover, localRange, brushOption) {\n        var lineWidth = brushOption.brushStyle.lineWidth || 0;\n        var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n        var x = localRange[0][0];\n        var y = localRange[1][0];\n        var xa = x - lineWidth / 2;\n        var ya = y - lineWidth / 2;\n        var x2 = localRange[0][1];\n        var y2 = localRange[1][1];\n        var x2a = x2 - handleSize + lineWidth / 2;\n        var y2a = y2 - handleSize + lineWidth / 2;\n        var width = x2 - x;\n        var height = y2 - y;\n        var widtha = width + lineWidth;\n        var heighta = height + lineWidth;\n\n        updateRectShape(controller, cover, 'main', x, y, width, height);\n\n        if (brushOption.transformable) {\n            updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n            updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n\n            updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n            updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n        }\n    }\n\n    function updateCommon(controller, cover) {\n        var brushOption = cover.__brushOption;\n        var transformable = brushOption.transformable;\n\n        var mainEl = cover.childAt(0);\n        mainEl.useStyle(makeStyle(brushOption));\n        mainEl.attr({\n            silent: !transformable,\n            cursor: transformable ? 'move' : 'default'\n        });\n\n        each(\n            ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'],\n            function (name) {\n                var el = cover.childOfName(name);\n                var globalDir = getGlobalDirection(controller, name);\n\n                el && el.attr({\n                    silent: !transformable,\n                    invisible: !transformable,\n                    cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n                });\n            }\n        );\n    }\n\n    function updateRectShape(controller, cover, name, x, y, w, h) {\n        var el = cover.childOfName(name);\n        el && el.setShape(pointsToRect(\n            clipByPanel(controller, cover, [[x, y], [x + w, y + h]])\n        ));\n    }\n\n    function makeStyle(brushOption) {\n        return zrUtil.defaults({strokeNoScale: true}, brushOption.brushStyle);\n    }\n\n    function formatRectRange(x, y, x2, y2) {\n        var min = [mathMin(x, x2), mathMin(y, y2)];\n        var max = [mathMax(x, x2), mathMax(y, y2)];\n\n        return [\n            [min[0], max[0]], // x range\n            [min[1], max[1]] // y range\n        ];\n    }\n\n    function getTransform(controller) {\n        return graphic.getTransform(controller.group);\n    }\n\n    function getGlobalDirection(controller, localDirection) {\n        if (localDirection.length > 1) {\n            localDirection = localDirection.split('');\n            var globalDir = [\n                getGlobalDirection(controller, localDirection[0]),\n                getGlobalDirection(controller, localDirection[1])\n            ];\n            (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n            return globalDir.join('');\n        }\n        else {\n            var map = {w: 'left', e: 'right', n: 'top', s: 'bottom'};\n            var inverseMap = {left: 'w', right: 'e', top: 'n', bottom: 's'};\n            var globalDir = graphic.transformDirection(\n                map[localDirection], getTransform(controller)\n            );\n            return inverseMap[globalDir];\n        }\n    }\n\n    function driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n        var brushOption = cover.__brushOption;\n        var rectRange = toRectRange(brushOption.range);\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(name.split(''), function (namePart) {\n            var ind = DIRECTION_MAP[namePart];\n            rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n        });\n\n        brushOption.range = fromRectRange(formatRectRange(\n            rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]\n        ));\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function driftPolygon(controller, cover, dx, dy, e) {\n        var range = cover.__brushOption.range;\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(range, function (point) {\n            point[0] += localDelta[0];\n            point[1] += localDelta[1];\n        });\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function toLocalDelta(controller, dx, dy) {\n        var thisGroup = controller.group;\n        var localD = thisGroup.transformCoordToLocal(dx, dy);\n        var localZero = thisGroup.transformCoordToLocal(0, 0);\n\n        return [localD[0] - localZero[0], localD[1] - localZero[1]];\n    }\n\n    function clipByPanel(controller, cover, data) {\n        var panel = getPanelByCover(controller, cover);\n\n        return (panel && panel !== true)\n            ? panel.clipPath(data, controller._transform)\n            : zrUtil.clone(data);\n    }\n\n    function pointsToRect(points) {\n        var xmin = mathMin(points[0][0], points[1][0]);\n        var ymin = mathMin(points[0][1], points[1][1]);\n        var xmax = mathMax(points[0][0], points[1][0]);\n        var ymax = mathMax(points[0][1], points[1][1]);\n\n        return {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n    }\n\n    function resetCursor(controller, e, localCursorPoint) {\n        // Check active\n        if (!controller._brushType) {\n            return;\n        }\n\n        var zr = controller._zr;\n        var covers = controller._covers;\n        var currPanel = getPanelByPoint(controller, e, localCursorPoint);\n\n        // Check whether in covers.\n        if (!controller._dragging) {\n            for (var i = 0; i < covers.length; i++) {\n                var brushOption = covers[i].__brushOption;\n                if (currPanel\n                    && (currPanel === true || brushOption.panelId === currPanel.panelId)\n                    && coverRenderers[brushOption.brushType].contain(\n                        covers[i], localCursorPoint[0], localCursorPoint[1]\n                    )\n                ) {\n                    // Use cursor style set on cover.\n                    return;\n                }\n            }\n        }\n\n        currPanel && zr.setCursorStyle('crosshair');\n    }\n\n    function preventDefault(e) {\n        var rawE = e.event;\n        rawE.preventDefault && rawE.preventDefault();\n    }\n\n    function mainShapeContain(cover, x, y) {\n        return cover.childOfName('main').contain(x, y);\n    }\n\n    function updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n        var creatingCover = controller._creatingCover;\n        var panel = controller._creatingPanel;\n        var thisBrushOption = controller._brushOption;\n        var eventParams;\n\n        controller._track.push(localCursorPoint.slice());\n\n        if (shouldShowCover(controller) || creatingCover) {\n\n            if (panel && !creatingCover) {\n                thisBrushOption.brushMode === 'single' && clearCovers(controller);\n                var brushOption = zrUtil.clone(thisBrushOption);\n                brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n                brushOption.panelId = panel === true ? null : panel.panelId;\n                creatingCover = controller._creatingCover = createCover(controller, brushOption);\n                controller._covers.push(creatingCover);\n            }\n\n            if (creatingCover) {\n                var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n                var coverBrushOption = creatingCover.__brushOption;\n\n                coverBrushOption.range = coverRenderer.getCreatingRange(\n                    clipByPanel(controller, creatingCover, controller._track)\n                );\n\n                if (isEnd) {\n                    endCreating(controller, creatingCover);\n                    coverRenderer.updateCommon(controller, creatingCover);\n                }\n\n                updateCoverShape(controller, creatingCover);\n\n                eventParams = {isEnd: isEnd};\n            }\n        }\n        else if (\n            isEnd\n            && thisBrushOption.brushMode === 'single'\n            && thisBrushOption.removeOnClick\n        ) {\n            // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n            // But a single click do not clear covers, because user may have casual\n            // clicks (for example, click on other component and do not expect covers\n            // disappear).\n            // Only some cover removed, trigger action, but not every click trigger action.\n            if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n                eventParams = {isEnd: isEnd, removeOnClick: true};\n            }\n        }\n\n        return eventParams;\n    }\n\n    function determineBrushType(brushType, panel) {\n        if (brushType === 'auto') {\n            if (__DEV__) {\n                zrUtil.assert(\n                    panel && panel.defaultBrushType,\n                    'MUST have defaultBrushType when brushType is \"atuo\"'\n                );\n            }\n            return panel.defaultBrushType;\n        }\n        return brushType;\n    }\n\n    var mouseHandlers = {\n\n        mousedown: function (e) {\n            if (this._dragging) {\n                // In case some browser do not support globalOut,\n                // and release mose out side the browser.\n                handleDragEnd.call(this, e);\n            }\n            else if (!e.target || !e.target.draggable) {\n\n                preventDefault(e);\n\n                var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n\n                this._creatingCover = null;\n                var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n                if (panel) {\n                    this._dragging = true;\n                    this._track = [localCursorPoint.slice()];\n                }\n            }\n        },\n\n        mousemove: function (e) {\n            var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n\n            resetCursor(this, e, localCursorPoint);\n\n            if (this._dragging) {\n\n                preventDefault(e);\n\n                var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n\n                eventParams && trigger(this, eventParams);\n            }\n        },\n\n        mouseup: handleDragEnd //,\n\n        // FIXME\n        // in tooltip, globalout should not be triggered.\n        // globalout: handleDragEnd\n    };\n\n    function handleDragEnd(e) {\n        if (this._dragging) {\n\n            preventDefault(e);\n\n            var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n            var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n\n            this._dragging = false;\n            this._track = [];\n            this._creatingCover = null;\n\n            // trigger event shoule be at final, after procedure will be nested.\n            eventParams && trigger(this, eventParams);\n        }\n    }\n\n    /**\n     * key: brushType\n     * @type {Object}\n     */\n    var coverRenderers = {\n\n        lineX: getLineRenderer(0),\n\n        lineY: getLineRenderer(1),\n\n        rect: {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            return range;\n                        },\n                        function (range) {\n                            return range;\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                updateBaseRect(controller, cover, localRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        },\n\n        polygon: {\n            createCover: function (controller, brushOption) {\n                var cover = new graphic.Group();\n\n                // Do not use graphic.Polygon because graphic.Polyline do not close the\n                // border of the shape when drawing, which is a better experience for user.\n                cover.add(new graphic.Polyline({\n                    name: 'main',\n                    style: makeStyle(brushOption),\n                    silent: true\n                }));\n\n                return cover;\n            },\n            getCreatingRange: function (localTrack) {\n                return localTrack;\n            },\n            endCreating: function (controller, cover) {\n                cover.remove(cover.childAt(0));\n                // Use graphic.Polygon close the shape.\n                cover.add(new graphic.Polygon({\n                    name: 'main',\n                    draggable: true,\n                    drift: curry(driftPolygon, controller, cover),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                cover.childAt(0).setShape({\n                    points: clipByPanel(controller, cover, localRange)\n                });\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        }\n    };\n\n    function getLineRenderer(xyIndex) {\n        return {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            var rectRange = [range, [0, 100]];\n                            xyIndex && rectRange.reverse();\n                            return rectRange;\n                        },\n                        function (rectRange) {\n                            return rectRange[xyIndex];\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    [['w', 'e'], ['n', 's']][xyIndex]\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n                var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n\n                return [min, max];\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                var otherExtent;\n                // If brushWidth not specified, fit the panel.\n                var panel = getPanelByCover(controller, cover);\n                if (panel !== true && panel.getLinearBrushOtherExtent) {\n                    otherExtent = panel.getLinearBrushOtherExtent(\n                        xyIndex, controller._transform\n                    );\n                }\n                else {\n                    var zr = controller._zr;\n                    otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n                }\n                var rectRange = [localRange, otherExtent];\n                xyIndex && rectRange.reverse();\n\n                updateBaseRect(controller, cover, rectRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        };\n    }\n\n    module.exports = BrushController;\n\n\n/***/ }),\n/* 589 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var graphic = __webpack_require__(420);\n    var modelUtil = __webpack_require__(421);\n    var brushHelper = __webpack_require__(590);\n\n    var each = zrUtil.each;\n    var indexOf = zrUtil.indexOf;\n    var curry = zrUtil.curry;\n\n    var COORD_CONVERTS = ['dataToPoint', 'pointToData'];\n\n    // FIXME\n    // how to genarialize to more coordinate systems.\n    var INCLUDE_FINDER_MAIN_TYPES = [\n        'grid', 'xAxis', 'yAxis', 'geo', 'graph',\n        'polar', 'radiusAxis', 'angleAxis', 'bmap'\n    ];\n\n    /**\n     * [option in constructor]:\n     * {\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     * }\n     *\n     *\n     * [targetInfo]:\n     *\n     * There can be multiple axes in a single targetInfo. Consider the case\n     * of `grid` component, a targetInfo represents a grid which contains one or more\n     * cartesian and one or more axes. And consider the case of parallel system,\n     * which has multiple axes in a coordinate system.\n     * Can be {\n     *     panelId: ...,\n     *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n     *     coordSyses: all cartesians.\n     *     gridModel: <grid component>\n     *     xAxes: correspond to coordSyses on index\n     *     yAxes: correspond to coordSyses on index\n     * }\n     * or {\n     *     panelId: ...,\n     *     coordSys: <geo coord sys>\n     *     coordSyses: [<geo coord sys>]\n     *     geoModel: <geo component>\n     * }\n     *\n     *\n     * [panelOpt]:\n     *\n     * Make from targetInfo. Input to BrushController.\n     * {\n     *     panelId: ...,\n     *     rect: ...\n     * }\n     *\n     *\n     * [area]:\n     *\n     * Generated by BrushController or user input.\n     * {\n     *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n     *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     *     range: pixel range.\n     *     coordRange: representitive coord range (the first one of coordRanges).\n     *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n     * }\n     */\n\n    /**\n     * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n     *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} [opt]\n     * @param {Array.<string>} [opt.include] include coordinate system types.\n     */\n    function BrushTargetManager(option, ecModel, opt) {\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        var targetInfoList = this._targetInfoList = [];\n        var info = {};\n        var foundCpts = parseFinder(ecModel, option);\n\n        each(targetInfoBuilders, function (builder, type) {\n            if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n                builder(foundCpts, targetInfoList, info);\n            }\n        });\n    }\n\n    var proto = BrushTargetManager.prototype;\n\n    proto.setOutputRanges = function (areas, ecModel) {\n        this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            (area.coordRanges || (area.coordRanges = [])).push(coordRange);\n            // area.coordRange is the first of area.coordRanges\n            if (!area.coordRange) {\n                area.coordRange = coordRange;\n                // In 'category' axis, coord to pixel is not reversible, so we can not\n                // rebuild range by coordRange accrately, which may bring trouble when\n                // brushing only one item. So we use __rangeOffset to rebuilding range\n                // by coordRange. And this it only used in brush component so it is no\n                // need to be adapted to coordRanges.\n                var result = coordConvert[area.brushType](0, coordSys, coordRange);\n                area.__rangeOffset = {\n                    offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n                    xyMinMax: result.xyMinMax\n                };\n            }\n        });\n    };\n\n    proto.matchOutputRanges = function (areas, ecModel, cb) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (targetInfo && targetInfo !== true) {\n                zrUtil.each(\n                    targetInfo.coordSyses,\n                    function (coordSys) {\n                        var result = coordConvert[area.brushType](1, coordSys, area.range);\n                        cb(area, result.values, coordSys, ecModel);\n                    }\n                );\n            }\n        }, this);\n    };\n\n    proto.setInputRanges = function (areas, ecModel) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (__DEV__) {\n                zrUtil.assert(\n                    !targetInfo || targetInfo === true || area.coordRange,\n                    'coordRange must be specified when coord index specified.'\n                );\n                zrUtil.assert(\n                    !targetInfo || targetInfo !== true || area.range,\n                    'range must be specified in global brush.'\n                );\n            }\n\n            area.range = area.range || [];\n\n            // convert coordRange to global range and set panelId.\n            if (targetInfo && targetInfo !== true) {\n                area.panelId = targetInfo.panelId;\n                // (1) area.range shoule always be calculate from coordRange but does\n                // not keep its original value, for the sake of the dataZoom scenario,\n                // where area.coordRange remains unchanged but area.range may be changed.\n                // (2) Only support converting one coordRange to pixel range in brush\n                // component. So do not consider `coordRanges`.\n                // (3) About __rangeOffset, see comment above.\n                var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n                var rangeOffset = area.__rangeOffset;\n                area.range = rangeOffset\n                    ? diffProcessor[area.brushType](\n                        result.values,\n                        rangeOffset.offset,\n                        getScales(result.xyMinMax, rangeOffset.xyMinMax)\n                    )\n                    : result.values;\n            }\n        }, this);\n    };\n\n    proto.makePanelOpts = function (api, getDefaultBrushType) {\n        return zrUtil.map(this._targetInfoList, function (targetInfo) {\n            var rect = targetInfo.getPanelRect();\n            return {\n                panelId: targetInfo.panelId,\n                defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n                clipPath: brushHelper.makeRectPanelClipPath(rect),\n                isTargetByCursor: brushHelper.makeRectIsTargetByCursor(\n                    rect, api, targetInfo.coordSysModel\n                ),\n                getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n            };\n        });\n    };\n\n    proto.controlSeries = function (area, seriesModel, ecModel) {\n        // Check whether area is bound in coord, and series do not belong to that coord.\n        // If do not do this check, some brush (like lineX) will controll all axes.\n        var targetInfo = this.findTargetInfo(area, ecModel);\n        return targetInfo === true || (\n            targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0\n        );\n    };\n\n    /**\n     * If return Object, a coord found.\n     * If reutrn true, global found.\n     * Otherwise nothing found.\n     *\n     * @param {Object} area\n     * @param {Array} targetInfoList\n     * @return {Obejct|boolean}\n     */\n    proto.findTargetInfo = function (area, ecModel) {\n        var targetInfoList = this._targetInfoList;\n        var foundCpts = parseFinder(ecModel, area);\n\n        for (var i = 0; i < targetInfoList.length; i++) {\n            var targetInfo = targetInfoList[i];\n            var areaPanelId = area.panelId;\n            if (areaPanelId) {\n                if (targetInfo.panelId === areaPanelId) {\n                    return targetInfo;\n                }\n            }\n            else {\n                for (var i = 0; i < targetInfoMatchers.length; i++) {\n                    if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n                        return targetInfo;\n                    }\n                }\n            }\n        }\n\n        return true;\n    };\n\n    function formatMinMax(minMax) {\n        minMax[0] > minMax[1] && minMax.reverse();\n        return minMax;\n    }\n\n    function parseFinder(ecModel, option) {\n        return modelUtil.parseFinder(\n            ecModel, option, {includeMainTypes: INCLUDE_FINDER_MAIN_TYPES}\n        );\n    }\n\n    var targetInfoBuilders = {\n\n        grid: function (foundCpts, targetInfoList) {\n            var xAxisModels = foundCpts.xAxisModels;\n            var yAxisModels = foundCpts.yAxisModels;\n            var gridModels = foundCpts.gridModels;\n            // Remove duplicated.\n            var gridModelMap = zrUtil.createHashMap();\n            var xAxesHas = {};\n            var yAxesHas = {};\n\n            if (!xAxisModels && !yAxisModels && !gridModels) {\n                return;\n            }\n\n            each(xAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap.set(gridModel.id, gridModel);\n                xAxesHas[gridModel.id] = true;\n            });\n            each(yAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap.set(gridModel.id, gridModel);\n                yAxesHas[gridModel.id] = true;\n            });\n            each(gridModels, function (gridModel) {\n                gridModelMap.set(gridModel.id, gridModel);\n                xAxesHas[gridModel.id] = true;\n                yAxesHas[gridModel.id] = true;\n            });\n\n            gridModelMap.each(function (gridModel) {\n                var grid = gridModel.coordinateSystem;\n                var cartesians = [];\n\n                each(grid.getCartesians(), function (cartesian, index) {\n                    if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0\n                        || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0\n                    ) {\n                        cartesians.push(cartesian);\n                    }\n                });\n                targetInfoList.push({\n                    panelId: 'grid--' + gridModel.id,\n                    gridModel: gridModel,\n                    coordSysModel: gridModel,\n                    // Use the first one as the representitive coordSys.\n                    coordSys: cartesians[0],\n                    coordSyses: cartesians,\n                    getPanelRect: panelRectBuilder.grid,\n                    xAxisDeclared: xAxesHas[gridModel.id],\n                    yAxisDeclared: yAxesHas[gridModel.id]\n                });\n            });\n        },\n\n        geo: function (foundCpts, targetInfoList) {\n            each(foundCpts.geoModels, function (geoModel) {\n                var coordSys = geoModel.coordinateSystem;\n                targetInfoList.push({\n                    panelId: 'geo--' + geoModel.id,\n                    geoModel: geoModel,\n                    coordSysModel: geoModel,\n                    coordSys: coordSys,\n                    coordSyses: [coordSys],\n                    getPanelRect: panelRectBuilder.geo\n                });\n            });\n        }\n    };\n\n    var targetInfoMatchers = [\n\n        // grid\n        function (foundCpts, targetInfo) {\n            var xAxisModel = foundCpts.xAxisModel;\n            var yAxisModel = foundCpts.yAxisModel;\n            var gridModel = foundCpts.gridModel;\n\n            !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n            !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n\n            return gridModel && gridModel === targetInfo.gridModel;\n        },\n\n        // geo\n        function (foundCpts, targetInfo) {\n            var geoModel = foundCpts.geoModel;\n            return geoModel && geoModel === targetInfo.geoModel;\n        }\n    ];\n\n    var panelRectBuilder = {\n\n        grid: function () {\n            // grid is not Transformable.\n            return this.coordSys.grid.getRect().clone();\n        },\n\n        geo: function () {\n            var coordSys = this.coordSys;\n            var rect = coordSys.getBoundingRect().clone();\n            // geo roam and zoom transform\n            rect.applyTransform(graphic.getTransform(coordSys));\n            return rect;\n        }\n    };\n\n    var coordConvert = {\n\n        lineX: curry(axisConvert, 0),\n\n        lineY: curry(axisConvert, 1),\n\n        rect: function (to, coordSys, rangeOrCoordRange) {\n            var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n            var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n            var values = [\n                formatMinMax([xminymin[0], xmaxymax[0]]),\n                formatMinMax([xminymin[1], xmaxymax[1]])\n            ];\n            return {values: values, xyMinMax: values};\n        },\n\n        polygon: function (to, coordSys, rangeOrCoordRange) {\n            var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n            var values = zrUtil.map(rangeOrCoordRange, function (item) {\n                var p = coordSys[COORD_CONVERTS[to]](item);\n                xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n                xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n                xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n                xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n                return p;\n            });\n            return {values: values, xyMinMax: xyMinMax};\n        }\n    };\n\n    function axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n        if (__DEV__) {\n            zrUtil.assert(\n                coordSys.type === 'cartesian2d',\n                'lineX/lineY brush is available only in cartesian2d.'\n            );\n        }\n\n        var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n        var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n            return to\n                ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]))\n                : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n        }));\n        var xyMinMax = [];\n        xyMinMax[axisNameIndex] = values;\n        xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n\n        return {values: values, xyMinMax: xyMinMax};\n    }\n\n    var diffProcessor = {\n        lineX: curry(axisDiffProcessor, 0),\n\n        lineY: curry(axisDiffProcessor, 1),\n\n        rect: function (values, refer, scales) {\n            return [\n                [values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]],\n                [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]\n            ];\n        },\n\n        polygon: function (values, refer, scales) {\n            return zrUtil.map(values, function (item, idx) {\n                return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n            });\n        }\n    };\n\n    function axisDiffProcessor(axisNameIndex, values, refer, scales) {\n        return [\n            values[0] - scales[axisNameIndex] * refer[0],\n            values[1] - scales[axisNameIndex] * refer[1]\n        ];\n    }\n\n    // We have to process scale caused by dataZoom manually,\n    // although it might be not accurate.\n    function getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n        var sizeCurr = getSize(xyMinMaxCurr);\n        var sizeOrigin = getSize(xyMinMaxOrigin);\n        var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n        isNaN(scales[0]) && (scales[0] = 1);\n        isNaN(scales[1]) && (scales[1] = 1);\n        return scales;\n    }\n\n    function getSize(xyMinMax) {\n        return xyMinMax\n            ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]]\n            : [NaN, NaN];\n    }\n\n    module.exports = BrushTargetManager;\n\n\n/***/ }),\n/* 590 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var cursorHelper = __webpack_require__(591);\n    var BoundingRect = __webpack_require__(432);\n    var graphicUtil = __webpack_require__(420);\n\n    var helper = {};\n\n    helper.makeRectPanelClipPath = function (rect) {\n        rect = normalizeRect(rect);\n        return function (localPoints, transform) {\n            return graphicUtil.clipPointsByRect(localPoints, rect);\n        };\n    };\n\n    helper.makeLinearBrushOtherExtent = function (rect, specifiedXYIndex) {\n        rect = normalizeRect(rect);\n        return function (xyIndex) {\n            var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n            var brushWidth = idx ? rect.width : rect.height;\n            var base = idx ? rect.x : rect.y;\n            return [base, base + (brushWidth || 0)];\n        };\n    };\n\n    helper.makeRectIsTargetByCursor = function (rect, api, targetModel) {\n        rect = normalizeRect(rect);\n        return function (e, localCursorPoint, transform) {\n            return rect.contain(localCursorPoint[0], localCursorPoint[1])\n                && !cursorHelper.onIrrelevantElement(e, api, targetModel);\n        };\n    };\n\n    // Consider width/height is negative.\n    function normalizeRect(rect) {\n        return BoundingRect.create(rect);\n    }\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 591 */\n/***/ (function(module, exports) {\n\n\n\n    var helper = {};\n\n    var IRRELEVANT_EXCLUDES = {'axisPointer': 1, 'tooltip': 1, 'brush': 1};\n\n    /**\n     * Avoid that: mouse click on a elements that is over geo or graph,\n     * but roam is triggered.\n     */\n    helper.onIrrelevantElement = function (e, api, targetCoordSysModel) {\n        var model = api.getComponentByElement(e.topTarget);\n        // If model is axisModel, it works only if it is injected with coordinateSystem.\n        var coordSys = model && model.coordinateSystem;\n        return model\n            && model !== targetCoordSysModel\n            && !IRRELEVANT_EXCLUDES[model.mainType]\n            && (coordSys && coordSys.model !== targetCoordSysModel);\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 592 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    __webpack_require__(419).registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n/***/ }),\n/* 593 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * Calculate slider move result.\n     * Usage:\n     * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n     * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n     * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n     *\n     * @param {number} delta Move length.\n     * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n     *              handleEnds will be modified in this method.\n     * @param {Array.<number>} extent handleEnds is restricted by extent.\n     *              extent[0] should less or equals than extent[1].\n     * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n     *              where the input minSpan and maxSpan will not work.\n     * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n     *              If not set, handle0 and cross handle1. If set as a non-negative\n     *              number (including `0`), handles will push each other when reaching\n     *              the minSpan.\n     * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n     * @return {Array.<number>} The input handleEnds.\n     */\n    module.exports = function (delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n        // Normalize firstly.\n        handleEnds[0] = restrict(handleEnds[0], extent);\n        handleEnds[1] = restrict(handleEnds[1], extent);\n\n        delta = delta || 0;\n\n        var extentSpan = extent[1] - extent[0];\n\n        // Notice maxSpan and minSpan can be null/undefined.\n        if (minSpan != null) {\n            minSpan = restrict(minSpan, [0, extentSpan]);\n        }\n        if (maxSpan != null) {\n            maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n        }\n        if (handleIndex === 'all') {\n            minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n            handleIndex = 0;\n        }\n\n        var originalDistSign = getSpanSign(handleEnds, handleIndex);\n\n        handleEnds[handleIndex] += delta;\n\n        // Restrict in extent.\n        var extentMinSpan = minSpan || 0;\n        var realExtent = extent.slice();\n        originalDistSign.sign < 0 ? (realExtent[0] += extentMinSpan) : (realExtent[1] -= extentMinSpan);\n        handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent);\n\n        // Expand span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (minSpan != null && (\n            currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan\n        )) {\n            // If minSpan exists, 'cross' is forbinden.\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n        }\n\n        // Shrink span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (maxSpan != null && currDistSign.span > maxSpan) {\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n        }\n\n        return handleEnds;\n    };\n\n    function getSpanSign(handleEnds, handleIndex) {\n        var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex];\n        // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n        // is at left of handleEnds[1] for non-cross case.\n        return {span: Math.abs(dist), sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1};\n    }\n\n    function restrict(value, extend) {\n        return Math.min(extend[1], Math.max(extend[0], value));\n    }\n\n\n/***/ }),\n/* 594 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Legend component entry file8\n */\n\n\n    __webpack_require__(595);\n    __webpack_require__(597);\n    __webpack_require__(596);\n\n    var echarts = __webpack_require__(419);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(598));\n\n\n/***/ }),\n/* 595 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var Model = __webpack_require__(430);\n\n    var LegendModel = __webpack_require__(419).extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ }),\n/* 596 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var symbolCreator = __webpack_require__(466);\n    var graphic = __webpack_require__(420);\n    var listComponentHelper = __webpack_require__(505);\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = __webpack_require__(419).extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = zrUtil.createHashMap();\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap.get(name)) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap.set(name, true);\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap.get(name)) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap.set(name, true);\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap.get(name)) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n/***/ }),\n/* 597 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(419);\n    var zrUtil = __webpack_require__(418);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (selectedMap.hasOwnProperty(name)) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n/***/ }),\n/* 598 */\n/***/ (function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ }),\n/* 599 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var echarts = __webpack_require__(419);\n    var graphic = __webpack_require__(420);\n    var layout = __webpack_require__(436);\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n/***/ }),\n/* 600 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(601);\n    __webpack_require__(602);\n\n    __webpack_require__(607);\n    __webpack_require__(605);\n    __webpack_require__(603);\n    __webpack_require__(604);\n    __webpack_require__(606);\n\n\n/***/ }),\n/* 601 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var featureManager = __webpack_require__(435);\n    var zrUtil = __webpack_require__(418);\n\n    var ToolboxModel = __webpack_require__(419).extendComponentModel({\n\n        type: 'toolbox',\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        mergeDefaultAndTheme: function (option) {\n            ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n\n            zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n                var Feature = featureManager.get(featureName);\n                Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n            });\n        },\n\n        defaultOption: {\n\n            show: true,\n\n            z: 6,\n\n            zlevel: 0,\n\n            orient: 'horizontal',\n\n            left: 'right',\n\n            top: 'top',\n\n            // right\n            // bottom\n\n            backgroundColor: 'transparent',\n\n            borderColor: '#ccc',\n\n            borderWidth: 0,\n\n            padding: 5,\n\n            itemSize: 15,\n\n            itemGap: 8,\n\n            showTitle: true,\n\n            iconStyle: {\n                normal: {\n                    borderColor: '#666',\n                    color: 'none'\n                },\n                emphasis: {\n                    borderColor: '#3E98C5'\n                }\n            }\n            // textStyle: {},\n\n            // feature\n        }\n    });\n\n    module.exports = ToolboxModel;\n\n\n/***/ }),\n/* 602 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var featureManager = __webpack_require__(435);\n    var zrUtil = __webpack_require__(418);\n    var graphic = __webpack_require__(420);\n    var Model = __webpack_require__(430);\n    var DataDiffer = __webpack_require__(462);\n    var listComponentHelper = __webpack_require__(505);\n    var textContain = __webpack_require__(437);\n\n    module.exports = __webpack_require__(419).extendComponentView({\n\n        type: 'toolbox',\n\n        render: function (toolboxModel, ecModel, api, payload) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!toolboxModel.get('show')) {\n                return;\n            }\n\n            var itemSize = +toolboxModel.get('itemSize');\n            var featureOpts = toolboxModel.get('feature') || {};\n            var features = this._features || (this._features = {});\n\n            var featureNames = [];\n            zrUtil.each(featureOpts, function (opt, name) {\n                featureNames.push(name);\n            });\n\n            (new DataDiffer(this._featureNames || [], featureNames))\n                .add(process)\n                .update(process)\n                .remove(zrUtil.curry(process, null))\n                .execute();\n\n            // Keep for diff.\n            this._featureNames = featureNames;\n\n            function process(newIndex, oldIndex) {\n                var featureName = featureNames[newIndex];\n                var oldName = featureNames[oldIndex];\n                var featureOpt = featureOpts[featureName];\n                var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n                var feature;\n\n                if (featureName && !oldName) { // Create\n                    if (isUserFeatureName(featureName)) {\n                        feature = {\n                            model: featureModel,\n                            onclick: featureModel.option.onclick,\n                            featureName: featureName\n                        };\n                    }\n                    else {\n                        var Feature = featureManager.get(featureName);\n                        if (!Feature) {\n                            return;\n                        }\n                        feature = new Feature(featureModel, ecModel, api);\n                    }\n                    features[featureName] = feature;\n                }\n                else {\n                    feature = features[oldName];\n                    // If feature does not exsit.\n                    if (!feature) {\n                        return;\n                    }\n                    feature.model = featureModel;\n                    feature.ecModel = ecModel;\n                    feature.api = api;\n                }\n\n                if (!featureName && oldName) {\n                    feature.dispose && feature.dispose(ecModel, api);\n                    return;\n                }\n\n                if (!featureModel.get('show') || feature.unusable) {\n                    feature.remove && feature.remove(ecModel, api);\n                    return;\n                }\n\n                createIconPaths(featureModel, feature, featureName);\n\n                featureModel.setIconStatus = function (iconName, status) {\n                    var option = this.option;\n                    var iconPaths = this.iconPaths;\n                    option.iconStatus = option.iconStatus || {};\n                    option.iconStatus[iconName] = status;\n                    // FIXME\n                    iconPaths[iconName] && iconPaths[iconName].trigger(status);\n                };\n\n                if (feature.render) {\n                    feature.render(featureModel, ecModel, api, payload);\n                }\n            }\n\n            function createIconPaths(featureModel, feature, featureName) {\n                var iconStyleModel = featureModel.getModel('iconStyle');\n\n                // If one feature has mutiple icon. they are orginaized as\n                // {\n                //     icon: {\n                //         foo: '',\n                //         bar: ''\n                //     },\n                //     title: {\n                //         foo: '',\n                //         bar: ''\n                //     }\n                // }\n                var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n                var titles = featureModel.get('title') || {};\n                if (typeof icons === 'string') {\n                    var icon = icons;\n                    var title = titles;\n                    icons = {};\n                    titles = {};\n                    icons[featureName] = icon;\n                    titles[featureName] = title;\n                }\n                var iconPaths = featureModel.iconPaths = {};\n                zrUtil.each(icons, function (icon, iconName) {\n                    var normalStyle = iconStyleModel.getModel('normal').getItemStyle();\n                    var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n\n                    var style = {\n                        x: -itemSize / 2,\n                        y: -itemSize / 2,\n                        width: itemSize,\n                        height: itemSize\n                    };\n                    var path = icon.indexOf('image://') === 0\n                        ? (\n                            style.image = icon.slice(8),\n                            new graphic.Image({style: style})\n                        )\n                        : graphic.makePath(\n                            icon.replace('path://', ''),\n                            {\n                                style: normalStyle,\n                                hoverStyle: hoverStyle,\n                                rectHover: true\n                            },\n                            style,\n                            'center'\n                        );\n\n                    graphic.setHoverStyle(path);\n\n                    if (toolboxModel.get('showTitle')) {\n                        path.__title = titles[iconName];\n                        path.on('mouseover', function () {\n                                // Should not reuse above hoverStyle, which might be modified.\n                                var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n                                path.setStyle({\n                                    text: titles[iconName],\n                                    textPosition: hoverStyle.textPosition || 'bottom',\n                                    textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n                                    textAlign: hoverStyle.textAlign || 'center'\n                                });\n                            })\n                            .on('mouseout', function () {\n                                path.setStyle({\n                                    textFill: null\n                                });\n                            });\n                    }\n                    path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n\n                    group.add(path);\n                    path.on('click', zrUtil.bind(\n                        feature.onclick, feature, ecModel, api, iconName\n                    ));\n\n                    iconPaths[iconName] = path;\n                });\n            }\n\n            listComponentHelper.layout(group, toolboxModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, toolboxModel);\n\n            // Adjust icon title positions to avoid them out of screen\n            group.eachChild(function (icon) {\n                var titleText = icon.__title;\n                var hoverStyle = icon.hoverStyle;\n                // May be background element\n                if (hoverStyle && titleText) {\n                    var rect = textContain.getBoundingRect(\n                        titleText, hoverStyle.font\n                    );\n                    var offsetX = icon.position[0] + group.position[0];\n                    var offsetY = icon.position[1] + group.position[1] + itemSize;\n\n                    var needPutOnTop = false;\n                    if (offsetY + rect.height > api.getHeight()) {\n                        hoverStyle.textPosition = 'top';\n                        needPutOnTop = true;\n                    }\n                    var topOffset = needPutOnTop ? (-5 - rect.height) : (itemSize + 8);\n                    if (offsetX + rect.width /  2 > api.getWidth()) {\n                        hoverStyle.textPosition = ['100%', topOffset];\n                        hoverStyle.textAlign = 'right';\n                    }\n                    else if (offsetX - rect.width / 2 < 0) {\n                        hoverStyle.textPosition = [0, topOffset];\n                        hoverStyle.textAlign = 'left';\n                    }\n                }\n            });\n        },\n\n        updateView: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n            });\n        },\n\n        updateLayout: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n            });\n        },\n\n        remove: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.remove && feature.remove(ecModel, api);\n            });\n            this.group.removeAll();\n        },\n\n        dispose: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.dispose && feature.dispose(ecModel, api);\n            });\n        }\n    });\n\n    function isUserFeatureName(featureName) {\n        return featureName.indexOf('my') === 0;\n    }\n\n\n\n/***/ }),\n/* 603 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/toolbox/feature/DataView\n */\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var eventTool = __webpack_require__(441);\n\n\n    var BLOCK_SPLITER = new Array(60).join('-');\n    var ITEM_SPLITER = '\\t';\n    /**\n     * Group series into two types\n     *  1. on category axis, like line, bar\n     *  2. others, like scatter, pie\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object}\n     * @inner\n     */\n    function groupSeries(ecModel) {\n        var seriesGroupByCategoryAxis = {};\n        var otherSeries = [];\n        var meta = [];\n        ecModel.eachRawSeries(function (seriesModel) {\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n                var baseAxis = coordSys.getBaseAxis();\n                if (baseAxis.type === 'category') {\n                    var key = baseAxis.dim + '_' + baseAxis.index;\n                    if (!seriesGroupByCategoryAxis[key]) {\n                        seriesGroupByCategoryAxis[key] = {\n                            categoryAxis: baseAxis,\n                            valueAxis: coordSys.getOtherAxis(baseAxis),\n                            series: []\n                        };\n                        meta.push({\n                            axisDim: baseAxis.dim,\n                            axisIndex: baseAxis.index\n                        });\n                    }\n                    seriesGroupByCategoryAxis[key].series.push(seriesModel);\n                }\n                else {\n                    otherSeries.push(seriesModel);\n                }\n            }\n            else {\n                otherSeries.push(seriesModel);\n            }\n        });\n\n        return {\n            seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n            other: otherSeries,\n            meta: meta\n        };\n    }\n\n    /**\n     * Assemble content of series on cateogory axis\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleSeriesWithCategoryAxis(series) {\n        var tables = [];\n        zrUtil.each(series, function (group, key) {\n            var categoryAxis = group.categoryAxis;\n            var valueAxis = group.valueAxis;\n            var valueAxisDim = valueAxis.dim;\n\n            var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n                return series.name;\n            }));\n            var columns = [categoryAxis.model.getCategories()];\n            zrUtil.each(group.series, function (series) {\n                columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n                    return val;\n                }));\n            });\n            // Assemble table content\n            var lines = [headers.join(ITEM_SPLITER)];\n            for (var i = 0; i < columns[0].length; i++) {\n                var items = [];\n                for (var j = 0; j < columns.length; j++) {\n                    items.push(columns[j][i]);\n                }\n                lines.push(items.join(ITEM_SPLITER));\n            }\n            tables.push(lines.join('\\n'));\n        });\n        return tables.join('\\n\\n' +  BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * Assemble content of other series\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleOtherSeries(series) {\n        return zrUtil.map(series, function (series) {\n            var data = series.getRawData();\n            var lines = [series.name];\n            var vals = [];\n            data.each(data.dimensions, function () {\n                var argLen = arguments.length;\n                var dataIndex = arguments[argLen - 1];\n                var name = data.getName(dataIndex);\n                for (var i = 0; i < argLen - 1; i++) {\n                    vals[i] = arguments[i];\n                }\n                lines.push((name ? (name + ITEM_SPLITER) : '') + vals.join(ITEM_SPLITER));\n            });\n            return lines.join('\\n');\n        }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * @param {module:echarts/model/Global}\n     * @return {string}\n     * @inner\n     */\n    function getContentFromModel(ecModel) {\n\n        var result = groupSeries(ecModel);\n\n        return {\n            value: zrUtil.filter([\n                    assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis),\n                    assembleOtherSeries(result.other)\n                ], function (str) {\n                    return str.replace(/[\\n\\t\\s]/g, '');\n                }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n\n            meta: result.meta\n        };\n    }\n\n\n    function trim(str) {\n        return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n    /**\n     * If a block is tsv format\n     */\n    function isTSVFormat(block) {\n        // Simple method to find out if a block is tsv format\n        var firstLine = block.slice(0, block.indexOf('\\n'));\n        if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n            return true;\n        }\n    }\n\n    var itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n    /**\n     * @param {string} tsv\n     * @return {Array.<Object>}\n     */\n    function parseTSVContents(tsv) {\n        var tsvLines = tsv.split(/\\n+/g);\n        var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n\n        var categories = [];\n        var series = zrUtil.map(headers, function (header) {\n            return {\n                name: header,\n                data: []\n            };\n        });\n        for (var i = 0; i < tsvLines.length; i++) {\n            var items = trim(tsvLines[i]).split(itemSplitRegex);\n            categories.push(items.shift());\n            for (var j = 0; j < items.length; j++) {\n                series[j] && (series[j].data[i] = items[j]);\n            }\n        }\n        return {\n            series: series,\n            categories: categories\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @return {Array.<Object>}\n     * @inner\n     */\n    function parseListContents(str) {\n        var lines = str.split(/\\n+/g);\n        var seriesName = trim(lines.shift());\n\n        var data = [];\n        for (var i = 0; i < lines.length; i++) {\n            var items = trim(lines[i]).split(itemSplitRegex);\n            var name = '';\n            var value;\n            var hasName = false;\n            if (isNaN(items[0])) { // First item is name\n                hasName = true;\n                name = items[0];\n                items = items.slice(1);\n                data[i] = {\n                    name: name,\n                    value: []\n                };\n                value = data[i].value;\n            }\n            else {\n                value = data[i] = [];\n            }\n            for (var j = 0; j < items.length; j++) {\n                value.push(+items[j]);\n            }\n            if (value.length === 1) {\n                hasName ? (data[i].value = value[0]) : (data[i] = value[0]);\n            }\n        }\n\n        return {\n            name: seriesName,\n            data: data\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @param {Array.<Object>} blockMetaList\n     * @return {Object}\n     * @inner\n     */\n    function parseContents(str, blockMetaList) {\n        var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n        var newOption = {\n            series: []\n        };\n        zrUtil.each(blocks, function (block, idx) {\n            if (isTSVFormat(block)) {\n                var result = parseTSVContents(block);\n                var blockMeta = blockMetaList[idx];\n                var axisKey = blockMeta.axisDim + 'Axis';\n\n                if (blockMeta) {\n                    newOption[axisKey] = newOption[axisKey] || [];\n                    newOption[axisKey][blockMeta.axisIndex] = {\n                        data: result.categories\n                    };\n                    newOption.series = newOption.series.concat(result.series);\n                }\n            }\n            else {\n                var result = parseListContents(block);\n                newOption.series.push(result);\n            }\n        });\n        return newOption;\n    }\n\n    /**\n     * @alias {module:echarts/component/toolbox/feature/DataView}\n     * @constructor\n     * @param {module:echarts/model/Model} model\n     */\n    function DataView(model) {\n\n        this._dom = null;\n\n        this.model = model;\n    }\n\n    DataView.defaultOption = {\n        show: true,\n        readOnly: false,\n        optionToContent: null,\n        contentToOption: null,\n\n        icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n        title: '数据视图',\n        lang: ['数据视图', '关闭', '刷新'],\n        backgroundColor: '#fff',\n        textColor: '#000',\n        textareaColor: '#fff',\n        textareaBorderColor: '#333',\n        buttonColor: '#c23531',\n        buttonTextColor: '#fff'\n    };\n\n    DataView.prototype.onclick = function (ecModel, api) {\n        var container = api.getDom();\n        var model = this.model;\n        if (this._dom) {\n            container.removeChild(this._dom);\n        }\n        var root = document.createElement('div');\n        root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n        root.style.backgroundColor = model.get('backgroundColor') || '#fff';\n\n        // Create elements\n        var header = document.createElement('h4');\n        var lang = model.get('lang') || [];\n        header.innerHTML = lang[0] || model.get('title');\n        header.style.cssText = 'margin: 10px 20px;';\n        header.style.color = model.get('textColor');\n\n        var viewMain = document.createElement('div');\n        var textarea = document.createElement('textarea');\n        viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n\n        var optionToContent = model.get('optionToContent');\n        var contentToOption = model.get('contentToOption');\n        var result = getContentFromModel(ecModel);\n        if (typeof optionToContent === 'function') {\n            var htmlOrDom = optionToContent(api.getOption());\n            if (typeof htmlOrDom === 'string') {\n                viewMain.innerHTML = htmlOrDom;\n            }\n            else if (zrUtil.isDom(htmlOrDom)) {\n                viewMain.appendChild(htmlOrDom);\n            }\n        }\n        else {\n            // Use default textarea\n            viewMain.appendChild(textarea);\n            textarea.readOnly = model.get('readOnly');\n            textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n            textarea.style.color = model.get('textColor');\n            textarea.style.borderColor = model.get('textareaBorderColor');\n            textarea.style.backgroundColor = model.get('textareaColor');\n            textarea.value = result.value;\n        }\n\n        var blockMetaList = result.meta;\n\n        var buttonContainer = document.createElement('div');\n        buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n\n        var buttonStyle = 'float:right;margin-right:20px;border:none;'\n            + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n        var closeButton = document.createElement('div');\n        var refreshButton = document.createElement('div');\n\n        buttonStyle += ';background-color:' + model.get('buttonColor');\n        buttonStyle += ';color:' + model.get('buttonTextColor');\n\n        var self = this;\n\n        function close() {\n            container.removeChild(root);\n            self._dom = null;\n        }\n        eventTool.addEventListener(closeButton, 'click', close);\n\n        eventTool.addEventListener(refreshButton, 'click', function () {\n            var newOption;\n            try {\n                if (typeof contentToOption === 'function') {\n                    newOption = contentToOption(viewMain, api.getOption());\n                }\n                else {\n                    newOption = parseContents(textarea.value, blockMetaList);\n                }\n            }\n            catch (e) {\n                close();\n                throw new Error('Data view format error ' + e);\n            }\n            if (newOption) {\n                api.dispatchAction({\n                    type: 'changeDataView',\n                    newOption: newOption\n                });\n            }\n\n            close();\n        });\n\n        closeButton.innerHTML = lang[1];\n        refreshButton.innerHTML = lang[2];\n        refreshButton.style.cssText = buttonStyle;\n        closeButton.style.cssText = buttonStyle;\n\n        !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n        buttonContainer.appendChild(closeButton);\n\n        // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n        eventTool.addEventListener(textarea, 'keydown', function (e) {\n            if ((e.keyCode || e.which) === 9) {\n                // get caret position/selection\n                var val = this.value;\n                var start = this.selectionStart;\n                var end = this.selectionEnd;\n\n                // set textarea value to: text before caret + tab + text after caret\n                this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end);\n\n                // put caret at right position again\n                this.selectionStart = this.selectionEnd = start + 1;\n\n                // prevent the focus lose\n                eventTool.stop(e);\n            }\n        });\n\n        root.appendChild(header);\n        root.appendChild(viewMain);\n        root.appendChild(buttonContainer);\n\n        viewMain.style.height = (container.clientHeight - 80) + 'px';\n\n        container.appendChild(root);\n        this._dom = root;\n    };\n\n    DataView.prototype.remove = function (ecModel, api) {\n        this._dom && api.getDom().removeChild(this._dom);\n    };\n\n    DataView.prototype.dispose = function (ecModel, api) {\n        this.remove(ecModel, api);\n    };\n\n    /**\n     * @inner\n     */\n    function tryMergeDataOption(newData, originalData) {\n        return zrUtil.map(newData, function (newVal, idx) {\n            var original = originalData && originalData[idx];\n            if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n                if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n                    newVal = newVal.value;\n                }\n                // Original data has option\n                return zrUtil.defaults({\n                    value: newVal\n                }, original);\n            }\n            else {\n                return newVal;\n            }\n        });\n    }\n\n    __webpack_require__(435).register('dataView', DataView);\n\n    __webpack_require__(419).registerAction({\n        type: 'changeDataView',\n        event: 'dataViewChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        var newSeriesOptList = [];\n        zrUtil.each(payload.newOption.series, function (seriesOpt) {\n            var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n            if (!seriesModel) {\n                // New created series\n                // Geuss the series type\n                newSeriesOptList.push(zrUtil.extend({\n                    // Default is scatter\n                    type: 'scatter'\n                }, seriesOpt));\n            }\n            else {\n                var originalData = seriesModel.get('data');\n                newSeriesOptList.push({\n                    name: seriesOpt.name,\n                    data: tryMergeDataOption(seriesOpt.data, originalData)\n                });\n            }\n        });\n\n        ecModel.mergeOption(zrUtil.defaults({\n            series: newSeriesOptList\n        }, payload.newOption));\n    });\n\n    module.exports = DataView;\n\n\n/***/ }),\n/* 604 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var BrushController = __webpack_require__(588);\n    var BrushTargetManager = __webpack_require__(589);\n    var history = __webpack_require__(503);\n    var sliderMove = __webpack_require__(593);\n\n    var each = zrUtil.each;\n\n    // Use dataZoomSelect\n    __webpack_require__(581);\n\n    // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n    var DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\n    function DataZoom(model, ecModel, api) {\n\n        /**\n         * @private\n         * @type {module:echarts/component/helper/BrushController}\n         */\n        (this._brushController = new BrushController(api.getZr()))\n            .on('brush', zrUtil.bind(this._onBrush, this))\n            .mount();\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._isZoomActive;\n    }\n\n    DataZoom.defaultOption = {\n        show: true,\n        // Icon group\n        icon: {\n            zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n            back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n        },\n        title: {\n            zoom: '区域缩放',\n            back: '区域缩放还原'\n        }\n    };\n\n    var proto = DataZoom.prototype;\n\n    proto.render = function (featureModel, ecModel, api, payload) {\n        this.model = featureModel;\n        this.ecModel = ecModel;\n        this.api = api;\n\n        updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n        updateBackBtnStatus(featureModel, ecModel);\n    };\n\n    proto.onclick = function (ecModel, api, type) {\n        handlers[type].call(this);\n    };\n\n    proto.remove = function (ecModel, api) {\n        this._brushController.unmount();\n    };\n\n    proto.dispose = function (ecModel, api) {\n        this._brushController.dispose();\n    };\n\n    /**\n     * @private\n     */\n    var handlers = {\n\n        zoom: function () {\n            var nextActive = !this._isZoomActive;\n\n            this.api.dispatchAction({\n                type: 'takeGlobalCursor',\n                key: 'dataZoomSelect',\n                dataZoomSelectActive: nextActive\n            });\n        },\n\n        back: function () {\n            this._dispatchZoomAction(history.pop(this.ecModel));\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._onBrush = function (areas, opt) {\n        if (!opt.isEnd || !areas.length) {\n            return;\n        }\n        var snapshot = {};\n        var ecModel = this.ecModel;\n\n        this._brushController.updateCovers([]); // remove cover\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(this.model.option), ecModel, {include: ['grid']}\n        );\n        brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            if (coordSys.type !== 'cartesian2d') {\n                return;\n            }\n\n            var brushType = area.brushType;\n            if (brushType === 'rect') {\n                setBatch('x', coordSys, coordRange[0]);\n                setBatch('y', coordSys, coordRange[1]);\n            }\n            else {\n                setBatch(({lineX: 'x', lineY: 'y'})[brushType], coordSys, coordRange);\n            }\n        });\n\n        history.push(ecModel, snapshot);\n\n        this._dispatchZoomAction(snapshot);\n\n        function setBatch(dimName, coordSys, minMax) {\n            var axis = coordSys.getAxis(dimName);\n            var axisModel = axis.model;\n            var dataZoomModel = findDataZoom(dimName, axisModel, ecModel);\n\n            // Restrict range.\n            var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n            if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n                minMax = sliderMove(\n                    0, minMax.slice(), axis.scale.getExtent(), 0,\n                    minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan\n                );\n            }\n\n            dataZoomModel && (snapshot[dataZoomModel.id] = {\n                dataZoomId: dataZoomModel.id,\n                startValue: minMax[0],\n                endValue: minMax[1]\n            });\n        }\n\n        function findDataZoom(dimName, axisModel, ecModel) {\n            var found;\n            ecModel.eachComponent({mainType: 'dataZoom', subType: 'select'}, function (dzModel) {\n                var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n                has && (found = dzModel);\n            });\n            return found;\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._dispatchZoomAction = function (snapshot) {\n        var batch = [];\n\n        // Convert from hash map to array.\n        each(snapshot, function (batchItem, dataZoomId) {\n            batch.push(zrUtil.clone(batchItem));\n        });\n\n        batch.length && this.api.dispatchAction({\n            type: 'dataZoom',\n            from: this.uid,\n            batch: batch\n        });\n    };\n\n    function retrieveAxisSetting(option) {\n        var setting = {};\n        // Compatible with previous setting: null => all axis, false => no axis.\n        zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n            setting[name] = option[name];\n            setting[name] == null && (setting[name] = 'all');\n            (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n        });\n        return setting;\n    }\n\n    function updateBackBtnStatus(featureModel, ecModel) {\n        featureModel.setIconStatus(\n            'back',\n            history.count(ecModel) > 1 ? 'emphasis' : 'normal'\n        );\n    }\n\n    function updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n        var zoomActive = view._isZoomActive;\n\n        if (payload && payload.type === 'takeGlobalCursor') {\n            zoomActive = payload.key === 'dataZoomSelect'\n                ? payload.dataZoomSelectActive : false;\n        }\n\n        view._isZoomActive = zoomActive;\n\n        featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(featureModel.option), ecModel, {include: ['grid']}\n        );\n\n        view._brushController\n            .setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n                return (targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared)\n                    ? 'lineX'\n                    : (!targetInfo.xAxisDeclared && targetInfo.yAxisDeclared)\n                    ? 'lineY'\n                    : 'rect';\n            }))\n            .enableBrush(\n                zoomActive\n                ? {\n                    brushType: 'auto',\n                    brushStyle: {\n                        // FIXME user customized?\n                        lineWidth: 0,\n                        fill: 'rgba(0,0,0,0.2)'\n                    }\n                }\n                : false\n            );\n    }\n\n\n    __webpack_require__(435).register('dataZoom', DataZoom);\n\n\n    // Create special dataZoom option for select\n    __webpack_require__(419).registerPreprocessor(function (option) {\n        if (!option) {\n            return;\n        }\n\n        var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n        if (!zrUtil.isArray(dataZoomOpts)) {\n            option.dataZoom = dataZoomOpts = [dataZoomOpts];\n        }\n\n        var toolboxOpt = option.toolbox;\n        if (toolboxOpt) {\n            // Assume there is only one toolbox\n            if (zrUtil.isArray(toolboxOpt)) {\n                toolboxOpt = toolboxOpt[0];\n            }\n\n            if (toolboxOpt && toolboxOpt.feature) {\n                var dataZoomOpt = toolboxOpt.feature.dataZoom;\n                addForAxis('xAxis', dataZoomOpt);\n                addForAxis('yAxis', dataZoomOpt);\n            }\n        }\n\n        function addForAxis(axisName, dataZoomOpt) {\n            if (!dataZoomOpt) {\n                return;\n            }\n\n            // Try not to modify model, because it is not merged yet.\n            var axisIndicesName = axisName + 'Index';\n            var givenAxisIndices = dataZoomOpt[axisIndicesName];\n            if (givenAxisIndices != null\n                && givenAxisIndices != 'all'\n                && !zrUtil.isArray(givenAxisIndices)\n            ) {\n                givenAxisIndices = (givenAxisIndices === false || givenAxisIndices === 'none') ? [] : [givenAxisIndices];\n            }\n\n            forEachComponent(axisName, function (axisOpt, axisIndex) {\n                if (givenAxisIndices != null\n                    && givenAxisIndices != 'all'\n                    && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1\n                ) {\n                    return;\n                }\n                var newOpt = {\n                    type: 'select',\n                    $fromToolbox: true,\n                    // Id for merge mapping.\n                    id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n                };\n                // FIXME\n                // Only support one axis now.\n                newOpt[axisIndicesName] = axisIndex;\n                dataZoomOpts.push(newOpt);\n            });\n        }\n\n        function forEachComponent(mainType, cb) {\n            var opts = option[mainType];\n            if (!zrUtil.isArray(opts)) {\n                opts = opts ? [opts] : [];\n            }\n            each(opts, cb);\n        }\n    });\n\n    module.exports = DataZoom;\n\n\n/***/ }),\n/* 605 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(418);\n\n    function MagicType(model) {\n        this.model = model;\n    }\n\n    MagicType.defaultOption = {\n        show: true,\n        type: [],\n        // Icon group\n        icon: {\n            line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n            bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n            stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z', // jshint ignore:line\n            tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n        },\n        title: {\n            line: '切换为折线图',\n            bar: '切换为柱状图',\n            stack: '切换为堆叠',\n            tiled: '切换为平铺'\n        },\n        option: {},\n        seriesIndex: {}\n    };\n\n    var proto = MagicType.prototype;\n\n    proto.getIcons = function () {\n        var model = this.model;\n        var availableIcons = model.get('icon');\n        var icons = {};\n        zrUtil.each(model.get('type'), function (type) {\n            if (availableIcons[type]) {\n                icons[type] = availableIcons[type];\n            }\n        });\n        return icons;\n    };\n\n    var seriesOptGenreator = {\n        'line': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'line',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.line') || {}, true);\n            }\n        },\n        'bar': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'bar',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.bar') || {}, true);\n            }\n        },\n        'stack': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: '__ec_magicType_stack__'\n                }, model.get('option.stack') || {}, true);\n            }\n        },\n        'tiled': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: ''\n                }, model.get('option.tiled') || {}, true);\n            }\n        }\n    };\n\n    var radioTypes = [\n        ['line', 'bar'],\n        ['stack', 'tiled']\n    ];\n\n    proto.onclick = function (ecModel, api, type) {\n        var model = this.model;\n        var seriesIndex = model.get('seriesIndex.' + type);\n        // Not supported magicType\n        if (!seriesOptGenreator[type]) {\n            return;\n        }\n        var newOption = {\n            series: []\n        };\n        var generateNewSeriesTypes = function (seriesModel) {\n            var seriesType = seriesModel.subType;\n            var seriesId = seriesModel.id;\n            var newSeriesOpt = seriesOptGenreator[type](\n                seriesType, seriesId, seriesModel, model\n            );\n            if (newSeriesOpt) {\n                // PENDING If merge original option?\n                zrUtil.defaults(newSeriesOpt, seriesModel.option);\n                newOption.series.push(newSeriesOpt);\n            }\n            // Modify boundaryGap\n            var coordSys = seriesModel.coordinateSystem;\n            if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n                var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n                if (categoryAxis) {\n                    var axisDim = categoryAxis.dim;\n                    var axisType = axisDim + 'Axis';\n                    var axisModel = ecModel.queryComponents({\n                        mainType: axisType,\n                        index: seriesModel.get(name + 'Index'),\n                        id: seriesModel.get(name + 'Id')\n                    })[0];\n                    var axisIndex = axisModel.componentIndex;\n\n                    newOption[axisType] = newOption[axisType] || [];\n                    for (var i = 0; i <= axisIndex; i++) {\n                        newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n                    }\n                    newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n                }\n            }\n        };\n\n        zrUtil.each(radioTypes, function (radio) {\n            if (zrUtil.indexOf(radio, type) >= 0) {\n                zrUtil.each(radio, function (item) {\n                    model.setIconStatus(item, 'normal');\n                });\n            }\n        });\n\n        model.setIconStatus(type, 'emphasis');\n\n        ecModel.eachComponent(\n            {\n                mainType: 'series',\n                query: seriesIndex == null ? null : {\n                    seriesIndex: seriesIndex\n                }\n            }, generateNewSeriesTypes\n        );\n        api.dispatchAction({\n            type: 'changeMagicType',\n            currentType: type,\n            newOption: newOption\n        });\n    };\n\n    var echarts = __webpack_require__(419);\n    echarts.registerAction({\n        type: 'changeMagicType',\n        event: 'magicTypeChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        ecModel.mergeOption(payload.newOption);\n    });\n\n    __webpack_require__(435).register('magicType', MagicType);\n\n    module.exports = MagicType;\n\n\n/***/ }),\n/* 606 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var history = __webpack_require__(503);\n\n    function Restore(model) {\n        this.model = model;\n    }\n\n    Restore.defaultOption = {\n        show: true,\n        icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n        title: '还原'\n    };\n\n    var proto = Restore.prototype;\n\n    proto.onclick = function (ecModel, api, type) {\n        history.clear(ecModel);\n\n        api.dispatchAction({\n            type: 'restore',\n            from: this.uid\n        });\n    };\n\n\n    __webpack_require__(435).register('restore', Restore);\n\n\n    __webpack_require__(419).registerAction(\n        {type: 'restore', event: 'restore', update: 'prepareAndUpdate'},\n        function (payload, ecModel) {\n            ecModel.resetOption('recreate');\n        }\n    );\n\n    module.exports = Restore;\n\n\n/***/ }),\n/* 607 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(427);\n\n    function SaveAsImage (model) {\n        this.model = model;\n    }\n\n    SaveAsImage.defaultOption = {\n        show: true,\n        icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n        title: '保存为图片',\n        type: 'png',\n        // Default use option.backgroundColor\n        // backgroundColor: '#fff',\n        name: '',\n        excludeComponents: ['toolbox'],\n        pixelRatio: 1,\n        lang: ['右键另存为图片']\n    };\n\n    SaveAsImage.prototype.unusable = !env.canvasSupported;\n\n    var proto = SaveAsImage.prototype;\n\n    proto.onclick = function (ecModel, api) {\n        var model = this.model;\n        var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n        var $a = document.createElement('a');\n        var type = model.get('type', true) || 'png';\n        $a.download = title + '.' + type;\n        $a.target = '_blank';\n        var url = api.getConnectedDataURL({\n            type: type,\n            backgroundColor: model.get('backgroundColor', true)\n                || ecModel.get('backgroundColor') || '#fff',\n            excludeComponents: model.get('excludeComponents'),\n            pixelRatio: model.get('pixelRatio')\n        });\n        $a.href = url;\n        // Chrome and Firefox\n        if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n            var evt = new MouseEvent('click', {\n                view: window,\n                bubbles: true,\n                cancelable: false\n            });\n            $a.dispatchEvent(evt);\n        }\n        // IE\n        else {\n            var lang = model.get('lang');\n            var html = ''\n                + '<body style=\"margin:0;\">'\n                + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + ((lang && lang[0]) || '') + '\" />'\n                + '</body>';\n            var tab = window.open();\n            tab.document.write(html);\n        }\n    };\n\n    __webpack_require__(435).register(\n        'saveAsImage', SaveAsImage\n    );\n\n    module.exports = SaveAsImage;\n\n\n/***/ }),\n/* 608 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(574);\n\n    __webpack_require__(610);\n\n    __webpack_require__(611);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(419).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(419).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 609 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(418);\n    var zrColor = __webpack_require__(449);\n    var eventUtil = __webpack_require__(441);\n    var formatUtil = __webpack_require__(431);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(427);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 610 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(419).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 611 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(609);\n    var zrUtil = __webpack_require__(418);\n    var formatUtil = __webpack_require__(431);\n    var numberUtil = __webpack_require__(422);\n    var graphic = __webpack_require__(420);\n    var findPointFromSeries = __webpack_require__(495);\n    var layoutUtil = __webpack_require__(436);\n    var env = __webpack_require__(427);\n    var Model = __webpack_require__(430);\n    var globalListener = __webpack_require__(496);\n    var axisHelper = __webpack_require__(439);\n    var axisPointerViewHelper = __webpack_require__(497);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(419).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n/***/ }),\n/* 612 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n/* 613 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(612);\n    var zrUtil = __webpack_require__(418);\n    var ComponentModel = __webpack_require__(434);\n    var layout = __webpack_require__(436);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n/* 614 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var Axis = __webpack_require__(506);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n/* 615 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(418);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n/* 616 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var Cartesian = __webpack_require__(615);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n/* 617 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(508);\n\n    var ComponentModel = __webpack_require__(434);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n/* 618 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(460);\n    var symbolUtil = __webpack_require__(466);\n    var axisHelper = __webpack_require__(439);\n    var axisModelCommonMixin = __webpack_require__(507);\n    var Model = __webpack_require__(430);\n    var util = __webpack_require__(418);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: __webpack_require__(511),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n/* 619 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var numberUtil = __webpack_require__(422);\n    var parsePercent = numberUtil.parsePercent;\n\n    var STACK_PREFIX = '__ec_stack_';\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    /**\n     * @param {Object} opt\n     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n     * @param {number} opt.count Positive interger.\n     * @param {number} [opt.barWidth]\n     * @param {number} [opt.barMaxWidth]\n     * @param {number} [opt.barGap]\n     * @param {number} [opt.barCategoryGap]\n     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n     */\n    function getLayoutOnAxis(opt, api) {\n        var params = [];\n        var baseAxis = opt.axis;\n        var axisKey = 'axis0';\n\n        if (baseAxis.type !== 'category') {\n            return;\n        }\n        var bandWidth = baseAxis.getBandWidth();\n\n        for (var i = 0; i < opt.count || 0; i++) {\n            params.push(zrUtil.defaults({\n                bandWidth: bandWidth,\n                axisKey: axisKey,\n                stackId: STACK_PREFIX + i\n            }, opt));\n        }\n        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\n        var result = [];\n        for (var i = 0; i < opt.count; i++) {\n            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n            item.offsetCenter = item.offset + item.width / 2;\n            result.push(item);\n        }\n\n        return result;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            return {\n                bandWidth: bandWidth,\n                barWidth: barWidth,\n                barMaxWidth: barMaxWidth,\n                barGap: barGap,\n                barCategoryGap: barCategoryGap,\n                axisKey: getAxisKey(baseAxis),\n                stackId: getSeriesStackId(seriesModel)\n            };\n        });\n\n        return doCalBarWidthAndOffset(seriesInfoList, api);\n    }\n\n    function doCalBarWidthAndOffset(seriesInfoList, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n            var axisKey = seriesInfo.axisKey;\n            var bandWidth = seriesInfo.bandWidth;\n            var columnsOnAxis = columnsMap[axisKey] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[axisKey] = columnsOnAxis;\n\n            var stackId = seriesInfo.stackId;\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            var barWidth = seriesInfo.barWidth;\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            var barMaxWidth = seriesInfo.barMaxWidth;\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            var barGap = seriesInfo.barGap;\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            var barCategoryGap = seriesInfo.barCategoryGap;\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            // Check series coordinate, do layout for cartesian2d only\n            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\n\n    module.exports = barLayoutGrid;\n\n\n/***/ }),\n/* 620 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n/***/ }),\n/* 621 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(420);\n    var zrUtil = __webpack_require__(418);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 622 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(418);\n    var modelUtil = __webpack_require__(421);\n    var Model = __webpack_require__(430);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(434);\n\n    var globalDefault = __webpack_require__(624);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(512));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 623 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(418);\n    var modelUtil = __webpack_require__(421);\n    var ComponentModel = __webpack_require__(434);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 624 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n/* 625 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(451)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 626 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 627 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(451)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 628 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(451)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 629 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(437);\n    var graphicUtil = __webpack_require__(420);\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 630 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(418);\n    var compatStyle = __webpack_require__(631);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 631 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(418);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 632 */\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n/* 633 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(418);\n    var Scale = __webpack_require__(452);\n    var numberUtil = __webpack_require__(422);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(464);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 634 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(418);\n    var Scale = __webpack_require__(452);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 635 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(418);\n    var numberUtil = __webpack_require__(422);\n    var formatUtil = __webpack_require__(431);\n    var scaleHelper = __webpack_require__(513);\n\n    var IntervalScale = __webpack_require__(464);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 636 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(472);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 637 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 638 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(558);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(411)(\"3d642fb7\", content, true);\n\n/***/ }),\n/* 639 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(100)))\n\n/***/ }),\n/* 640 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(638)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(557),\n  /* template */\n  __webpack_require__(641),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 641 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"echarts\"\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 642 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(418);\n    var Draggable = __webpack_require__(676);\n\n    var Eventful = __webpack_require__(443);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n/* 643 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(418);\n    var config = __webpack_require__(453);\n    var Style = __webpack_require__(554);\n    var Pattern = __webpack_require__(553);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 644 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(453);\n    var util = __webpack_require__(418);\n    var log = __webpack_require__(551);\n    var BoundingRect = __webpack_require__(432);\n    var timsort = __webpack_require__(470);\n\n    var Layer = __webpack_require__(643);\n\n    var requestAnimationFrame = __webpack_require__(547);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(552);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 645 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(418);\n    var env = __webpack_require__(427);\n\n    var Group = __webpack_require__(454);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(470);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 646 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(418);\n    var Dispatcher = __webpack_require__(441).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(547);\n\n    var Animator = __webpack_require__(546);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 647 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(648);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 648 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 649 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(548).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 650 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(440);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 651 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 652 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(455).CMD;\n    var line = __webpack_require__(651);\n    var cubic = __webpack_require__(650);\n    var quadratic = __webpack_require__(653);\n    var arc = __webpack_require__(649);\n    var normalizeRadian = __webpack_require__(548).normalizeRadian;\n    var curve = __webpack_require__(440);\n\n    var windingLine = __webpack_require__(654);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 653 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(440);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 654 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 655 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(441);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 656 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(428);\n    var curve = __webpack_require__(440);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 657 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(441);\n    var zrUtil = __webpack_require__(418);\n    var Eventful = __webpack_require__(443);\n    var env = __webpack_require__(427);\n    var GestureMgr = __webpack_require__(655);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 658 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(429);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 659 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(418);\n\n    var Gradient = __webpack_require__(472);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 660 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(418);\n\n    var Gradient = __webpack_require__(472);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 661 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(471);\n    var zrUtil = __webpack_require__(418);\n    var textContain = __webpack_require__(437);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 662 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 663 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(428);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 664 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(428);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 665 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(437);\n    var BoundingRect = __webpack_require__(432);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 666 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(429).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 667 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(440);\n    var vec2 = __webpack_require__(428);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(429).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 668 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(429).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 669 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(429).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 670 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(555);\n\n    module.exports = __webpack_require__(429).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 671 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(555);\n\n    module.exports = __webpack_require__(429).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 672 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(662);\n\n    module.exports = __webpack_require__(429).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 673 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(429).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 674 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(427);\n    var Path = __webpack_require__(429);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 675 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(546);\n    var util = __webpack_require__(418);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(551);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 676 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 677 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(429);\n    var PathProxy = __webpack_require__(455);\n    var transformPath = __webpack_require__(678);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 678 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(455).CMD;\n    var vec2 = __webpack_require__(428);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 679 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(550);\n    var env = __webpack_require__(427);\n    var zrUtil = __webpack_require__(418);\n\n    var Handler = __webpack_require__(642);\n    var Storage = __webpack_require__(645);\n    var Animation = __webpack_require__(646);\n    var HandlerProxy = __webpack_require__(657);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(644)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.5.1';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n/* 680 */,\n/* 681 */,\n/* 682 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vuex__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__units_mainMenu__ = __webpack_require__(99);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__units_mainMenu___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__units_mainMenu__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Modal__ = __webpack_require__(101);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__Modal__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__units_group__ = __webpack_require__(447);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__units_group___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__units_group__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__units_dateSelect__ = __webpack_require__(468);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__units_dateSelect___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__units_dateSelect__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_muse_components_dropDownMenu__ = __webpack_require__(97);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_muse_components_menu__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_muse_components_snackbar__ = __webpack_require__(98);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_vue_echarts_components_ECharts_vue__ = __webpack_require__(640);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_vue_echarts_components_ECharts_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_vue_echarts_components_ECharts_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_echarts_lib_chart_bar__ = __webpack_require__(560);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_echarts_lib_chart_bar___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_echarts_lib_chart_bar__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_echarts_lib_chart_line__ = __webpack_require__(568);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_echarts_lib_chart_line___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_echarts_lib_chart_line__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_echarts_lib_component_title__ = __webpack_require__(599);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_echarts_lib_component_title___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_echarts_lib_component_title__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_echarts_lib_component_legend__ = __webpack_require__(594);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_echarts_lib_component_legend___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_echarts_lib_component_legend__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_echarts_lib_component_tooltip__ = __webpack_require__(608);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15_echarts_lib_component_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_echarts_lib_component_toolbox__ = __webpack_require__(600);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_echarts_lib_component_toolbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_echarts_lib_component_toolbox__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_1_vue__[\"a\" /* default */].component(__WEBPACK_IMPORTED_MODULE_9_muse_components_snackbar__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_9_muse_components_snackbar__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_1_vue__[\"a\" /* default */].component(__WEBPACK_IMPORTED_MODULE_7_muse_components_dropDownMenu__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_7_muse_components_dropDownMenu__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_1_vue__[\"a\" /* default */].component(__WEBPACK_IMPORTED_MODULE_8_muse_components_menu__[\"a\" /* menuItem */].name, __WEBPACK_IMPORTED_MODULE_8_muse_components_menu__[\"a\" /* menuItem */]);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'Charts',\n  components: {\n    mainMenu: __WEBPACK_IMPORTED_MODULE_3__units_mainMenu___default.a,\n    Modal: __WEBPACK_IMPORTED_MODULE_4__Modal___default.a,\n    ECharts: __WEBPACK_IMPORTED_MODULE_10_vue_echarts_components_ECharts_vue___default.a,\n    Group: __WEBPACK_IMPORTED_MODULE_5__units_group___default.a,\n    dateSelect: __WEBPACK_IMPORTED_MODULE_6__units_dateSelect___default.a\n  },\n  data: function data() {\n    return {\n      selectedWorker: '',\n      categoryData: {\n        code: '',\n        name: '全部服务'\n      },\n      chartOption: {\n        title: {\n          show: true,\n          text: '运营对比图',\n          subtext: this.fullDate,\n          top: 'top',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        legend: {\n          top: '12%'\n        },\n        toolbox: {\n          orient: 'vertical',\n          itemSize: 24,\n          right: 24,\n          top: 12,\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid: {\n          top: '24%',\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          boundaryGap: true\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '单量'\n        }, {\n          type: 'value',\n          name: '比率',\n          axisLabel: {\n            formatter: '{value} %'\n          }\n        }],\n        series: []\n      }\n    };\n  },\n\n  computed: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"a\" /* mapState */])(['city', 'group', 'snackbar', 'snackbarMsg', 'generalOrderStatistics', 'trendDataWithCondition', 'openDrawer']), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"d\" /* mapGetters */])(['fullDate']), {\n    targetNum: function targetNum() {\n      var arr = void 0;\n      if (this.trendDataWithCondition) {\n        arr = this.trendDataWithCondition.map(function (d) {\n          return d.targetNum;\n        });\n      }\n      return arr;\n    },\n    completionNum: function completionNum() {\n      var arr = void 0;\n      if (this.trendDataWithCondition) {\n        arr = this.trendDataWithCondition.map(function (d) {\n          return d.completionNum;\n        });\n      }\n      return arr;\n    },\n    achievingRate: function achievingRate() {\n      var arr = void 0;\n      if (this.trendDataWithCondition) {\n        arr = this.trendDataWithCondition.map(function (d) {\n          return d.achievingRate;\n        });\n      }\n      return arr;\n    },\n    linkGrowthRate: function linkGrowthRate() {\n      var arr = void 0;\n      if (this.trendDataWithCondition) {\n        arr = this.trendDataWithCondition.map(function (d) {\n          return d.linkGrowthRate;\n        });\n      }\n      return arr;\n    },\n    dimension: function dimension() {\n      var arr = void 0;\n      if (this.trendDataWithCondition) {\n        arr = this.trendDataWithCondition.map(function (d) {\n          return d.dimension;\n        });\n      }\n      return arr;\n    }\n  }),\n  mounted: function mounted() {\n    var bar = this.$refs.bar;\n    bar.showLoading({\n      text: '加载中',\n      color: '#c23531',\n      textColor: '#000',\n      maskColor: 'rgba(255, 255, 255, 0.8)',\n      zlevel: 0\n    });\n    var data = {\n      cityCode: this.city,\n      date: this.fullDate,\n      parentId: this.group\n    };\n    this.getGeneralOrderStatistics(data);\n    this.getData();\n  },\n\n  methods: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"b\" /* mapMutations */])(['hideSnackbar']), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"c\" /* mapActions */])(['getGeneralOrderStatistics', 'getTrendDataWithCondition']), {\n    getData: function getData() {\n      var z = this;\n      var data = {\n        cityCode: this.city,\n        date: this.fullDate,\n        parentId: this.group,\n        categoryCode: this.categoryData.code\n      };\n      this.getTrendDataWithCondition(data).then(function () {\n        z.updateBar();\n      });\n    },\n    handleChangeService: function handleChangeService(v) {\n      var name = '全部服务';\n      if (v !== '') {\n        name = this.generalOrderStatistics.filter(function (t) {\n          return t.categoryCode === v;\n        })[0].categoryName;\n      }\n      this.categoryData = {\n        code: v,\n        name: name\n      };\n      this.changeSelect();\n    },\n    changeSelect: function changeSelect() {\n      this.getData();\n    },\n    updateBar: function updateBar() {\n      var z = this;\n      var bar = z.$refs.bar;\n      var lengend = [];\n      var series = [];\n      var yAxis = [];\n      var yAxisConfig = {\n        a: false,\n        b: false\n      };\n      if (z.targetNum && z.targetNum[0] !== null) {\n        lengend.push('目标单量');\n        series.push({\n          name: '目标单量',\n          type: 'bar',\n\n          areaStyle: { normal: {} },\n\n          data: z.targetNum\n        });\n        yAxisConfig.a = true;\n      }\n      if (z.completionNum && z.completionNum[0] !== null) {\n        lengend.push('完成单量');\n        series.push({\n          name: '完成单量',\n          type: 'bar',\n\n          areaStyle: { normal: {} },\n\n          data: z.completionNum\n        });\n        yAxisConfig.a = true;\n      }\n      if (z.targetNum && z.targetNum[0] !== null && z.achievingRate && z.achievingRate[0] !== null) {\n        lengend.push('目标达成率');\n        series.push({\n          name: '目标达成率',\n          type: 'line',\n          yAxisIndex: 1,\n          formatter: '{value} %',\n          data: z.achievingRate\n        });\n        yAxisConfig.b = true;\n      }\n      if (z.linkGrowthRate && z.linkGrowthRate[0] !== null) {\n        lengend.push('环比增长率');\n        series.push({\n          name: '环比增长率',\n          type: 'line',\n          yAxisIndex: 1,\n          formatter: '{value} %',\n          data: z.linkGrowthRate\n        });\n        yAxisConfig.b = true;\n      }\n      if (yAxisConfig.a === true) {\n        yAxis.push({\n          type: 'value',\n          name: '单量'\n        });\n      }\n      if (yAxisConfig.b === true) {\n        yAxis.push({\n          type: 'value',\n          name: '比率',\n          axisLabel: {\n            formatter: '{value} %'\n          }\n        });\n      }\n      this.chartOption = {\n        title: {\n          show: true,\n          text: z.categoryData.name + '-运营对比图',\n          subtext: this.fullDate,\n          top: 'top',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        legend: {\n          top: '12%',\n          data: lengend\n        },\n        toolbox: {\n          orient: 'vertical',\n          itemSize: 24,\n          right: 24,\n          top: 12,\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid: {\n          top: '24%',\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          boundaryGap: true,\n          data: z.dimension\n        }],\n        yAxis: yAxis,\n        series: series\n      };\n      bar.hideLoading();\n    }\n  })\n});\n\n/***/ }),\n/* 683 */,\n/* 684 */,\n/* 685 */,\n/* 686 */,\n/* 687 */,\n/* 688 */,\n/* 689 */,\n/* 690 */,\n/* 691 */,\n/* 692 */,\n/* 693 */,\n/* 694 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(410)();\n// imports\n\n\n// module\nexports.push([module.i, \"body,html{overflow-x:auto;overflow-y:hidden}#mainContent{height:calc(100vh - 75px);overflow:auto}.setting-appbar.mu-appbar{height:74px;padding-left:100px;background-color:#00bcd4}.setting-dropdown{line-height:46px;margin-right:48px}.setting-dropdown label{vertical-align:text-bottom}.setting-dropdown .mu-dropDown-menu-text{color:#fff}#orderTypeBox{display:-webkit-box;display:-ms-flexbox;display:flex;height:240px;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center}#orderTypeBox .status-box{margin:6px 12px}#orderTypeBox .status-box:first-child .status-button{height:228px;width:120px}#orderTypeBox .status-box .status-button{height:108px;width:120px}#orderTypeBox .status-box.selected .status-button{background-color:#fffde7!important}#orderTypeBox .status-box .head-status-number{font-size:24px}#orderTypeBox .status-box .mu-flat-button-label{font-size:18px}#app div.echarts{width:100%;min-height:500px;height:100%}#monthDropDown,#yearDropDown{margin-right:-34px}\", \"\", {\"version\":3,\"sources\":[\"D:/code/vue-dashboard/src/components/compareChart.vue\"],\"names\":[],\"mappings\":\"AACA,UAEE,gBAAiB,AACjB,iBAAmB,CACpB,AACD,aACE,0BAA2B,AAC3B,aAAe,CAChB,AACD,0BACE,YAAa,AACb,mBAAoB,AACpB,wBAA0B,CAC3B,AACD,kBACE,iBAAkB,AAClB,iBAAmB,CACpB,AACD,wBACE,0BAA4B,CAC7B,AACD,yCACE,UAAY,CACb,AACD,cACE,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,aAAc,AACd,mBAAoB,AAChB,eAAgB,AACpB,4BAA6B,AAC7B,6BAA8B,AAC1B,0BAA2B,AACvB,sBAAuB,AAC/B,yBAA0B,AACtB,sBAAuB,AACnB,mBAAoB,AAC5B,0BAA2B,AACvB,oBAAsB,CAC3B,AACD,0BACE,eAAiB,CAClB,AACD,qDACE,aAAc,AACd,WAAa,CACd,AACD,yCACE,aAAc,AACd,WAAa,CACd,AACD,kDACE,kCAAqC,CACtC,AACD,8CACE,cAAgB,CACjB,AACD,gDACE,cAAgB,CACjB,AACD,iBACE,WAAY,AACZ,iBAAkB,AAClB,WAAa,CACd,AACD,6BACE,kBAAoB,CACrB\",\"file\":\"compareChart.vue\",\"sourcesContent\":[\"\\nhtml,\\r\\nbody {\\r\\n  overflow-x: auto;\\r\\n  overflow-y: hidden;\\n}\\n#mainContent {\\r\\n  height: calc(100vh - 75px);\\r\\n  overflow: auto;\\n}\\n.setting-appbar.mu-appbar {\\r\\n  height: 74px;\\r\\n  padding-left: 100px;\\r\\n  background-color: #00bcd4;\\n}\\n.setting-dropdown {\\r\\n  line-height: 46px;\\r\\n  margin-right: 48px;\\n}\\n.setting-dropdown label {\\r\\n  vertical-align: text-bottom;\\n}\\n.setting-dropdown .mu-dropDown-menu-text {\\r\\n  color: #fff;\\n}\\n#orderTypeBox {\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  height: 240px;\\r\\n  -ms-flex-wrap: wrap;\\r\\n      flex-wrap: wrap;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-box-direction: normal;\\r\\n      -ms-flex-direction: column;\\r\\n          flex-direction: column;\\r\\n  -webkit-box-align: center;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center;\\r\\n  -ms-flex-line-pack: center;\\r\\n      align-content: center;\\n}\\n#orderTypeBox .status-box {\\r\\n  margin: 6px 12px;\\n}\\n#orderTypeBox .status-box:first-child .status-button {\\r\\n  height: 228px;\\r\\n  width: 120px;\\n}\\n#orderTypeBox .status-box .status-button {\\r\\n  height: 108px;\\r\\n  width: 120px;\\n}\\n#orderTypeBox .status-box.selected .status-button {\\r\\n  background-color: #fffde7 !important;\\n}\\n#orderTypeBox .status-box .head-status-number {\\r\\n  font-size: 24px;\\n}\\n#orderTypeBox .status-box .mu-flat-button-label {\\r\\n  font-size: 18px;\\n}\\n#app div.echarts {\\r\\n  width: 100%;\\r\\n  min-height: 500px;\\r\\n  height: 100%;\\n}\\n#yearDropDown, #monthDropDown {\\r\\n  margin-right: -34px;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 695 */,\n/* 696 */,\n/* 697 */,\n/* 698 */,\n/* 699 */,\n/* 700 */,\n/* 701 */,\n/* 702 */,\n/* 703 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(694);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(411)(\"10d7d185\", content, true);\n\n/***/ }),\n/* 704 */,\n/* 705 */,\n/* 706 */,\n/* 707 */,\n/* 708 */,\n/* 709 */,\n/* 710 */,\n/* 711 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: {\n      'drawer-opened': _vm.openDrawer\n    }\n  }, [_c('mainMenu'), _vm._v(\" \"), _c('mu-appbar', {\n    staticClass: \"setting-appbar\",\n    attrs: {\n      \"title\": \"运营数据对比\"\n    }\n  }, [_c('div', {\n    staticClass: \"setting-dropdown\",\n    slot: \"right\"\n  }, [_c('Group', {\n    attrs: {\n      \"handleChange\": _vm.changeSelect\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"setting-dropdown\",\n    slot: \"right\"\n  }, [_c('dateSelect', {\n    attrs: {\n      \"handleChange\": _vm.changeSelect\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"setting-dropdown\",\n    slot: \"right\"\n  }, [_c('mu-dropDown-menu', {\n    attrs: {\n      \"value\": _vm.categoryData.code,\n      \"maxHeight\": 480,\n      \"id\": \"serviceDropDown\"\n    },\n    on: {\n      \"change\": _vm.handleChangeService\n    }\n  }, [_c('mu-menu-item', {\n    attrs: {\n      \"value\": \"\",\n      \"title\": \"全部服务\"\n    }\n  }), _vm._v(\" \"), _vm._l((_vm.generalOrderStatistics), function(item) {\n    return _c('mu-menu-item', {\n      key: item.categoryCode,\n      attrs: {\n        \"value\": item.categoryCode,\n        \"title\": item.categoryName\n      }\n    })\n  })], 2)], 1)]), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"mainContent\"\n    }\n  }, [_c('ECharts', {\n    ref: \"bar\",\n    attrs: {\n      \"options\": _vm.chartOption,\n      \"auto-resize\": \"\"\n    }\n  })], 1), _vm._v(\" \"), (_vm.snackbar) ? _c('mu-snackbar', {\n    attrs: {\n      \"message\": _vm.snackbarMsg,\n      \"action\": \"关闭\"\n    },\n    on: {\n      \"actionClick\": _vm.hideSnackbar,\n      \"close\": _vm.hideSnackbar\n    }\n  }) : _vm._e()], 1)\n},staticRenderFns: []}\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// static/js/1.034574f84f19d48ecaf1.js","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-d7fe7df2\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./compareChart.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./compareChart.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d7fe7df2\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./compareChart.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/compareChart.vue\n// module id = 413\n// module chunks = 1","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 418\n// module chunks = 0 1","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.6.1',\n        dependencies: {\n            zrender: '3.5.1'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 419\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    graphic.getFont = function (opt, ecModel) {\n        var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 420\n// module chunks = 0 1","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 421\n// module chunks = 0 1","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 422\n// module chunks = 0 1","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 427\n// module chunks = 0 1","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 428\n// module chunks = 0 1","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 429\n// module chunks = 0 1","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 430\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 431\n// module chunks = 0 1","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 432\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 433\n// module chunks = 0 1","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 434\n// module chunks = 0 1","'use strict';\n\n\n    var features = {};\n\n    module.exports = {\n        register: function (name, ctor) {\n            features[name] = ctor;\n        },\n\n        get: function (name) {\n            return features[name];\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/featureManager.js\n// module id = 435\n// module chunks = 0 1","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 436\n// module chunks = 0 1","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 437\n// module chunks = 0 1","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: scale.type === 'interval' ? model.get('minInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 439\n// module chunks = 0 1","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 440\n// module chunks = 0 1","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 441\n// module chunks = 0 1","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 442\n// module chunks = 0 1","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 443\n// module chunks = 0 1","<template>\r\n  <div>\r\n    <div v-if=\"showCity && cities && cities.length\" class=\"city-select\">\r\n      <mu-select-field :value=\"city\" @change=\"handleChangeCity\" class=\"city-select-field\" ref=\"city\">\r\n        <mu-menu-item value=\"\" title=\"全部城市\"/>\r\n        <mu-menu-item v-for=\"item in cities\" :key=\"item.cityCode\" :value=\"item.cityCode\" :title=\"item.cityName\"/>\r\n      </mu-select-field>\r\n    </div>\r\n    <div v-if=\"showGroup && groups && groups.length\" class=\"group-select\">\r\n      <mu-select-field :value=\"group\" @change=\"handleChangeGroup\" class=\"group-select-field\" ref=\"group\">\r\n        <mu-menu-item value=\"\" title=\"全部小组\"/>\r\n        <mu-menu-item v-for=\"item in groups\" :key=\"item.leaderId\" :value=\"item.leaderId\" :title=\"item.leaderName\"/>\r\n      </mu-select-field>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Vue from 'vue'\r\nimport { mapState, mapMutations, mapActions } from 'vuex'\r\nimport selectField from 'muse-components/selectField'\r\nimport {menuItem} from 'muse-components/menu'\r\n\r\nVue.component(selectField.name, selectField)\r\nVue.component(menuItem.name, menuItem)\r\nexport default {\r\n  name: 'Group',\r\n  props: {\r\n    handleChange: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    changeCity: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    showCity: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showGroup: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  created () {\r\n    this.getConfig()\r\n  },\r\n  computed: {\r\n    ...mapState([\r\n      'cities',\r\n      'city',\r\n      'groups',\r\n      'group'\r\n    ])\r\n  },\r\n  mounted () {\r\n    // this.setCity(this.$refs.city.value)\r\n    // if (!this.group) {\r\n    //   this.setGroup(this.$refs.group && this.$refs.group.value)\r\n    // }\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'getConfig'\r\n    ]),\r\n    ...mapMutations([\r\n      'setCity',\r\n      'setGroup'\r\n    ]),\r\n    handleChangeCity (v) {\r\n      this.setCity(v)\r\n      this.changeCity()\r\n      this.handleChange()\r\n    },\r\n    handleChangeGroup (v) {\r\n      this.setGroup(v)\r\n      this.handleChange()\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.city-select, .group-select {\r\n  display: inline-block;\r\n  height: 36px;\r\n  margin-top: 5px;\r\n  margin-left: 10px;\r\n  padding: 0 10px;\r\n  min-height: 36px;\r\n}\r\n.city-select-field, .group-select-field {\r\n  width: 84px;\r\n  top: -1px;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// group.vue?7fd9ff0e","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".city-select,.group-select{display:inline-block;height:36px;margin-top:5px;margin-left:10px;padding:0 10px;min-height:36px}.city-select-field,.group-select-field{width:84px;top:-1px}\", \"\", {\"version\":3,\"sources\":[\"D:/code/vue-dashboard/src/components/units/group.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,qBAAsB,AACtB,YAAa,AACb,eAAgB,AAChB,iBAAkB,AAClB,eAAgB,AAChB,eAAiB,CAClB,AACD,uCACE,WAAY,AACZ,QAAU,CACX\",\"file\":\"group.vue\",\"sourcesContent\":[\"\\n.city-select, .group-select {\\r\\n  display: inline-block;\\r\\n  height: 36px;\\r\\n  margin-top: 5px;\\r\\n  margin-left: 10px;\\r\\n  padding: 0 10px;\\r\\n  min-height: 36px;\\n}\\n.city-select-field, .group-select-field {\\r\\n  width: 84px;\\r\\n  top: -1px;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-32a9117e\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/units/group.vue\n// module id = 445\n// module chunks = 0 1 2 3 4 5","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-32a9117e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./group.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"a4925e18\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-32a9117e\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/units/group.vue\n// module id = 446\n// module chunks = 0 1 2 3 4 5","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-32a9117e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./group.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./group.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-32a9117e\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./group.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/units/group.vue\n// module id = 447\n// module chunks = 0 1 2 3 4 5","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [(_vm.showCity && _vm.cities && _vm.cities.length) ? _c('div', {\n    staticClass: \"city-select\"\n  }, [_c('mu-select-field', {\n    ref: \"city\",\n    staticClass: \"city-select-field\",\n    attrs: {\n      \"value\": _vm.city\n    },\n    on: {\n      \"change\": _vm.handleChangeCity\n    }\n  }, [_c('mu-menu-item', {\n    attrs: {\n      \"value\": \"\",\n      \"title\": \"全部城市\"\n    }\n  }), _vm._v(\" \"), _vm._l((_vm.cities), function(item) {\n    return _c('mu-menu-item', {\n      key: item.cityCode,\n      attrs: {\n        \"value\": item.cityCode,\n        \"title\": item.cityName\n      }\n    })\n  })], 2)], 1) : _vm._e(), _vm._v(\" \"), (_vm.showGroup && _vm.groups && _vm.groups.length) ? _c('div', {\n    staticClass: \"group-select\"\n  }, [_c('mu-select-field', {\n    ref: \"group\",\n    staticClass: \"group-select-field\",\n    attrs: {\n      \"value\": _vm.group\n    },\n    on: {\n      \"change\": _vm.handleChangeGroup\n    }\n  }, [_c('mu-menu-item', {\n    attrs: {\n      \"value\": \"\",\n      \"title\": \"全部小组\"\n    }\n  }), _vm._v(\" \"), _vm._l((_vm.groups), function(item) {\n    return _c('mu-menu-item', {\n      key: item.leaderId,\n      attrs: {\n        \"value\": item.leaderId,\n        \"title\": item.leaderName\n      }\n    })\n  })], 2)], 1) : _vm._e()])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-32a9117e\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/units/group.vue\n// module id = 448\n// module chunks = 0 1 2 3 4 5","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 449\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 450\n// module chunks = 0 1","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 451\n// module chunks = 0 1","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 452\n// module chunks = 0 1","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 453\n// module chunks = 0 1","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 454\n// module chunks = 0 1","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 455\n// module chunks = 0 1","<template>\r\n  <div>\r\n    <div class=\"date-select\">\r\n      <mu-dropDown-menu\r\n        v-if=\"showYear\"\r\n        :value=\"year\"\r\n        @change=\"handleChangeYear\"\r\n        id=\"yearDropDown\"\r\n      >\r\n        <mu-menu-item value=\"2017\" title=\"2017年\" />\r\n        <mu-menu-item value=\"2018\" title=\"2018年\" />\r\n        <mu-menu-item value=\"2019\" title=\"2019年\" />\r\n        <mu-menu-item value=\"2020\" title=\"2020年\" />\r\n        <mu-menu-item value=\"2020\" title=\"2021年\" />\r\n        <mu-menu-item value=\"2020\" title=\"2022年\" />\r\n      </mu-dropDown-menu>\r\n      <mu-dropDown-menu\r\n        v-if=\"showMonth\"\r\n        :value=\"month\"\r\n        @change=\"handleChangeMonth\"\r\n        id=\"monthDropDown\"\r\n        :maxHeight=\"480\"\r\n      >\r\n        <mu-menu-item v-if=\"showMonthAll\" value=\"0\" title=\"全年\" />\r\n        <mu-menu-item\r\n          v-for=\"n in 12\"\r\n          :key=\"n\"\r\n          :value=\"n < 10 ? ('0' + n) : n.toString()\"\r\n          :title=\"n + '月'\"\r\n        />\r\n      </mu-dropDown-menu>\r\n      <mu-dropDown-menu\r\n        v-if=\"showDate\"\r\n        :value=\"date\"\r\n        @change=\"handleChangeDate\"\r\n        id=\"dateDropDown\"\r\n        :maxHeight=\"480\"\r\n        :disabled=\"month === '0'\"\r\n      >\r\n        <mu-menu-item v-if=\"showDateAll\" value=\"0\" title=\"全月\" />\r\n        <mu-menu-item\r\n          v-for=\"n in (new Date(year, month, 0)).getDate()\"\r\n          :key=\"n\"\r\n          :value=\"n < 10 ? ('0' + n) : n.toString()\"\r\n          :title=\"n + '日'\"\r\n        />\r\n      </mu-dropDown-menu>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Vue from 'vue'\r\nimport { mapState, mapMutations } from 'vuex'\r\nimport selectField from 'muse-components/selectField'\r\nimport {menuItem} from 'muse-components/menu'\r\n\r\nVue.component(selectField.name, selectField)\r\nVue.component(menuItem.name, menuItem)\r\nexport default {\r\n  name: 'dateSelect',\r\n  props: {\r\n    handleChange: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    showYear: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showMonth: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showDate: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showMonthAll: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showDateAll: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  mounted () {\r\n    const z = this\r\n    if (z.month === '0' && z.showMonthAll === false) {\r\n      z.handleChangeMonth('01')\r\n    }\r\n    if (z.date === '0' && z.showDateAll === false) {\r\n      z.handleChangeDate('01')\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState([\r\n      'year',\r\n      'month',\r\n      'date'\r\n    ])\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      'setYear',\r\n      'setMonth',\r\n      'setDate'\r\n    ]),\r\n    handleChangeYear (v) {\r\n      this.setYear(v)\r\n      this.handleChange()\r\n    },\r\n    handleChangeMonth (v) {\r\n      this.setMonth(v)\r\n      if (v === '0') {\r\n        this.setDate('0')\r\n      }\r\n      this.handleChange()\r\n    },\r\n    handleChangeDate (v) {\r\n      this.setDate(v)\r\n      this.handleChange()\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n/*.date-select, .group-select {\r\n  display: inline-block;\r\n  height: 36px;\r\n  margin-top: 5px;\r\n  margin-left: 10px;\r\n  padding: 0 10px;\r\n  min-height: 36px;\r\n}\r\n.date-select-field, .group-select-field {\r\n  width: 84px;\r\n  top: -1px;\r\n}*/\r\n\r\n#yearDropDown {\r\n  margin-right: -34px;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// dateSelect.vue?5ea3bc66","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#yearDropDown{margin-right:-34px}\", \"\", {\"version\":3,\"sources\":[\"D:/code/vue-dashboard/src/components/units/dateSelect.vue\"],\"names\":[],\"mappings\":\"AA2IA,cACE,kBAAoB,CACrB\",\"file\":\"dateSelect.vue\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\r\\n/*.date-select, .group-select {\\r\\n  display: inline-block;\\r\\n  height: 36px;\\r\\n  margin-top: 5px;\\r\\n  margin-left: 10px;\\r\\n  padding: 0 10px;\\r\\n  min-height: 36px;\\r\\n}\\r\\n.date-select-field, .group-select-field {\\r\\n  width: 84px;\\r\\n  top: -1px;\\r\\n}*/\\n#yearDropDown {\\r\\n  margin-right: -34px;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-3bf46878\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/units/dateSelect.vue\n// module id = 458\n// module chunks = 0 1 2 5","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 459\n// module chunks = 0 1","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 460\n// module chunks = 0 1","\n    var formatUtil = require('../../util/format');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/helper.js\n// module id = 461\n// module chunks = 0 1","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 462\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 463\n// module chunks = 0 1","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         */\n        niceTicks: function (splitNumber, minInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval=false]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 464\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 465\n// module chunks = 0 1","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 466\n// module chunks = 0 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-3bf46878\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./dateSelect.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"788691bc\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-3bf46878\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/units/dateSelect.vue\n// module id = 467\n// module chunks = 0 1 2 5","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-3bf46878\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./dateSelect.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./dateSelect.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3bf46878\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./dateSelect.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/units/dateSelect.vue\n// module id = 468\n// module chunks = 0 1 2 5","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('div', {\n    staticClass: \"date-select\"\n  }, [(_vm.showYear) ? _c('mu-dropDown-menu', {\n    attrs: {\n      \"value\": _vm.year,\n      \"id\": \"yearDropDown\"\n    },\n    on: {\n      \"change\": _vm.handleChangeYear\n    }\n  }, [_c('mu-menu-item', {\n    attrs: {\n      \"value\": \"2017\",\n      \"title\": \"2017年\"\n    }\n  }), _vm._v(\" \"), _c('mu-menu-item', {\n    attrs: {\n      \"value\": \"2018\",\n      \"title\": \"2018年\"\n    }\n  }), _vm._v(\" \"), _c('mu-menu-item', {\n    attrs: {\n      \"value\": \"2019\",\n      \"title\": \"2019年\"\n    }\n  }), _vm._v(\" \"), _c('mu-menu-item', {\n    attrs: {\n      \"value\": \"2020\",\n      \"title\": \"2020年\"\n    }\n  }), _vm._v(\" \"), _c('mu-menu-item', {\n    attrs: {\n      \"value\": \"2020\",\n      \"title\": \"2021年\"\n    }\n  }), _vm._v(\" \"), _c('mu-menu-item', {\n    attrs: {\n      \"value\": \"2020\",\n      \"title\": \"2022年\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (_vm.showMonth) ? _c('mu-dropDown-menu', {\n    attrs: {\n      \"value\": _vm.month,\n      \"id\": \"monthDropDown\",\n      \"maxHeight\": 480\n    },\n    on: {\n      \"change\": _vm.handleChangeMonth\n    }\n  }, [(_vm.showMonthAll) ? _c('mu-menu-item', {\n    attrs: {\n      \"value\": \"0\",\n      \"title\": \"全年\"\n    }\n  }) : _vm._e(), _vm._v(\" \"), _vm._l((12), function(n) {\n    return _c('mu-menu-item', {\n      key: n,\n      attrs: {\n        \"value\": n < 10 ? ('0' + n) : n.toString(),\n        \"title\": n + '月'\n      }\n    })\n  })], 2) : _vm._e(), _vm._v(\" \"), (_vm.showDate) ? _c('mu-dropDown-menu', {\n    attrs: {\n      \"value\": _vm.date,\n      \"id\": \"dateDropDown\",\n      \"maxHeight\": 480,\n      \"disabled\": _vm.month === '0'\n    },\n    on: {\n      \"change\": _vm.handleChangeDate\n    }\n  }, [(_vm.showDateAll) ? _c('mu-menu-item', {\n    attrs: {\n      \"value\": \"0\",\n      \"title\": \"全月\"\n    }\n  }) : _vm._e(), _vm._v(\" \"), _vm._l(((new Date(_vm.year, _vm.month, 0)).getDate()), function(n) {\n    return _c('mu-menu-item', {\n      key: n,\n      attrs: {\n        \"value\": n < 10 ? ('0' + n) : n.toString(),\n        \"title\": n + '日'\n      }\n    })\n  })], 2) : _vm._e()], 1)])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-3bf46878\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/units/dateSelect.vue\n// module id = 469\n// module chunks = 0 1 2 5","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 470\n// module chunks = 0 1","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 471\n// module chunks = 0 1","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 472\n// module chunks = 0 1","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n    var labelHelper = require('./labelHelper');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, elStyle, seriesModel, labelModel, color\n        );\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, hoverItemStyle, seriesModel, hoverLabelModel, color\n        );\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 494\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 495\n// module chunks = 0 1","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 496\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 497\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 498\n// module chunks = 0 1","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 499\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 500\n// module chunks = 0 1","/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var env = require('zrender/lib/core/env');\n    var echarts = require('../../echarts');\n    var modelUtil = require('../../util/model');\n    var helper = require('./helper');\n    var AxisProxy = require('./AxisProxy');\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty' or 'weakFilter'.\n                                    // 'filter': data items which are out of window will be removed. This option is\n                                    //          applicable when filtering outliers. For each data item, it will be\n                                    //          filtered if one of the relevant dimensions is out of the window.\n                                    // 'weakFilter': data items which are out of window will be removed. This option\n                                    //          is applicable when filtering outliers. For each data item, it will be\n                                    //          filtered only if all  of the relevant dimensions are out of the same\n                                    //          side of the window.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // 'none': Do not filter.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null,         // End value. If endValue specified, end is ignored.\n            minSpan: null,          // 0 ~ 100\n            maxSpan: null,          // 0 ~ 100\n            minValueSpan: null,     // The range of dataZoom can not be smaller than that.\n            maxValueSpan: null      // The range of dataZoom can not be larger than that.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n         *      corresponding to the axisModel\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function (axisModel) {\n            if (axisModel) {\n                return axisModel.__dzAxisProxy;\n            }\n\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var rangePropMode = dataZoomModel._rangePropMode;\n            if (rawOption[names[0]] != null) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (rawOption[names[1]] != null) {\n                rangePropMode[index] = 'value';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 501\n// module chunks = 0 1","\n\n    var ComponentView = require('../../view/Component');\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 502\n// module chunks = 0 1","/**\n * @file History manager.\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n\n    var ATTR = '\\0_ec_hist_store';\n\n    var history = {\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n         */\n        push: function (ecModel, newSnapshot) {\n            var store = giveStore(ecModel);\n\n            // If previous dataZoom can not be found,\n            // complete an range with current range.\n            each(newSnapshot, function (batchItem, dataZoomId) {\n                var i = store.length - 1;\n                for (; i >= 0; i--) {\n                    var snapshot = store[i];\n                    if (snapshot[dataZoomId]) {\n                        break;\n                    }\n                }\n                if (i < 0) {\n                    // No origin range set, create one by current range.\n                    var dataZoomModel = ecModel.queryComponents(\n                        {mainType: 'dataZoom', subType: 'select', id: dataZoomId}\n                    )[0];\n                    if (dataZoomModel) {\n                        var percentRange = dataZoomModel.getPercentRange();\n                        store[0][dataZoomId] = {\n                            dataZoomId: dataZoomId,\n                            start: percentRange[0],\n                            end: percentRange[1]\n                        };\n                    }\n                }\n            });\n\n            store.push(newSnapshot);\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object} snapshot\n         */\n        pop: function (ecModel) {\n            var store = giveStore(ecModel);\n            var head = store[store.length - 1];\n            store.length > 1 && store.pop();\n\n            // Find top for all dataZoom.\n            var snapshot = {};\n            each(head, function (batchItem, dataZoomId) {\n                for (var i = store.length - 1; i >= 0; i--) {\n                    var batchItem = store[i][dataZoomId];\n                    if (batchItem) {\n                        snapshot[dataZoomId] = batchItem;\n                        break;\n                    }\n                }\n            });\n\n            return snapshot;\n        },\n\n        /**\n         * @public\n         */\n        clear: function (ecModel) {\n            ecModel[ATTR] = null;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {number} records. always >= 1.\n         */\n        count: function (ecModel) {\n            return giveStore(ecModel).length;\n        }\n\n    };\n\n    /**\n     * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n     * History length of each dataZoom may be different.\n     * this._history[0] is used to store origin range.\n     * @type {Array.<Object>}\n     */\n    function giveStore(ecModel) {\n        var store = ecModel[ATTR];\n        if (!store) {\n            store = ecModel[ATTR] = [{}];\n        }\n        return store;\n    }\n\n    module.exports = history;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/history.js\n// module id = 503\n// module chunks = 0 1","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = 504\n// module chunks = 0 1","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/listComponent.js\n// module id = 505\n// module chunks = 0 1","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getModel('textStyle').getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 506\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 507\n// module chunks = 0 1","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 508\n// module chunks = 0 1","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (\n                        axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis)\n                    )) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 509\n// module chunks = 0 1","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 510\n// module chunks = 0 1","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                    // coordDim === 'value' && valueCandidate == null && (valueCandidate = resultDimIdx);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                // coordDim === 'value' && valueCandidate == null && (valueCandidate = resultDimIdx);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                // Ensure At least one value dim.\n                // (dataDimNameMap.get('value') == null\n                //     && (valueCandidate == null || valueCandidate === resultDimIdx)\n                //     // Try to set as 'value' only if coordDim is not set as 'extra'.\n                //     && coordDim == null\n                // )\n                // ? 'value'\n                // :\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 511\n// module chunks = 0 1","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 512\n// module chunks = 0 1","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = numberUtil.getPrecisionSafe(interval) + 2;\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 513\n// module chunks = 0 1","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 514\n// module chunks = 0 1","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 515\n// module chunks = 0 1","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 516\n// module chunks = 0 1","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 545\n// module chunks = 0 1","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 546\n// module chunks = 0 1","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 547\n// module chunks = 0 1","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 548\n// module chunks = 0 1","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 549\n// module chunks = 0 1","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 550\n// module chunks = 0 1","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 551\n// module chunks = 0 1","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 552\n// module chunks = 0 1","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 553\n// module chunks = 0 1","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 554\n// module chunks = 0 1","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 555\n// module chunks = 0 1","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 556\n// module chunks = 0 1","<template>\n  <div class=\"echarts\"></div>\n</template>\n\n<style>\n.echarts {\n  width: 600px;\n  height: 400px;\n}\n</style>\n\n<script>\nimport echarts from 'echarts/lib/echarts'\nimport debounce from 'lodash.debounce'\nimport Vue from 'vue'\n\n// enumerating ECharts events for now\nconst ACTION_EVENTS = [\n  'legendselectchanged',\n  'legendselected',\n  'legendunselected',\n  'datazoom',\n  'datarangeselected',\n  'timelinechanged',\n  'timelineplaychanged',\n  'restore',\n  'dataviewchanged',\n  'magictypechanged',\n  'geoselectchanged',\n  'geoselected',\n  'geounselected',\n  'pieselectchanged',\n  'pieselected',\n  'pieunselected',\n  'mapselectchanged',\n  'mapselected',\n  'mapunselected',\n  'axisareaselected',\n  'brush',\n  'brushselected'\n]\n\nconst MOUSE_EVENTS = [\n  'click',\n  'dblclick',\n  'mouseover',\n  'mouseout',\n  'mousedown',\n  'mouseup',\n  'globalout'\n]\n\nexport default {\n  props: {\n    options: Object,\n    theme: String,\n    initOptions: Object,\n    group: String,\n    autoResize: Boolean\n  },\n  data () {\n    return {\n      chart: null\n    }\n  },\n  computed: {\n    // Only recalculated when accessed from JavaScript.\n    // Won't update DOM on value change because getters\n    // don't depend on reactive values\n    width: {\n      cache: false,\n      get () {\n        return this._delegateGet('width', 'getWidth')\n      }\n    },\n    height: {\n      cache: false,\n      get () {\n        return this._delegateGet('height', 'getHeight')\n      }\n    },\n    isDisposed: {\n      cache: false,\n      get () {\n        return !!this._delegateGet('isDisposed', 'isDisposed')\n      }\n    },\n    computedOptions: {\n      cache: false,\n      get () {\n        return this._delegateGet('computedOptions', 'getOption')\n      }\n    }\n  },\n  watch: {\n    // use assign statements to tigger \"options\" and \"group\" setters\n    options: {\n      handler (options) {\n        if (!this.chart && options) {\n          this._init()\n        } else {\n          this.chart.setOption(this.options, true)\n        }\n      },\n      deep: true\n    },\n    group: {\n      handler (group) {\n        this.chart.group = group\n      }\n    }\n  },\n  methods: {\n    // provide a explicit merge option method\n    mergeOptions (options) {\n      this._delegateMethod('setOption', options)\n    },\n    // just delegates ECharts methods to Vue component\n    // use explicit params to reduce transpiled size for now\n    resize (options) {\n      this._delegateMethod('resize', options)\n    },\n    dispatchAction (payload) {\n      this._delegateMethod('dispatchAction', payload)\n    },\n    convertToPixel (finder, value) {\n      return this._delegateMethod('convertToPixel', finder, value)\n    },\n    convertFromPixel (finder, value) {\n      return this._delegateMethod('convertFromPixel', finder, value)\n    },\n    containPixel (finder, value) {\n      return this._delegateMethod('containPixel', finder, value)\n    },\n    showLoading (type, options) {\n      this._delegateMethod('showLoading', type, options)\n    },\n    hideLoading () {\n      this._delegateMethod('hideLoading')\n    },\n    getDataURL (options) {\n      return this._delegateMethod('getDataURL', options)\n    },\n    getConnectedDataURL (options) {\n      return this._delegateMethod('getConnectedDataURL', options)\n    },\n    clear () {\n      this._delegateMethod('clear')\n    },\n    dispose () {\n      this._delegateMethod('dispose')\n    },\n    _delegateMethod (name, ...args) {\n      if (!this.chart) {\n        Vue.util.warn(`Cannot call [${name}] before the chart is initialized. Set prop [options] first.`, this)\n        return\n      }\n      return this.chart[name](...args)\n    },\n    _delegateGet (name, method) {\n      if (!this.chart) {\n        Vue.util.warn(`Cannot get [${name}] before the chart is initialized. Set prop [options] first.`, this)\n      }\n      return this.chart[method]()\n    },\n    _init () {\n      if (this.chart) {\n        return\n      }\n\n      let chart = echarts.init(this.$el, this.theme, this.initOptions)\n\n      if (this.group) {\n        chart.group = this.group\n      }\n\n      chart.setOption(this.options, true)\n\n      // expose ECharts events as custom events\n      ACTION_EVENTS.forEach(event => {\n        chart.on(event, params => {\n          this.$emit(event, params)\n        })\n      })\n      MOUSE_EVENTS.forEach(event => {\n        chart.on(event, params => {\n          this.$emit(event, params)\n\n          // for backward compatibility, may remove in the future\n          this.$emit('chart' + event, params)\n        })\n      })\n\n      if (this.autoResize) {\n        this.__resizeHanlder = debounce(() => {\n          chart.resize()\n        }, 100, { leading: true })\n        window.addEventListener('resize', this.__resizeHanlder)\n      }\n\n      this.chart = chart\n    }\n  },\n  mounted () {\n    // auto init if `options` is already provided\n    if (this.options) {\n      this._init()\n    }\n  },\n  beforeDestroy () {\n    if (!this.chart) {\n      return\n    }\n    if (this.autoResize) {\n      window.removeEventListener('resize', this.__resizeHanlder)\n    }\n    this.dispose()\n  },\n  connect (group) {\n    if (typeof group !== 'string') {\n      group = group.map(chart => chart.chart)\n    }\n    echarts.connect(group)\n  },\n  disconnect (group) {\n    echarts.disConnect(group)\n  },\n  registerMap (...args) {\n    echarts.registerMap(...args)\n  },\n  registerTheme (...args) {\n    echarts.registerTheme(...args)\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ECharts.vue?8ce6f6fc","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".echarts{width:600px;height:400px}\", \"\", {\"version\":3,\"sources\":[\"D:/code/vue-dashboard/node_modules/vue-echarts/components/ECharts.vue\"],\"names\":[],\"mappings\":\"AACA,SACE,YAAa,AACb,YAAc,CACf\",\"file\":\"ECharts.vue\",\"sourcesContent\":[\"\\n.echarts {\\n  width: 600px;\\n  height: 400px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-0d182cbc\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./~/vue-echarts/components/ECharts.vue\n// module id = 558\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 559\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('../coord/cartesian/Grid');\n\n    require('./bar/BarSeries');\n    require('./bar/BarView');\n\n    var barLayoutGrid = require('../layout/barGrid');\n    var echarts = require('../echarts');\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar.js\n// module id = 560\n// module chunks = 0 1","\n\n    module.exports = require('./BaseBarSeries').extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarSeries.js\n// module id = 561\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var helper = require('./helper');\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(require('../../model/Model').prototype, require('./barItemStyle'));\n\n    var BarView = require('../../echarts').extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d'\n                || coordinateSystemType === 'polar'\n            ) {\n                this._render(seriesModel, ecModel, api);\n            }\n            else if (__DEV__) {\n                console.warn('Only cartesian2d and polar supported for bar.');\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _render: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var coord = seriesModel.coordinateSystem;\n            var baseAxis = coord.getBaseAxis();\n            var isHorizontalOrRadial;\n\n            if (coord.type === 'cartesian2d') {\n                isHorizontalOrRadial = baseAxis.isHorizontal();\n            }\n            else if (coord.type === 'polar') {\n                isHorizontalOrRadial = baseAxis.dim === 'angle';\n            }\n\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\n                    var el = elementCreator[coord.type](\n                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\n                    );\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, dataIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = elementCreator[coord.type](\n                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\n                        );\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, newIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    if (coord.type === 'cartesian2d') {\n                        el && removeRect(dataIndex, animationModel, el);\n                    }\n                    else {\n                        el && removeSector(dataIndex, animationModel, el);\n                    }\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        if (el.type === 'sector') {\n                            removeSector(el.dataIndex, ecModel, el);\n                        }\n                        else {\n                            removeRect(el.dataIndex, ecModel, el);\n                        }\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    var elementCreator = {\n\n        cartesian2d: function (\n            data, dataIndex, itemModel, layout, isHorizontal,\n            animationModel, isUpdate\n        ) {\n            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var rectShape = rect.shape;\n                var animateProperty = isHorizontal ? 'height' : 'width';\n                var animateTarget = {};\n                rectShape[animateProperty] = 0;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return rect;\n        },\n\n        polar: function (\n            data, dataIndex, itemModel, layout, isRadial,\n            animationModel, isUpdate\n        ) {\n            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var sectorShape = sector.shape;\n                var animateProperty = isRadial ? 'r' : 'endAngle';\n                var animateTarget = {};\n                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return sector;\n        }\n    };\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function removeSector(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                r: el.shape.r0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    var getLayout = {\n        cartesian2d: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            var fixedLineWidth = getLineWidth(itemModel, layout);\n\n            // fix layout with lineWidth\n            var signX = layout.width > 0 ? 1 : -1;\n            var signY = layout.height > 0 ? 1 : -1;\n            return {\n                x: layout.x + signX * fixedLineWidth / 2,\n                y: layout.y + signY * fixedLineWidth / 2,\n                width: layout.width - signX * fixedLineWidth,\n                height: layout.height - signY * fixedLineWidth\n            };\n        },\n\n        polar: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            return {\n                cx: layout.cx,\n                cy: layout.cy,\n                r0: layout.r0,\n                r: layout.r,\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n            };\n        }\n    };\n\n    function updateStyle(\n        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\n    ) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        if (!isPolar && isHorizontal) {\n            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n        }\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        if (!isPolar) {\n            helper.setLabel(\n                el.style, hoverStyle, itemModel, color,\n                seriesModel, dataIndex, labelPositionOutside\n            );\n        }\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarView.js\n// module id = 562\n// module chunks = 0 1","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var createListFromArray = require('../helper/createListFromArray');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n            // 最小角度为0，仅对极坐标系下的柱状图有效\n            barMinAngle: 0,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 563\n// module chunks = 0 1","\n\n\n    var getBarItemStyle = require('../../model/mixin/makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/barItemStyle.js\n// module id = 564\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/helper.js\n// module id = 565\n// module chunks = 0 1","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 566\n// module chunks = 0 1","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    helper.setTextToStyle = function (\n        data, dataIndex, valueDim, elStyle, seriesModel, labelModel, color\n    ) {\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                data.get(valueDim, dataIndex)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/labelHelper.js\n// module id = 567\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 568\n// module chunks = 0 1","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 569\n// module chunks = 0 1","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 570\n// module chunks = 0 1","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 571\n// module chunks = 0 1","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 572\n// module chunks = 0 1","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/CartesianAxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 573\n// module chunks = 0 1","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, function (payload, ecModel, api) {\n        var outputFinder = axisTrigger(\n            ecModel.getComponent('axisPointer').coordSysAxesInfo,\n            payload.currTrigger,\n            [payload.x, payload.y],\n            payload,\n            payload.dispatchAction || zrUtil.bind(api.dispatchAction, api),\n            ecModel,\n            api,\n            payload.tooltipOption\n        );\n\n        return outputFinder;\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 574\n// module chunks = 0 1","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 575\n// module chunks = 0 1","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 576\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 577\n// module chunks = 0 1","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 578\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {string} [currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [point] x and y, which are mandatory, specify a point to\n     *              tigger axisPointer and tooltip.\n     * @param {Object} [finder] {\n     *                  seriesIndex, dataIndex,\n     *                  axesInfo: [{\n     *                      axisDim: 'x'|'y'|'angle'|..., axisIndex: ..., value: ...\n     *                  }, ...]\n     *              }\n     *              These properties, which are optional, restrict target axes.\n     * @param {Function} dispatchAction\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [tooltipOption]\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(\n        coordSysAxesInfo, currTrigger, point, finder, dispatchAction,\n        ecModel, api, tooltipOption\n    ) {\n        finder = finder || {};\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: tooltipOption,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 579\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var AxisView = require('./AxisView');\n    var cartesianAxisHelper = require('./cartesianAxisHelper');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 580\n// module chunks = 0 1","/**\n * DataZoom component entry\n */\n\n\n    require('./dataZoom/typeDefaulter');\n\n    require('./dataZoom/DataZoomModel');\n    require('./dataZoom/DataZoomView');\n\n    require('./dataZoom/SelectZoomModel');\n    require('./dataZoom/SelectZoomView');\n\n    require('./dataZoom/dataZoomProcessor');\n    require('./dataZoom/dataZoomAction');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoomSelect.js\n// module id = 581\n// module chunks = 0 1","/**\n * @file Axis operator\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n    var helper = require('./helper');\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n         * @private\n         * @type {Object}\n         */\n        this._minMaxSpan;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        getMinMaxSpan: function () {\n            return zrUtil.clone(this._minMaxSpan);\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            setMinMaxSpan(this);\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            if (filterMode === 'none') {\n                return;\n            }\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n                var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n                if (filterMode === 'weakFilter') {\n                    seriesData && seriesData.filterSelf(function (dataIndex) {\n                        var leftOut;\n                        var rightOut;\n                        var hasValue;\n                        for (var i = 0; i < dataDims.length; i++) {\n                            var value = seriesData.get(dataDims[i], dataIndex);\n                            var thisHasValue = !isNaN(value);\n                            var thisLeftOut = value < valueWindow[0];\n                            var thisRightOut = value > valueWindow[1];\n                            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n                                return true;\n                            }\n                            thisHasValue && (hasValue = true);\n                            thisLeftOut && (leftOut = true);\n                            thisRightOut && (rightOut = true);\n                        }\n                        // If both left out and right out, do not filter.\n                        return hasValue && leftOut && rightOut;\n                    });\n                }\n                else {\n                    seriesData && each(dataDims, function (dim) {\n                        if (filterMode === 'empty') {\n                            seriesModel.setData(\n                                seriesData.map(dim, function (value) {\n                                    return !isInWindow(value) ? NaN : value;\n                                })\n                            );\n                        }\n                        else {\n                            seriesData.filterSelf(dim, isInWindow);\n                        }\n                    });\n                }\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    function setMinMaxSpan(axisProxy) {\n        var minMaxSpan = axisProxy._minMaxSpan = {};\n        var dataZoomModel = axisProxy._dataZoomModel;\n\n        each(['min', 'max'], function (minMax) {\n            minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span');\n\n            // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n            var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n            if (valueSpan != null) {\n                minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n\n                valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n                if (valueSpan != null) {\n                    minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(\n                        valueSpan, axisProxy._dataExtent, [0, 100], true\n                    );\n                }\n            }\n        });\n    }\n\n    module.exports = AxisProxy;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 582\n// module chunks = 0 1","/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = require('./DataZoomModel');\n\n    module.exports = DataZoomModel.extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/SelectZoomModel.js\n// module id = 583\n// module chunks = 0 1","\n\n    module.exports = require('./DataZoomView').extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/SelectZoomView.js\n// module id = 584\n// module chunks = 0 1","/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var helper = require('./helper');\n    var echarts = require('../../echarts');\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 585\n// module chunks = 0 1","/**\n * @file Data zoom processor\n */\n\n\n    var echarts = require('../../echarts');\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 586\n// module chunks = 0 1","\n\n    require('../../model/Component').registerSubTypeDefaulter('dataZoom', function (option) {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 587\n// module chunks = 0 1","/**\n * Box selection tool.\n *\n * @module echarts/component/helper/BrushController\n */\n\n\n\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var interactionMutex = require('./interactionMutex');\n    var DataDiffer = require('../../data/DataDiffer');\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var map = zrUtil.map;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathPow = Math.pow;\n\n    var COVER_Z = 10000;\n    var UNSELECT_THRESHOLD = 6;\n    var MIN_RESIZE_LINE_WIDTH = 6;\n    var MUTEX_RESOURCE_KEY = 'globalPan';\n\n    var DIRECTION_MAP = {\n        w: [0, 0],\n        e: [0, 1],\n        n: [1, 0],\n        s: [1, 1]\n    };\n    var CURSOR_MAP = {\n        w: 'ew',\n        e: 'ew',\n        n: 'ns',\n        s: 'ns',\n        ne: 'nesw',\n        sw: 'nesw',\n        nw: 'nwse',\n        se: 'nwse'\n    };\n    var DEFAULT_BRUSH_OPT = {\n        brushStyle: {\n            lineWidth: 2,\n            stroke: 'rgba(0,0,0,0.3)',\n            fill: 'rgba(0,0,0,0.1)'\n        },\n        transformable: true,\n        brushMode: 'single',\n        removeOnClick: false\n    };\n\n    var baseUID = 0;\n\n    /**\n     * @alias module:echarts/component/helper/BrushController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     * @event module:echarts/component/helper/BrushController#brush\n     *        params:\n     *            areas: Array.<Array>, coord relates to container group,\n     *                                    If no container specified, to global.\n     *            opt {\n     *                isEnd: boolean,\n     *                removeOnClick: boolean\n     *            }\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function BrushController(zr) {\n\n        if (__DEV__) {\n            zrUtil.assert(zr);\n        }\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:zrender/zrender~ZRender}\n         * @private\n         */\n        this._zr = zr;\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *     'line', 'rect', 'polygon' or false\n         *     If passing false/null/undefined, disable brush.\n         *     If passing 'auto', determined by panel.defaultBrushType\n         * @private\n         * @type {string}\n         */\n        this._brushType;\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *\n         * @private\n         * @type {Object}\n         */\n        this._brushOption;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._panels;\n\n        /**\n         * @private\n         * @type {Array.<nubmer>}\n         */\n        this._track = [];\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._dragging;\n\n        /**\n         * @private\n         * @type {Array}\n         */\n        this._covers = [];\n\n        /**\n         * @private\n         * @type {moudule:zrender/container/Group}\n         */\n        this._creatingCover;\n\n        /**\n         * `true` means global panel\n         * @private\n         * @type {module:zrender/container/Group|boolean}\n         */\n        this._creatingPanel;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._enableGlobalPan;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        if (__DEV__) {\n            this._mounted;\n        }\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._uid = 'brushController_' + baseUID++;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._handlers = {};\n        each(mouseHandlers, function (handler, eventName) {\n            this._handlers[eventName] = zrUtil.bind(handler, this);\n        }, this);\n    }\n\n    BrushController.prototype = {\n\n        constructor: BrushController,\n\n        /**\n         * If set to null/undefined/false, select disabled.\n         * @param {Object} brushOption\n         * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n         *                          If passing false/null/undefined, disable brush.\n         *                          If passing 'auto', determined by panel.defaultBrushType.\n         *                              ('auto' can not be used in global panel)\n         * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n         * @param {boolean} [brushOption.transformable=true]\n         * @param {boolean} [brushOption.removeOnClick=false]\n         * @param {Object} [brushOption.brushStyle]\n         * @param {number} [brushOption.brushStyle.width]\n         * @param {number} [brushOption.brushStyle.lineWidth]\n         * @param {string} [brushOption.brushStyle.stroke]\n         * @param {string} [brushOption.brushStyle.fill]\n         * @param {number} [brushOption.z]\n         */\n        enableBrush: function (brushOption) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            this._brushType && doDisableBrush(this);\n            brushOption.brushType && doEnableBrush(this, brushOption);\n\n            return this;\n        },\n\n        /**\n         * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n         *        Each items: {\n         *            panelId, // mandatory.\n         *            clipPath, // mandatory. function.\n         *            isTargetByCursor, // mandatory. function.\n         *            defaultBrushType, // optional, only used when brushType is 'auto'.\n         *            getLinearBrushOtherExtent, // optional. function.\n         *        }\n         */\n        setPanels: function (panelOpts) {\n            if (panelOpts && panelOpts.length) {\n                var panels = this._panels = {};\n                zrUtil.each(panelOpts, function (panelOpts) {\n                    panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n                });\n            }\n            else {\n                this._panels = null;\n            }\n            return this;\n        },\n\n        /**\n         * @param {Object} [opt]\n         * @return {boolean} [opt.enableGlobalPan=false]\n         */\n        mount: function (opt) {\n            opt = opt || {};\n\n            if (__DEV__) {\n                this._mounted = true; // should be at first.\n            }\n\n            this._enableGlobalPan = opt.enableGlobalPan;\n\n            var thisGroup = this.group;\n            this._zr.add(thisGroup);\n\n            thisGroup.attr({\n                position: opt.position || [0, 0],\n                rotation: opt.rotation || 0,\n                scale: opt.scale || [1, 1]\n            });\n            this._transform = thisGroup.getLocalTransform();\n\n            return this;\n        },\n\n        eachCover: function (cb, context) {\n            each(this._covers, cb, context);\n        },\n\n        /**\n         * Update covers.\n         * @param {Array.<Object>} brushOptionList Like:\n         *        [\n         *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n         *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n         *            ...\n         *        ]\n         *        `brushType` is required in each cover info. (can not be 'auto')\n         *        `id` is not mandatory.\n         *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n         *        If brushOptionList is null/undefined, all covers removed.\n         */\n        updateCovers: function (brushOptionList) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n                return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n            });\n\n            var tmpIdPrefix = '\\0-brush-index-';\n            var oldCovers = this._covers;\n            var newCovers = this._covers = [];\n            var controller = this;\n            var creatingCover = this._creatingCover;\n\n            (new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey))\n                .add(addOrUpdate)\n                .update(addOrUpdate)\n                .remove(remove)\n                .execute();\n\n            return this;\n\n            function getKey(brushOption, index) {\n                return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index)\n                    + '-' + brushOption.brushType;\n            }\n\n            function oldGetKey(cover, index) {\n                return getKey(cover.__brushOption, index);\n            }\n\n            function addOrUpdate(newIndex, oldIndex) {\n                var newBrushOption = brushOptionList[newIndex];\n                // Consider setOption in event listener of brushSelect,\n                // where updating cover when creating should be forbiden.\n                if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n                    newCovers[newIndex] = oldCovers[oldIndex];\n                }\n                else {\n                    var cover = newCovers[newIndex] = oldIndex != null\n                        ? (\n                            oldCovers[oldIndex].__brushOption = newBrushOption,\n                            oldCovers[oldIndex]\n                        )\n                        : endCreating(controller, createCover(controller, newBrushOption));\n                    updateCoverAfterCreation(controller, cover);\n                }\n            }\n\n            function remove(oldIndex) {\n                if (oldCovers[oldIndex] !== creatingCover) {\n                    controller.group.remove(oldCovers[oldIndex]);\n                }\n            }\n        },\n\n        unmount: function () {\n            if (__DEV__) {\n                if (!this._mounted) {\n                    return;\n                }\n            }\n\n            this.enableBrush(false);\n\n            // container may 'removeAll' outside.\n            clearCovers(this);\n            this._zr.remove(this.group);\n\n            if (__DEV__) {\n                this._mounted = false; // should be at last.\n            }\n\n            return this;\n        },\n\n        dispose: function () {\n            this.unmount();\n            this.off();\n        }\n    };\n\n    zrUtil.mixin(BrushController, Eventful);\n\n    function doEnableBrush(controller, brushOption) {\n        var zr = controller._zr;\n\n        // Consider roam, which takes globalPan too.\n        if (!controller._enableGlobalPan) {\n            interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n        }\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.on(eventName, handler);\n        });\n\n        controller._brushType = brushOption.brushType;\n        controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    }\n\n    function doDisableBrush(controller) {\n        var zr = controller._zr;\n\n        interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.off(eventName, handler);\n        });\n\n        controller._brushType = controller._brushOption = null;\n    }\n\n    function createCover(controller, brushOption) {\n        var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n        cover.__brushOption = brushOption;\n        updateZ(cover, brushOption);\n        controller.group.add(cover);\n        return cover;\n    }\n\n    function endCreating(controller, creatingCover) {\n        var coverRenderer = getCoverRenderer(creatingCover);\n        if (coverRenderer.endCreating) {\n            coverRenderer.endCreating(controller, creatingCover);\n            updateZ(creatingCover, creatingCover.__brushOption);\n        }\n        return creatingCover;\n    }\n\n    function updateCoverShape(controller, cover) {\n        var brushOption = cover.__brushOption;\n        getCoverRenderer(cover).updateCoverShape(\n            controller, cover, brushOption.range, brushOption\n        );\n    }\n\n    function updateZ(cover, brushOption) {\n        var z = brushOption.z;\n        z == null && (z = COVER_Z);\n        cover.traverse(function (el) {\n            el.z = z;\n            el.z2 = z; // Consider in given container.\n        });\n    }\n\n    function updateCoverAfterCreation(controller, cover) {\n        getCoverRenderer(cover).updateCommon(controller, cover);\n        updateCoverShape(controller, cover);\n    }\n\n    function getCoverRenderer(cover) {\n        return coverRenderers[cover.__brushOption.brushType];\n    }\n\n    // return target panel or `true` (means global panel)\n    function getPanelByPoint(controller, e, localCursorPoint) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panel;\n        var transform = controller._transform;\n        each(panels, function (pn) {\n            pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n        });\n        return panel;\n    }\n\n    // Return a panel or true\n    function getPanelByCover(controller, cover) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panelId = cover.__brushOption.panelId;\n        // User may give cover without coord sys info,\n        // which is then treated as global panel.\n        return panelId != null ? panels[panelId] : true;\n    }\n\n    function clearCovers(controller) {\n        var covers = controller._covers;\n        var originalLength = covers.length;\n        each(covers, function (cover) {\n            controller.group.remove(cover);\n        }, controller);\n        covers.length = 0;\n\n        return !!originalLength;\n    }\n\n    function trigger(controller, opt) {\n        var areas = map(controller._covers, function (cover) {\n            var brushOption = cover.__brushOption;\n            var range = zrUtil.clone(brushOption.range);\n            return {\n                brushType: brushOption.brushType,\n                panelId: brushOption.panelId,\n                range: range\n            };\n        });\n\n        controller.trigger('brush', areas, {\n            isEnd: !!opt.isEnd,\n            removeOnClick: !!opt.removeOnClick\n        });\n    }\n\n    function shouldShowCover(controller) {\n        var track = controller._track;\n\n        if (!track.length) {\n            return false;\n        }\n\n        var p2 = track[track.length - 1];\n        var p1 = track[0];\n        var dx = p2[0] - p1[0];\n        var dy = p2[1] - p1[1];\n        var dist = mathPow(dx * dx + dy * dy, 0.5);\n\n        return dist > UNSELECT_THRESHOLD;\n    }\n\n    function getTrackEnds(track) {\n        var tail = track.length - 1;\n        tail < 0 && (tail = 0);\n        return [track[0], track[tail]];\n    }\n\n    function createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n        var cover = new graphic.Group();\n\n        cover.add(new graphic.Rect({\n            name: 'main',\n            style: makeStyle(brushOption),\n            silent: true,\n            draggable: true,\n            cursor: 'move',\n            drift: curry(doDrift, controller, cover, 'nswe'),\n            ondragend: curry(trigger, controller, {isEnd: true})\n        }));\n\n        each(\n            edgeNames,\n            function (name) {\n                cover.add(new graphic.Rect({\n                    name: name,\n                    style: {opacity: 0},\n                    draggable: true,\n                    silent: true,\n                    invisible: true,\n                    drift: curry(doDrift, controller, cover, name),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            }\n        );\n\n        return cover;\n    }\n\n    function updateBaseRect(controller, cover, localRange, brushOption) {\n        var lineWidth = brushOption.brushStyle.lineWidth || 0;\n        var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n        var x = localRange[0][0];\n        var y = localRange[1][0];\n        var xa = x - lineWidth / 2;\n        var ya = y - lineWidth / 2;\n        var x2 = localRange[0][1];\n        var y2 = localRange[1][1];\n        var x2a = x2 - handleSize + lineWidth / 2;\n        var y2a = y2 - handleSize + lineWidth / 2;\n        var width = x2 - x;\n        var height = y2 - y;\n        var widtha = width + lineWidth;\n        var heighta = height + lineWidth;\n\n        updateRectShape(controller, cover, 'main', x, y, width, height);\n\n        if (brushOption.transformable) {\n            updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n            updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n\n            updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n            updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n        }\n    }\n\n    function updateCommon(controller, cover) {\n        var brushOption = cover.__brushOption;\n        var transformable = brushOption.transformable;\n\n        var mainEl = cover.childAt(0);\n        mainEl.useStyle(makeStyle(brushOption));\n        mainEl.attr({\n            silent: !transformable,\n            cursor: transformable ? 'move' : 'default'\n        });\n\n        each(\n            ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'],\n            function (name) {\n                var el = cover.childOfName(name);\n                var globalDir = getGlobalDirection(controller, name);\n\n                el && el.attr({\n                    silent: !transformable,\n                    invisible: !transformable,\n                    cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n                });\n            }\n        );\n    }\n\n    function updateRectShape(controller, cover, name, x, y, w, h) {\n        var el = cover.childOfName(name);\n        el && el.setShape(pointsToRect(\n            clipByPanel(controller, cover, [[x, y], [x + w, y + h]])\n        ));\n    }\n\n    function makeStyle(brushOption) {\n        return zrUtil.defaults({strokeNoScale: true}, brushOption.brushStyle);\n    }\n\n    function formatRectRange(x, y, x2, y2) {\n        var min = [mathMin(x, x2), mathMin(y, y2)];\n        var max = [mathMax(x, x2), mathMax(y, y2)];\n\n        return [\n            [min[0], max[0]], // x range\n            [min[1], max[1]] // y range\n        ];\n    }\n\n    function getTransform(controller) {\n        return graphic.getTransform(controller.group);\n    }\n\n    function getGlobalDirection(controller, localDirection) {\n        if (localDirection.length > 1) {\n            localDirection = localDirection.split('');\n            var globalDir = [\n                getGlobalDirection(controller, localDirection[0]),\n                getGlobalDirection(controller, localDirection[1])\n            ];\n            (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n            return globalDir.join('');\n        }\n        else {\n            var map = {w: 'left', e: 'right', n: 'top', s: 'bottom'};\n            var inverseMap = {left: 'w', right: 'e', top: 'n', bottom: 's'};\n            var globalDir = graphic.transformDirection(\n                map[localDirection], getTransform(controller)\n            );\n            return inverseMap[globalDir];\n        }\n    }\n\n    function driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n        var brushOption = cover.__brushOption;\n        var rectRange = toRectRange(brushOption.range);\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(name.split(''), function (namePart) {\n            var ind = DIRECTION_MAP[namePart];\n            rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n        });\n\n        brushOption.range = fromRectRange(formatRectRange(\n            rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]\n        ));\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function driftPolygon(controller, cover, dx, dy, e) {\n        var range = cover.__brushOption.range;\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(range, function (point) {\n            point[0] += localDelta[0];\n            point[1] += localDelta[1];\n        });\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function toLocalDelta(controller, dx, dy) {\n        var thisGroup = controller.group;\n        var localD = thisGroup.transformCoordToLocal(dx, dy);\n        var localZero = thisGroup.transformCoordToLocal(0, 0);\n\n        return [localD[0] - localZero[0], localD[1] - localZero[1]];\n    }\n\n    function clipByPanel(controller, cover, data) {\n        var panel = getPanelByCover(controller, cover);\n\n        return (panel && panel !== true)\n            ? panel.clipPath(data, controller._transform)\n            : zrUtil.clone(data);\n    }\n\n    function pointsToRect(points) {\n        var xmin = mathMin(points[0][0], points[1][0]);\n        var ymin = mathMin(points[0][1], points[1][1]);\n        var xmax = mathMax(points[0][0], points[1][0]);\n        var ymax = mathMax(points[0][1], points[1][1]);\n\n        return {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n    }\n\n    function resetCursor(controller, e, localCursorPoint) {\n        // Check active\n        if (!controller._brushType) {\n            return;\n        }\n\n        var zr = controller._zr;\n        var covers = controller._covers;\n        var currPanel = getPanelByPoint(controller, e, localCursorPoint);\n\n        // Check whether in covers.\n        if (!controller._dragging) {\n            for (var i = 0; i < covers.length; i++) {\n                var brushOption = covers[i].__brushOption;\n                if (currPanel\n                    && (currPanel === true || brushOption.panelId === currPanel.panelId)\n                    && coverRenderers[brushOption.brushType].contain(\n                        covers[i], localCursorPoint[0], localCursorPoint[1]\n                    )\n                ) {\n                    // Use cursor style set on cover.\n                    return;\n                }\n            }\n        }\n\n        currPanel && zr.setCursorStyle('crosshair');\n    }\n\n    function preventDefault(e) {\n        var rawE = e.event;\n        rawE.preventDefault && rawE.preventDefault();\n    }\n\n    function mainShapeContain(cover, x, y) {\n        return cover.childOfName('main').contain(x, y);\n    }\n\n    function updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n        var creatingCover = controller._creatingCover;\n        var panel = controller._creatingPanel;\n        var thisBrushOption = controller._brushOption;\n        var eventParams;\n\n        controller._track.push(localCursorPoint.slice());\n\n        if (shouldShowCover(controller) || creatingCover) {\n\n            if (panel && !creatingCover) {\n                thisBrushOption.brushMode === 'single' && clearCovers(controller);\n                var brushOption = zrUtil.clone(thisBrushOption);\n                brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n                brushOption.panelId = panel === true ? null : panel.panelId;\n                creatingCover = controller._creatingCover = createCover(controller, brushOption);\n                controller._covers.push(creatingCover);\n            }\n\n            if (creatingCover) {\n                var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n                var coverBrushOption = creatingCover.__brushOption;\n\n                coverBrushOption.range = coverRenderer.getCreatingRange(\n                    clipByPanel(controller, creatingCover, controller._track)\n                );\n\n                if (isEnd) {\n                    endCreating(controller, creatingCover);\n                    coverRenderer.updateCommon(controller, creatingCover);\n                }\n\n                updateCoverShape(controller, creatingCover);\n\n                eventParams = {isEnd: isEnd};\n            }\n        }\n        else if (\n            isEnd\n            && thisBrushOption.brushMode === 'single'\n            && thisBrushOption.removeOnClick\n        ) {\n            // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n            // But a single click do not clear covers, because user may have casual\n            // clicks (for example, click on other component and do not expect covers\n            // disappear).\n            // Only some cover removed, trigger action, but not every click trigger action.\n            if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n                eventParams = {isEnd: isEnd, removeOnClick: true};\n            }\n        }\n\n        return eventParams;\n    }\n\n    function determineBrushType(brushType, panel) {\n        if (brushType === 'auto') {\n            if (__DEV__) {\n                zrUtil.assert(\n                    panel && panel.defaultBrushType,\n                    'MUST have defaultBrushType when brushType is \"atuo\"'\n                );\n            }\n            return panel.defaultBrushType;\n        }\n        return brushType;\n    }\n\n    var mouseHandlers = {\n\n        mousedown: function (e) {\n            if (this._dragging) {\n                // In case some browser do not support globalOut,\n                // and release mose out side the browser.\n                handleDragEnd.call(this, e);\n            }\n            else if (!e.target || !e.target.draggable) {\n\n                preventDefault(e);\n\n                var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n\n                this._creatingCover = null;\n                var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n                if (panel) {\n                    this._dragging = true;\n                    this._track = [localCursorPoint.slice()];\n                }\n            }\n        },\n\n        mousemove: function (e) {\n            var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n\n            resetCursor(this, e, localCursorPoint);\n\n            if (this._dragging) {\n\n                preventDefault(e);\n\n                var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n\n                eventParams && trigger(this, eventParams);\n            }\n        },\n\n        mouseup: handleDragEnd //,\n\n        // FIXME\n        // in tooltip, globalout should not be triggered.\n        // globalout: handleDragEnd\n    };\n\n    function handleDragEnd(e) {\n        if (this._dragging) {\n\n            preventDefault(e);\n\n            var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n            var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n\n            this._dragging = false;\n            this._track = [];\n            this._creatingCover = null;\n\n            // trigger event shoule be at final, after procedure will be nested.\n            eventParams && trigger(this, eventParams);\n        }\n    }\n\n    /**\n     * key: brushType\n     * @type {Object}\n     */\n    var coverRenderers = {\n\n        lineX: getLineRenderer(0),\n\n        lineY: getLineRenderer(1),\n\n        rect: {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            return range;\n                        },\n                        function (range) {\n                            return range;\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                updateBaseRect(controller, cover, localRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        },\n\n        polygon: {\n            createCover: function (controller, brushOption) {\n                var cover = new graphic.Group();\n\n                // Do not use graphic.Polygon because graphic.Polyline do not close the\n                // border of the shape when drawing, which is a better experience for user.\n                cover.add(new graphic.Polyline({\n                    name: 'main',\n                    style: makeStyle(brushOption),\n                    silent: true\n                }));\n\n                return cover;\n            },\n            getCreatingRange: function (localTrack) {\n                return localTrack;\n            },\n            endCreating: function (controller, cover) {\n                cover.remove(cover.childAt(0));\n                // Use graphic.Polygon close the shape.\n                cover.add(new graphic.Polygon({\n                    name: 'main',\n                    draggable: true,\n                    drift: curry(driftPolygon, controller, cover),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                cover.childAt(0).setShape({\n                    points: clipByPanel(controller, cover, localRange)\n                });\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        }\n    };\n\n    function getLineRenderer(xyIndex) {\n        return {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            var rectRange = [range, [0, 100]];\n                            xyIndex && rectRange.reverse();\n                            return rectRange;\n                        },\n                        function (rectRange) {\n                            return rectRange[xyIndex];\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    [['w', 'e'], ['n', 's']][xyIndex]\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n                var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n\n                return [min, max];\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                var otherExtent;\n                // If brushWidth not specified, fit the panel.\n                var panel = getPanelByCover(controller, cover);\n                if (panel !== true && panel.getLinearBrushOtherExtent) {\n                    otherExtent = panel.getLinearBrushOtherExtent(\n                        xyIndex, controller._transform\n                    );\n                }\n                else {\n                    var zr = controller._zr;\n                    otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n                }\n                var rectRange = [localRange, otherExtent];\n                xyIndex && rectRange.reverse();\n\n                updateBaseRect(controller, cover, rectRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        };\n    }\n\n    module.exports = BrushController;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/BrushController.js\n// module id = 588\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var brushHelper = require('./brushHelper');\n\n    var each = zrUtil.each;\n    var indexOf = zrUtil.indexOf;\n    var curry = zrUtil.curry;\n\n    var COORD_CONVERTS = ['dataToPoint', 'pointToData'];\n\n    // FIXME\n    // how to genarialize to more coordinate systems.\n    var INCLUDE_FINDER_MAIN_TYPES = [\n        'grid', 'xAxis', 'yAxis', 'geo', 'graph',\n        'polar', 'radiusAxis', 'angleAxis', 'bmap'\n    ];\n\n    /**\n     * [option in constructor]:\n     * {\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     * }\n     *\n     *\n     * [targetInfo]:\n     *\n     * There can be multiple axes in a single targetInfo. Consider the case\n     * of `grid` component, a targetInfo represents a grid which contains one or more\n     * cartesian and one or more axes. And consider the case of parallel system,\n     * which has multiple axes in a coordinate system.\n     * Can be {\n     *     panelId: ...,\n     *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n     *     coordSyses: all cartesians.\n     *     gridModel: <grid component>\n     *     xAxes: correspond to coordSyses on index\n     *     yAxes: correspond to coordSyses on index\n     * }\n     * or {\n     *     panelId: ...,\n     *     coordSys: <geo coord sys>\n     *     coordSyses: [<geo coord sys>]\n     *     geoModel: <geo component>\n     * }\n     *\n     *\n     * [panelOpt]:\n     *\n     * Make from targetInfo. Input to BrushController.\n     * {\n     *     panelId: ...,\n     *     rect: ...\n     * }\n     *\n     *\n     * [area]:\n     *\n     * Generated by BrushController or user input.\n     * {\n     *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n     *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     *     range: pixel range.\n     *     coordRange: representitive coord range (the first one of coordRanges).\n     *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n     * }\n     */\n\n    /**\n     * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n     *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} [opt]\n     * @param {Array.<string>} [opt.include] include coordinate system types.\n     */\n    function BrushTargetManager(option, ecModel, opt) {\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        var targetInfoList = this._targetInfoList = [];\n        var info = {};\n        var foundCpts = parseFinder(ecModel, option);\n\n        each(targetInfoBuilders, function (builder, type) {\n            if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n                builder(foundCpts, targetInfoList, info);\n            }\n        });\n    }\n\n    var proto = BrushTargetManager.prototype;\n\n    proto.setOutputRanges = function (areas, ecModel) {\n        this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            (area.coordRanges || (area.coordRanges = [])).push(coordRange);\n            // area.coordRange is the first of area.coordRanges\n            if (!area.coordRange) {\n                area.coordRange = coordRange;\n                // In 'category' axis, coord to pixel is not reversible, so we can not\n                // rebuild range by coordRange accrately, which may bring trouble when\n                // brushing only one item. So we use __rangeOffset to rebuilding range\n                // by coordRange. And this it only used in brush component so it is no\n                // need to be adapted to coordRanges.\n                var result = coordConvert[area.brushType](0, coordSys, coordRange);\n                area.__rangeOffset = {\n                    offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n                    xyMinMax: result.xyMinMax\n                };\n            }\n        });\n    };\n\n    proto.matchOutputRanges = function (areas, ecModel, cb) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (targetInfo && targetInfo !== true) {\n                zrUtil.each(\n                    targetInfo.coordSyses,\n                    function (coordSys) {\n                        var result = coordConvert[area.brushType](1, coordSys, area.range);\n                        cb(area, result.values, coordSys, ecModel);\n                    }\n                );\n            }\n        }, this);\n    };\n\n    proto.setInputRanges = function (areas, ecModel) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (__DEV__) {\n                zrUtil.assert(\n                    !targetInfo || targetInfo === true || area.coordRange,\n                    'coordRange must be specified when coord index specified.'\n                );\n                zrUtil.assert(\n                    !targetInfo || targetInfo !== true || area.range,\n                    'range must be specified in global brush.'\n                );\n            }\n\n            area.range = area.range || [];\n\n            // convert coordRange to global range and set panelId.\n            if (targetInfo && targetInfo !== true) {\n                area.panelId = targetInfo.panelId;\n                // (1) area.range shoule always be calculate from coordRange but does\n                // not keep its original value, for the sake of the dataZoom scenario,\n                // where area.coordRange remains unchanged but area.range may be changed.\n                // (2) Only support converting one coordRange to pixel range in brush\n                // component. So do not consider `coordRanges`.\n                // (3) About __rangeOffset, see comment above.\n                var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n                var rangeOffset = area.__rangeOffset;\n                area.range = rangeOffset\n                    ? diffProcessor[area.brushType](\n                        result.values,\n                        rangeOffset.offset,\n                        getScales(result.xyMinMax, rangeOffset.xyMinMax)\n                    )\n                    : result.values;\n            }\n        }, this);\n    };\n\n    proto.makePanelOpts = function (api, getDefaultBrushType) {\n        return zrUtil.map(this._targetInfoList, function (targetInfo) {\n            var rect = targetInfo.getPanelRect();\n            return {\n                panelId: targetInfo.panelId,\n                defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n                clipPath: brushHelper.makeRectPanelClipPath(rect),\n                isTargetByCursor: brushHelper.makeRectIsTargetByCursor(\n                    rect, api, targetInfo.coordSysModel\n                ),\n                getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n            };\n        });\n    };\n\n    proto.controlSeries = function (area, seriesModel, ecModel) {\n        // Check whether area is bound in coord, and series do not belong to that coord.\n        // If do not do this check, some brush (like lineX) will controll all axes.\n        var targetInfo = this.findTargetInfo(area, ecModel);\n        return targetInfo === true || (\n            targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0\n        );\n    };\n\n    /**\n     * If return Object, a coord found.\n     * If reutrn true, global found.\n     * Otherwise nothing found.\n     *\n     * @param {Object} area\n     * @param {Array} targetInfoList\n     * @return {Obejct|boolean}\n     */\n    proto.findTargetInfo = function (area, ecModel) {\n        var targetInfoList = this._targetInfoList;\n        var foundCpts = parseFinder(ecModel, area);\n\n        for (var i = 0; i < targetInfoList.length; i++) {\n            var targetInfo = targetInfoList[i];\n            var areaPanelId = area.panelId;\n            if (areaPanelId) {\n                if (targetInfo.panelId === areaPanelId) {\n                    return targetInfo;\n                }\n            }\n            else {\n                for (var i = 0; i < targetInfoMatchers.length; i++) {\n                    if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n                        return targetInfo;\n                    }\n                }\n            }\n        }\n\n        return true;\n    };\n\n    function formatMinMax(minMax) {\n        minMax[0] > minMax[1] && minMax.reverse();\n        return minMax;\n    }\n\n    function parseFinder(ecModel, option) {\n        return modelUtil.parseFinder(\n            ecModel, option, {includeMainTypes: INCLUDE_FINDER_MAIN_TYPES}\n        );\n    }\n\n    var targetInfoBuilders = {\n\n        grid: function (foundCpts, targetInfoList) {\n            var xAxisModels = foundCpts.xAxisModels;\n            var yAxisModels = foundCpts.yAxisModels;\n            var gridModels = foundCpts.gridModels;\n            // Remove duplicated.\n            var gridModelMap = zrUtil.createHashMap();\n            var xAxesHas = {};\n            var yAxesHas = {};\n\n            if (!xAxisModels && !yAxisModels && !gridModels) {\n                return;\n            }\n\n            each(xAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap.set(gridModel.id, gridModel);\n                xAxesHas[gridModel.id] = true;\n            });\n            each(yAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap.set(gridModel.id, gridModel);\n                yAxesHas[gridModel.id] = true;\n            });\n            each(gridModels, function (gridModel) {\n                gridModelMap.set(gridModel.id, gridModel);\n                xAxesHas[gridModel.id] = true;\n                yAxesHas[gridModel.id] = true;\n            });\n\n            gridModelMap.each(function (gridModel) {\n                var grid = gridModel.coordinateSystem;\n                var cartesians = [];\n\n                each(grid.getCartesians(), function (cartesian, index) {\n                    if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0\n                        || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0\n                    ) {\n                        cartesians.push(cartesian);\n                    }\n                });\n                targetInfoList.push({\n                    panelId: 'grid--' + gridModel.id,\n                    gridModel: gridModel,\n                    coordSysModel: gridModel,\n                    // Use the first one as the representitive coordSys.\n                    coordSys: cartesians[0],\n                    coordSyses: cartesians,\n                    getPanelRect: panelRectBuilder.grid,\n                    xAxisDeclared: xAxesHas[gridModel.id],\n                    yAxisDeclared: yAxesHas[gridModel.id]\n                });\n            });\n        },\n\n        geo: function (foundCpts, targetInfoList) {\n            each(foundCpts.geoModels, function (geoModel) {\n                var coordSys = geoModel.coordinateSystem;\n                targetInfoList.push({\n                    panelId: 'geo--' + geoModel.id,\n                    geoModel: geoModel,\n                    coordSysModel: geoModel,\n                    coordSys: coordSys,\n                    coordSyses: [coordSys],\n                    getPanelRect: panelRectBuilder.geo\n                });\n            });\n        }\n    };\n\n    var targetInfoMatchers = [\n\n        // grid\n        function (foundCpts, targetInfo) {\n            var xAxisModel = foundCpts.xAxisModel;\n            var yAxisModel = foundCpts.yAxisModel;\n            var gridModel = foundCpts.gridModel;\n\n            !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n            !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n\n            return gridModel && gridModel === targetInfo.gridModel;\n        },\n\n        // geo\n        function (foundCpts, targetInfo) {\n            var geoModel = foundCpts.geoModel;\n            return geoModel && geoModel === targetInfo.geoModel;\n        }\n    ];\n\n    var panelRectBuilder = {\n\n        grid: function () {\n            // grid is not Transformable.\n            return this.coordSys.grid.getRect().clone();\n        },\n\n        geo: function () {\n            var coordSys = this.coordSys;\n            var rect = coordSys.getBoundingRect().clone();\n            // geo roam and zoom transform\n            rect.applyTransform(graphic.getTransform(coordSys));\n            return rect;\n        }\n    };\n\n    var coordConvert = {\n\n        lineX: curry(axisConvert, 0),\n\n        lineY: curry(axisConvert, 1),\n\n        rect: function (to, coordSys, rangeOrCoordRange) {\n            var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n            var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n            var values = [\n                formatMinMax([xminymin[0], xmaxymax[0]]),\n                formatMinMax([xminymin[1], xmaxymax[1]])\n            ];\n            return {values: values, xyMinMax: values};\n        },\n\n        polygon: function (to, coordSys, rangeOrCoordRange) {\n            var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n            var values = zrUtil.map(rangeOrCoordRange, function (item) {\n                var p = coordSys[COORD_CONVERTS[to]](item);\n                xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n                xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n                xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n                xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n                return p;\n            });\n            return {values: values, xyMinMax: xyMinMax};\n        }\n    };\n\n    function axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n        if (__DEV__) {\n            zrUtil.assert(\n                coordSys.type === 'cartesian2d',\n                'lineX/lineY brush is available only in cartesian2d.'\n            );\n        }\n\n        var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n        var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n            return to\n                ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]))\n                : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n        }));\n        var xyMinMax = [];\n        xyMinMax[axisNameIndex] = values;\n        xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n\n        return {values: values, xyMinMax: xyMinMax};\n    }\n\n    var diffProcessor = {\n        lineX: curry(axisDiffProcessor, 0),\n\n        lineY: curry(axisDiffProcessor, 1),\n\n        rect: function (values, refer, scales) {\n            return [\n                [values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]],\n                [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]\n            ];\n        },\n\n        polygon: function (values, refer, scales) {\n            return zrUtil.map(values, function (item, idx) {\n                return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n            });\n        }\n    };\n\n    function axisDiffProcessor(axisNameIndex, values, refer, scales) {\n        return [\n            values[0] - scales[axisNameIndex] * refer[0],\n            values[1] - scales[axisNameIndex] * refer[1]\n        ];\n    }\n\n    // We have to process scale caused by dataZoom manually,\n    // although it might be not accurate.\n    function getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n        var sizeCurr = getSize(xyMinMaxCurr);\n        var sizeOrigin = getSize(xyMinMaxOrigin);\n        var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n        isNaN(scales[0]) && (scales[0] = 1);\n        isNaN(scales[1]) && (scales[1] = 1);\n        return scales;\n    }\n\n    function getSize(xyMinMax) {\n        return xyMinMax\n            ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]]\n            : [NaN, NaN];\n    }\n\n    module.exports = BrushTargetManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/BrushTargetManager.js\n// module id = 589\n// module chunks = 0 1","\n\n    var cursorHelper = require('./cursorHelper');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var graphicUtil = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.makeRectPanelClipPath = function (rect) {\n        rect = normalizeRect(rect);\n        return function (localPoints, transform) {\n            return graphicUtil.clipPointsByRect(localPoints, rect);\n        };\n    };\n\n    helper.makeLinearBrushOtherExtent = function (rect, specifiedXYIndex) {\n        rect = normalizeRect(rect);\n        return function (xyIndex) {\n            var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n            var brushWidth = idx ? rect.width : rect.height;\n            var base = idx ? rect.x : rect.y;\n            return [base, base + (brushWidth || 0)];\n        };\n    };\n\n    helper.makeRectIsTargetByCursor = function (rect, api, targetModel) {\n        rect = normalizeRect(rect);\n        return function (e, localCursorPoint, transform) {\n            return rect.contain(localCursorPoint[0], localCursorPoint[1])\n                && !cursorHelper.onIrrelevantElement(e, api, targetModel);\n        };\n    };\n\n    // Consider width/height is negative.\n    function normalizeRect(rect) {\n        return BoundingRect.create(rect);\n    }\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/brushHelper.js\n// module id = 590\n// module chunks = 0 1","\n\n    var helper = {};\n\n    var IRRELEVANT_EXCLUDES = {'axisPointer': 1, 'tooltip': 1, 'brush': 1};\n\n    /**\n     * Avoid that: mouse click on a elements that is over geo or graph,\n     * but roam is triggered.\n     */\n    helper.onIrrelevantElement = function (e, api, targetCoordSysModel) {\n        var model = api.getComponentByElement(e.topTarget);\n        // If model is axisModel, it works only if it is injected with coordinateSystem.\n        var coordSys = model && model.coordinateSystem;\n        return model\n            && model !== targetCoordSysModel\n            && !IRRELEVANT_EXCLUDES[model.mainType]\n            && (coordSys && coordSys.model !== targetCoordSysModel);\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/cursorHelper.js\n// module id = 591\n// module chunks = 0 1","\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    require('../../echarts').registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/interactionMutex.js\n// module id = 592\n// module chunks = 0 1","\n\n    /**\n     * Calculate slider move result.\n     * Usage:\n     * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n     * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n     * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n     *\n     * @param {number} delta Move length.\n     * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n     *              handleEnds will be modified in this method.\n     * @param {Array.<number>} extent handleEnds is restricted by extent.\n     *              extent[0] should less or equals than extent[1].\n     * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n     *              where the input minSpan and maxSpan will not work.\n     * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n     *              If not set, handle0 and cross handle1. If set as a non-negative\n     *              number (including `0`), handles will push each other when reaching\n     *              the minSpan.\n     * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n     * @return {Array.<number>} The input handleEnds.\n     */\n    module.exports = function (delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n        // Normalize firstly.\n        handleEnds[0] = restrict(handleEnds[0], extent);\n        handleEnds[1] = restrict(handleEnds[1], extent);\n\n        delta = delta || 0;\n\n        var extentSpan = extent[1] - extent[0];\n\n        // Notice maxSpan and minSpan can be null/undefined.\n        if (minSpan != null) {\n            minSpan = restrict(minSpan, [0, extentSpan]);\n        }\n        if (maxSpan != null) {\n            maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n        }\n        if (handleIndex === 'all') {\n            minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n            handleIndex = 0;\n        }\n\n        var originalDistSign = getSpanSign(handleEnds, handleIndex);\n\n        handleEnds[handleIndex] += delta;\n\n        // Restrict in extent.\n        var extentMinSpan = minSpan || 0;\n        var realExtent = extent.slice();\n        originalDistSign.sign < 0 ? (realExtent[0] += extentMinSpan) : (realExtent[1] -= extentMinSpan);\n        handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent);\n\n        // Expand span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (minSpan != null && (\n            currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan\n        )) {\n            // If minSpan exists, 'cross' is forbinden.\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n        }\n\n        // Shrink span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (maxSpan != null && currDistSign.span > maxSpan) {\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n        }\n\n        return handleEnds;\n    };\n\n    function getSpanSign(handleEnds, handleIndex) {\n        var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex];\n        // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n        // is at left of handleEnds[1] for non-cross case.\n        return {span: Math.abs(dist), sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1};\n    }\n\n    function restrict(value, extend) {\n        return Math.min(extend[1], Math.max(extend[0], value));\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/sliderMove.js\n// module id = 593\n// module chunks = 0 1","/**\n * Legend component entry file8\n */\n\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend.js\n// module id = 594\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendModel.js\n// module id = 595\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = zrUtil.createHashMap();\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap.get(name)) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap.set(name, true);\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap.get(name)) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap.set(name, true);\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap.get(name)) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendView.js\n// module id = 596\n// module chunks = 0 1","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (selectedMap.hasOwnProperty(name)) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendAction.js\n// module id = 597\n// module chunks = 0 1","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendFilter.js\n// module id = 598\n// module chunks = 0 1","'use strict';\n\n\n    var echarts = require('../echarts');\n    var graphic = require('../util/graphic');\n    var layout = require('../util/layout');\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/title.js\n// module id = 599\n// module chunks = 0 1","\n\n    require('./toolbox/ToolboxModel');\n    require('./toolbox/ToolboxView');\n\n    require('./toolbox/feature/SaveAsImage');\n    require('./toolbox/feature/MagicType');\n    require('./toolbox/feature/DataView');\n    require('./toolbox/feature/DataZoom');\n    require('./toolbox/feature/Restore');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox.js\n// module id = 600\n// module chunks = 0 1","\n\n    var featureManager = require('./featureManager');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var ToolboxModel = require('../../echarts').extendComponentModel({\n\n        type: 'toolbox',\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        mergeDefaultAndTheme: function (option) {\n            ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n\n            zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n                var Feature = featureManager.get(featureName);\n                Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n            });\n        },\n\n        defaultOption: {\n\n            show: true,\n\n            z: 6,\n\n            zlevel: 0,\n\n            orient: 'horizontal',\n\n            left: 'right',\n\n            top: 'top',\n\n            // right\n            // bottom\n\n            backgroundColor: 'transparent',\n\n            borderColor: '#ccc',\n\n            borderWidth: 0,\n\n            padding: 5,\n\n            itemSize: 15,\n\n            itemGap: 8,\n\n            showTitle: true,\n\n            iconStyle: {\n                normal: {\n                    borderColor: '#666',\n                    color: 'none'\n                },\n                emphasis: {\n                    borderColor: '#3E98C5'\n                }\n            }\n            // textStyle: {},\n\n            // feature\n        }\n    });\n\n    module.exports = ToolboxModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/ToolboxModel.js\n// module id = 601\n// module chunks = 0 1","\n\n    var featureManager = require('./featureManager');\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var DataDiffer = require('../../data/DataDiffer');\n    var listComponentHelper = require('../helper/listComponent');\n    var textContain = require('zrender/lib/contain/text');\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'toolbox',\n\n        render: function (toolboxModel, ecModel, api, payload) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!toolboxModel.get('show')) {\n                return;\n            }\n\n            var itemSize = +toolboxModel.get('itemSize');\n            var featureOpts = toolboxModel.get('feature') || {};\n            var features = this._features || (this._features = {});\n\n            var featureNames = [];\n            zrUtil.each(featureOpts, function (opt, name) {\n                featureNames.push(name);\n            });\n\n            (new DataDiffer(this._featureNames || [], featureNames))\n                .add(process)\n                .update(process)\n                .remove(zrUtil.curry(process, null))\n                .execute();\n\n            // Keep for diff.\n            this._featureNames = featureNames;\n\n            function process(newIndex, oldIndex) {\n                var featureName = featureNames[newIndex];\n                var oldName = featureNames[oldIndex];\n                var featureOpt = featureOpts[featureName];\n                var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n                var feature;\n\n                if (featureName && !oldName) { // Create\n                    if (isUserFeatureName(featureName)) {\n                        feature = {\n                            model: featureModel,\n                            onclick: featureModel.option.onclick,\n                            featureName: featureName\n                        };\n                    }\n                    else {\n                        var Feature = featureManager.get(featureName);\n                        if (!Feature) {\n                            return;\n                        }\n                        feature = new Feature(featureModel, ecModel, api);\n                    }\n                    features[featureName] = feature;\n                }\n                else {\n                    feature = features[oldName];\n                    // If feature does not exsit.\n                    if (!feature) {\n                        return;\n                    }\n                    feature.model = featureModel;\n                    feature.ecModel = ecModel;\n                    feature.api = api;\n                }\n\n                if (!featureName && oldName) {\n                    feature.dispose && feature.dispose(ecModel, api);\n                    return;\n                }\n\n                if (!featureModel.get('show') || feature.unusable) {\n                    feature.remove && feature.remove(ecModel, api);\n                    return;\n                }\n\n                createIconPaths(featureModel, feature, featureName);\n\n                featureModel.setIconStatus = function (iconName, status) {\n                    var option = this.option;\n                    var iconPaths = this.iconPaths;\n                    option.iconStatus = option.iconStatus || {};\n                    option.iconStatus[iconName] = status;\n                    // FIXME\n                    iconPaths[iconName] && iconPaths[iconName].trigger(status);\n                };\n\n                if (feature.render) {\n                    feature.render(featureModel, ecModel, api, payload);\n                }\n            }\n\n            function createIconPaths(featureModel, feature, featureName) {\n                var iconStyleModel = featureModel.getModel('iconStyle');\n\n                // If one feature has mutiple icon. they are orginaized as\n                // {\n                //     icon: {\n                //         foo: '',\n                //         bar: ''\n                //     },\n                //     title: {\n                //         foo: '',\n                //         bar: ''\n                //     }\n                // }\n                var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n                var titles = featureModel.get('title') || {};\n                if (typeof icons === 'string') {\n                    var icon = icons;\n                    var title = titles;\n                    icons = {};\n                    titles = {};\n                    icons[featureName] = icon;\n                    titles[featureName] = title;\n                }\n                var iconPaths = featureModel.iconPaths = {};\n                zrUtil.each(icons, function (icon, iconName) {\n                    var normalStyle = iconStyleModel.getModel('normal').getItemStyle();\n                    var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n\n                    var style = {\n                        x: -itemSize / 2,\n                        y: -itemSize / 2,\n                        width: itemSize,\n                        height: itemSize\n                    };\n                    var path = icon.indexOf('image://') === 0\n                        ? (\n                            style.image = icon.slice(8),\n                            new graphic.Image({style: style})\n                        )\n                        : graphic.makePath(\n                            icon.replace('path://', ''),\n                            {\n                                style: normalStyle,\n                                hoverStyle: hoverStyle,\n                                rectHover: true\n                            },\n                            style,\n                            'center'\n                        );\n\n                    graphic.setHoverStyle(path);\n\n                    if (toolboxModel.get('showTitle')) {\n                        path.__title = titles[iconName];\n                        path.on('mouseover', function () {\n                                // Should not reuse above hoverStyle, which might be modified.\n                                var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n                                path.setStyle({\n                                    text: titles[iconName],\n                                    textPosition: hoverStyle.textPosition || 'bottom',\n                                    textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n                                    textAlign: hoverStyle.textAlign || 'center'\n                                });\n                            })\n                            .on('mouseout', function () {\n                                path.setStyle({\n                                    textFill: null\n                                });\n                            });\n                    }\n                    path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n\n                    group.add(path);\n                    path.on('click', zrUtil.bind(\n                        feature.onclick, feature, ecModel, api, iconName\n                    ));\n\n                    iconPaths[iconName] = path;\n                });\n            }\n\n            listComponentHelper.layout(group, toolboxModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, toolboxModel);\n\n            // Adjust icon title positions to avoid them out of screen\n            group.eachChild(function (icon) {\n                var titleText = icon.__title;\n                var hoverStyle = icon.hoverStyle;\n                // May be background element\n                if (hoverStyle && titleText) {\n                    var rect = textContain.getBoundingRect(\n                        titleText, hoverStyle.font\n                    );\n                    var offsetX = icon.position[0] + group.position[0];\n                    var offsetY = icon.position[1] + group.position[1] + itemSize;\n\n                    var needPutOnTop = false;\n                    if (offsetY + rect.height > api.getHeight()) {\n                        hoverStyle.textPosition = 'top';\n                        needPutOnTop = true;\n                    }\n                    var topOffset = needPutOnTop ? (-5 - rect.height) : (itemSize + 8);\n                    if (offsetX + rect.width /  2 > api.getWidth()) {\n                        hoverStyle.textPosition = ['100%', topOffset];\n                        hoverStyle.textAlign = 'right';\n                    }\n                    else if (offsetX - rect.width / 2 < 0) {\n                        hoverStyle.textPosition = [0, topOffset];\n                        hoverStyle.textAlign = 'left';\n                    }\n                }\n            });\n        },\n\n        updateView: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n            });\n        },\n\n        updateLayout: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n            });\n        },\n\n        remove: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.remove && feature.remove(ecModel, api);\n            });\n            this.group.removeAll();\n        },\n\n        dispose: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.dispose && feature.dispose(ecModel, api);\n            });\n        }\n    });\n\n    function isUserFeatureName(featureName) {\n        return featureName.indexOf('my') === 0;\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/ToolboxView.js\n// module id = 602\n// module chunks = 0 1","/**\n * @module echarts/component/toolbox/feature/DataView\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var eventTool = require('zrender/lib/core/event');\n\n\n    var BLOCK_SPLITER = new Array(60).join('-');\n    var ITEM_SPLITER = '\\t';\n    /**\n     * Group series into two types\n     *  1. on category axis, like line, bar\n     *  2. others, like scatter, pie\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object}\n     * @inner\n     */\n    function groupSeries(ecModel) {\n        var seriesGroupByCategoryAxis = {};\n        var otherSeries = [];\n        var meta = [];\n        ecModel.eachRawSeries(function (seriesModel) {\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n                var baseAxis = coordSys.getBaseAxis();\n                if (baseAxis.type === 'category') {\n                    var key = baseAxis.dim + '_' + baseAxis.index;\n                    if (!seriesGroupByCategoryAxis[key]) {\n                        seriesGroupByCategoryAxis[key] = {\n                            categoryAxis: baseAxis,\n                            valueAxis: coordSys.getOtherAxis(baseAxis),\n                            series: []\n                        };\n                        meta.push({\n                            axisDim: baseAxis.dim,\n                            axisIndex: baseAxis.index\n                        });\n                    }\n                    seriesGroupByCategoryAxis[key].series.push(seriesModel);\n                }\n                else {\n                    otherSeries.push(seriesModel);\n                }\n            }\n            else {\n                otherSeries.push(seriesModel);\n            }\n        });\n\n        return {\n            seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n            other: otherSeries,\n            meta: meta\n        };\n    }\n\n    /**\n     * Assemble content of series on cateogory axis\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleSeriesWithCategoryAxis(series) {\n        var tables = [];\n        zrUtil.each(series, function (group, key) {\n            var categoryAxis = group.categoryAxis;\n            var valueAxis = group.valueAxis;\n            var valueAxisDim = valueAxis.dim;\n\n            var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n                return series.name;\n            }));\n            var columns = [categoryAxis.model.getCategories()];\n            zrUtil.each(group.series, function (series) {\n                columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n                    return val;\n                }));\n            });\n            // Assemble table content\n            var lines = [headers.join(ITEM_SPLITER)];\n            for (var i = 0; i < columns[0].length; i++) {\n                var items = [];\n                for (var j = 0; j < columns.length; j++) {\n                    items.push(columns[j][i]);\n                }\n                lines.push(items.join(ITEM_SPLITER));\n            }\n            tables.push(lines.join('\\n'));\n        });\n        return tables.join('\\n\\n' +  BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * Assemble content of other series\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleOtherSeries(series) {\n        return zrUtil.map(series, function (series) {\n            var data = series.getRawData();\n            var lines = [series.name];\n            var vals = [];\n            data.each(data.dimensions, function () {\n                var argLen = arguments.length;\n                var dataIndex = arguments[argLen - 1];\n                var name = data.getName(dataIndex);\n                for (var i = 0; i < argLen - 1; i++) {\n                    vals[i] = arguments[i];\n                }\n                lines.push((name ? (name + ITEM_SPLITER) : '') + vals.join(ITEM_SPLITER));\n            });\n            return lines.join('\\n');\n        }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * @param {module:echarts/model/Global}\n     * @return {string}\n     * @inner\n     */\n    function getContentFromModel(ecModel) {\n\n        var result = groupSeries(ecModel);\n\n        return {\n            value: zrUtil.filter([\n                    assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis),\n                    assembleOtherSeries(result.other)\n                ], function (str) {\n                    return str.replace(/[\\n\\t\\s]/g, '');\n                }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n\n            meta: result.meta\n        };\n    }\n\n\n    function trim(str) {\n        return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n    /**\n     * If a block is tsv format\n     */\n    function isTSVFormat(block) {\n        // Simple method to find out if a block is tsv format\n        var firstLine = block.slice(0, block.indexOf('\\n'));\n        if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n            return true;\n        }\n    }\n\n    var itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n    /**\n     * @param {string} tsv\n     * @return {Array.<Object>}\n     */\n    function parseTSVContents(tsv) {\n        var tsvLines = tsv.split(/\\n+/g);\n        var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n\n        var categories = [];\n        var series = zrUtil.map(headers, function (header) {\n            return {\n                name: header,\n                data: []\n            };\n        });\n        for (var i = 0; i < tsvLines.length; i++) {\n            var items = trim(tsvLines[i]).split(itemSplitRegex);\n            categories.push(items.shift());\n            for (var j = 0; j < items.length; j++) {\n                series[j] && (series[j].data[i] = items[j]);\n            }\n        }\n        return {\n            series: series,\n            categories: categories\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @return {Array.<Object>}\n     * @inner\n     */\n    function parseListContents(str) {\n        var lines = str.split(/\\n+/g);\n        var seriesName = trim(lines.shift());\n\n        var data = [];\n        for (var i = 0; i < lines.length; i++) {\n            var items = trim(lines[i]).split(itemSplitRegex);\n            var name = '';\n            var value;\n            var hasName = false;\n            if (isNaN(items[0])) { // First item is name\n                hasName = true;\n                name = items[0];\n                items = items.slice(1);\n                data[i] = {\n                    name: name,\n                    value: []\n                };\n                value = data[i].value;\n            }\n            else {\n                value = data[i] = [];\n            }\n            for (var j = 0; j < items.length; j++) {\n                value.push(+items[j]);\n            }\n            if (value.length === 1) {\n                hasName ? (data[i].value = value[0]) : (data[i] = value[0]);\n            }\n        }\n\n        return {\n            name: seriesName,\n            data: data\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @param {Array.<Object>} blockMetaList\n     * @return {Object}\n     * @inner\n     */\n    function parseContents(str, blockMetaList) {\n        var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n        var newOption = {\n            series: []\n        };\n        zrUtil.each(blocks, function (block, idx) {\n            if (isTSVFormat(block)) {\n                var result = parseTSVContents(block);\n                var blockMeta = blockMetaList[idx];\n                var axisKey = blockMeta.axisDim + 'Axis';\n\n                if (blockMeta) {\n                    newOption[axisKey] = newOption[axisKey] || [];\n                    newOption[axisKey][blockMeta.axisIndex] = {\n                        data: result.categories\n                    };\n                    newOption.series = newOption.series.concat(result.series);\n                }\n            }\n            else {\n                var result = parseListContents(block);\n                newOption.series.push(result);\n            }\n        });\n        return newOption;\n    }\n\n    /**\n     * @alias {module:echarts/component/toolbox/feature/DataView}\n     * @constructor\n     * @param {module:echarts/model/Model} model\n     */\n    function DataView(model) {\n\n        this._dom = null;\n\n        this.model = model;\n    }\n\n    DataView.defaultOption = {\n        show: true,\n        readOnly: false,\n        optionToContent: null,\n        contentToOption: null,\n\n        icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n        title: '数据视图',\n        lang: ['数据视图', '关闭', '刷新'],\n        backgroundColor: '#fff',\n        textColor: '#000',\n        textareaColor: '#fff',\n        textareaBorderColor: '#333',\n        buttonColor: '#c23531',\n        buttonTextColor: '#fff'\n    };\n\n    DataView.prototype.onclick = function (ecModel, api) {\n        var container = api.getDom();\n        var model = this.model;\n        if (this._dom) {\n            container.removeChild(this._dom);\n        }\n        var root = document.createElement('div');\n        root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n        root.style.backgroundColor = model.get('backgroundColor') || '#fff';\n\n        // Create elements\n        var header = document.createElement('h4');\n        var lang = model.get('lang') || [];\n        header.innerHTML = lang[0] || model.get('title');\n        header.style.cssText = 'margin: 10px 20px;';\n        header.style.color = model.get('textColor');\n\n        var viewMain = document.createElement('div');\n        var textarea = document.createElement('textarea');\n        viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n\n        var optionToContent = model.get('optionToContent');\n        var contentToOption = model.get('contentToOption');\n        var result = getContentFromModel(ecModel);\n        if (typeof optionToContent === 'function') {\n            var htmlOrDom = optionToContent(api.getOption());\n            if (typeof htmlOrDom === 'string') {\n                viewMain.innerHTML = htmlOrDom;\n            }\n            else if (zrUtil.isDom(htmlOrDom)) {\n                viewMain.appendChild(htmlOrDom);\n            }\n        }\n        else {\n            // Use default textarea\n            viewMain.appendChild(textarea);\n            textarea.readOnly = model.get('readOnly');\n            textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n            textarea.style.color = model.get('textColor');\n            textarea.style.borderColor = model.get('textareaBorderColor');\n            textarea.style.backgroundColor = model.get('textareaColor');\n            textarea.value = result.value;\n        }\n\n        var blockMetaList = result.meta;\n\n        var buttonContainer = document.createElement('div');\n        buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n\n        var buttonStyle = 'float:right;margin-right:20px;border:none;'\n            + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n        var closeButton = document.createElement('div');\n        var refreshButton = document.createElement('div');\n\n        buttonStyle += ';background-color:' + model.get('buttonColor');\n        buttonStyle += ';color:' + model.get('buttonTextColor');\n\n        var self = this;\n\n        function close() {\n            container.removeChild(root);\n            self._dom = null;\n        }\n        eventTool.addEventListener(closeButton, 'click', close);\n\n        eventTool.addEventListener(refreshButton, 'click', function () {\n            var newOption;\n            try {\n                if (typeof contentToOption === 'function') {\n                    newOption = contentToOption(viewMain, api.getOption());\n                }\n                else {\n                    newOption = parseContents(textarea.value, blockMetaList);\n                }\n            }\n            catch (e) {\n                close();\n                throw new Error('Data view format error ' + e);\n            }\n            if (newOption) {\n                api.dispatchAction({\n                    type: 'changeDataView',\n                    newOption: newOption\n                });\n            }\n\n            close();\n        });\n\n        closeButton.innerHTML = lang[1];\n        refreshButton.innerHTML = lang[2];\n        refreshButton.style.cssText = buttonStyle;\n        closeButton.style.cssText = buttonStyle;\n\n        !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n        buttonContainer.appendChild(closeButton);\n\n        // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n        eventTool.addEventListener(textarea, 'keydown', function (e) {\n            if ((e.keyCode || e.which) === 9) {\n                // get caret position/selection\n                var val = this.value;\n                var start = this.selectionStart;\n                var end = this.selectionEnd;\n\n                // set textarea value to: text before caret + tab + text after caret\n                this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end);\n\n                // put caret at right position again\n                this.selectionStart = this.selectionEnd = start + 1;\n\n                // prevent the focus lose\n                eventTool.stop(e);\n            }\n        });\n\n        root.appendChild(header);\n        root.appendChild(viewMain);\n        root.appendChild(buttonContainer);\n\n        viewMain.style.height = (container.clientHeight - 80) + 'px';\n\n        container.appendChild(root);\n        this._dom = root;\n    };\n\n    DataView.prototype.remove = function (ecModel, api) {\n        this._dom && api.getDom().removeChild(this._dom);\n    };\n\n    DataView.prototype.dispose = function (ecModel, api) {\n        this.remove(ecModel, api);\n    };\n\n    /**\n     * @inner\n     */\n    function tryMergeDataOption(newData, originalData) {\n        return zrUtil.map(newData, function (newVal, idx) {\n            var original = originalData && originalData[idx];\n            if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n                if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n                    newVal = newVal.value;\n                }\n                // Original data has option\n                return zrUtil.defaults({\n                    value: newVal\n                }, original);\n            }\n            else {\n                return newVal;\n            }\n        });\n    }\n\n    require('../featureManager').register('dataView', DataView);\n\n    require('../../../echarts').registerAction({\n        type: 'changeDataView',\n        event: 'dataViewChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        var newSeriesOptList = [];\n        zrUtil.each(payload.newOption.series, function (seriesOpt) {\n            var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n            if (!seriesModel) {\n                // New created series\n                // Geuss the series type\n                newSeriesOptList.push(zrUtil.extend({\n                    // Default is scatter\n                    type: 'scatter'\n                }, seriesOpt));\n            }\n            else {\n                var originalData = seriesModel.get('data');\n                newSeriesOptList.push({\n                    name: seriesOpt.name,\n                    data: tryMergeDataOption(seriesOpt.data, originalData)\n                });\n            }\n        });\n\n        ecModel.mergeOption(zrUtil.defaults({\n            series: newSeriesOptList\n        }, payload.newOption));\n    });\n\n    module.exports = DataView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/DataView.js\n// module id = 603\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BrushController = require('../../helper/BrushController');\n    var BrushTargetManager = require('../../helper/BrushTargetManager');\n    var history = require('../../dataZoom/history');\n    var sliderMove = require('../../helper/sliderMove');\n\n    var each = zrUtil.each;\n\n    // Use dataZoomSelect\n    require('../../dataZoomSelect');\n\n    // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n    var DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\n    function DataZoom(model, ecModel, api) {\n\n        /**\n         * @private\n         * @type {module:echarts/component/helper/BrushController}\n         */\n        (this._brushController = new BrushController(api.getZr()))\n            .on('brush', zrUtil.bind(this._onBrush, this))\n            .mount();\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._isZoomActive;\n    }\n\n    DataZoom.defaultOption = {\n        show: true,\n        // Icon group\n        icon: {\n            zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n            back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n        },\n        title: {\n            zoom: '区域缩放',\n            back: '区域缩放还原'\n        }\n    };\n\n    var proto = DataZoom.prototype;\n\n    proto.render = function (featureModel, ecModel, api, payload) {\n        this.model = featureModel;\n        this.ecModel = ecModel;\n        this.api = api;\n\n        updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n        updateBackBtnStatus(featureModel, ecModel);\n    };\n\n    proto.onclick = function (ecModel, api, type) {\n        handlers[type].call(this);\n    };\n\n    proto.remove = function (ecModel, api) {\n        this._brushController.unmount();\n    };\n\n    proto.dispose = function (ecModel, api) {\n        this._brushController.dispose();\n    };\n\n    /**\n     * @private\n     */\n    var handlers = {\n\n        zoom: function () {\n            var nextActive = !this._isZoomActive;\n\n            this.api.dispatchAction({\n                type: 'takeGlobalCursor',\n                key: 'dataZoomSelect',\n                dataZoomSelectActive: nextActive\n            });\n        },\n\n        back: function () {\n            this._dispatchZoomAction(history.pop(this.ecModel));\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._onBrush = function (areas, opt) {\n        if (!opt.isEnd || !areas.length) {\n            return;\n        }\n        var snapshot = {};\n        var ecModel = this.ecModel;\n\n        this._brushController.updateCovers([]); // remove cover\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(this.model.option), ecModel, {include: ['grid']}\n        );\n        brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            if (coordSys.type !== 'cartesian2d') {\n                return;\n            }\n\n            var brushType = area.brushType;\n            if (brushType === 'rect') {\n                setBatch('x', coordSys, coordRange[0]);\n                setBatch('y', coordSys, coordRange[1]);\n            }\n            else {\n                setBatch(({lineX: 'x', lineY: 'y'})[brushType], coordSys, coordRange);\n            }\n        });\n\n        history.push(ecModel, snapshot);\n\n        this._dispatchZoomAction(snapshot);\n\n        function setBatch(dimName, coordSys, minMax) {\n            var axis = coordSys.getAxis(dimName);\n            var axisModel = axis.model;\n            var dataZoomModel = findDataZoom(dimName, axisModel, ecModel);\n\n            // Restrict range.\n            var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n            if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n                minMax = sliderMove(\n                    0, minMax.slice(), axis.scale.getExtent(), 0,\n                    minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan\n                );\n            }\n\n            dataZoomModel && (snapshot[dataZoomModel.id] = {\n                dataZoomId: dataZoomModel.id,\n                startValue: minMax[0],\n                endValue: minMax[1]\n            });\n        }\n\n        function findDataZoom(dimName, axisModel, ecModel) {\n            var found;\n            ecModel.eachComponent({mainType: 'dataZoom', subType: 'select'}, function (dzModel) {\n                var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n                has && (found = dzModel);\n            });\n            return found;\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._dispatchZoomAction = function (snapshot) {\n        var batch = [];\n\n        // Convert from hash map to array.\n        each(snapshot, function (batchItem, dataZoomId) {\n            batch.push(zrUtil.clone(batchItem));\n        });\n\n        batch.length && this.api.dispatchAction({\n            type: 'dataZoom',\n            from: this.uid,\n            batch: batch\n        });\n    };\n\n    function retrieveAxisSetting(option) {\n        var setting = {};\n        // Compatible with previous setting: null => all axis, false => no axis.\n        zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n            setting[name] = option[name];\n            setting[name] == null && (setting[name] = 'all');\n            (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n        });\n        return setting;\n    }\n\n    function updateBackBtnStatus(featureModel, ecModel) {\n        featureModel.setIconStatus(\n            'back',\n            history.count(ecModel) > 1 ? 'emphasis' : 'normal'\n        );\n    }\n\n    function updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n        var zoomActive = view._isZoomActive;\n\n        if (payload && payload.type === 'takeGlobalCursor') {\n            zoomActive = payload.key === 'dataZoomSelect'\n                ? payload.dataZoomSelectActive : false;\n        }\n\n        view._isZoomActive = zoomActive;\n\n        featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(featureModel.option), ecModel, {include: ['grid']}\n        );\n\n        view._brushController\n            .setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n                return (targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared)\n                    ? 'lineX'\n                    : (!targetInfo.xAxisDeclared && targetInfo.yAxisDeclared)\n                    ? 'lineY'\n                    : 'rect';\n            }))\n            .enableBrush(\n                zoomActive\n                ? {\n                    brushType: 'auto',\n                    brushStyle: {\n                        // FIXME user customized?\n                        lineWidth: 0,\n                        fill: 'rgba(0,0,0,0.2)'\n                    }\n                }\n                : false\n            );\n    }\n\n\n    require('../featureManager').register('dataZoom', DataZoom);\n\n\n    // Create special dataZoom option for select\n    require('../../../echarts').registerPreprocessor(function (option) {\n        if (!option) {\n            return;\n        }\n\n        var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n        if (!zrUtil.isArray(dataZoomOpts)) {\n            option.dataZoom = dataZoomOpts = [dataZoomOpts];\n        }\n\n        var toolboxOpt = option.toolbox;\n        if (toolboxOpt) {\n            // Assume there is only one toolbox\n            if (zrUtil.isArray(toolboxOpt)) {\n                toolboxOpt = toolboxOpt[0];\n            }\n\n            if (toolboxOpt && toolboxOpt.feature) {\n                var dataZoomOpt = toolboxOpt.feature.dataZoom;\n                addForAxis('xAxis', dataZoomOpt);\n                addForAxis('yAxis', dataZoomOpt);\n            }\n        }\n\n        function addForAxis(axisName, dataZoomOpt) {\n            if (!dataZoomOpt) {\n                return;\n            }\n\n            // Try not to modify model, because it is not merged yet.\n            var axisIndicesName = axisName + 'Index';\n            var givenAxisIndices = dataZoomOpt[axisIndicesName];\n            if (givenAxisIndices != null\n                && givenAxisIndices != 'all'\n                && !zrUtil.isArray(givenAxisIndices)\n            ) {\n                givenAxisIndices = (givenAxisIndices === false || givenAxisIndices === 'none') ? [] : [givenAxisIndices];\n            }\n\n            forEachComponent(axisName, function (axisOpt, axisIndex) {\n                if (givenAxisIndices != null\n                    && givenAxisIndices != 'all'\n                    && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1\n                ) {\n                    return;\n                }\n                var newOpt = {\n                    type: 'select',\n                    $fromToolbox: true,\n                    // Id for merge mapping.\n                    id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n                };\n                // FIXME\n                // Only support one axis now.\n                newOpt[axisIndicesName] = axisIndex;\n                dataZoomOpts.push(newOpt);\n            });\n        }\n\n        function forEachComponent(mainType, cb) {\n            var opts = option[mainType];\n            if (!zrUtil.isArray(opts)) {\n                opts = opts ? [opts] : [];\n            }\n            each(opts, cb);\n        }\n    });\n\n    module.exports = DataZoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/DataZoom.js\n// module id = 604\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function MagicType(model) {\n        this.model = model;\n    }\n\n    MagicType.defaultOption = {\n        show: true,\n        type: [],\n        // Icon group\n        icon: {\n            line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n            bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n            stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z', // jshint ignore:line\n            tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n        },\n        title: {\n            line: '切换为折线图',\n            bar: '切换为柱状图',\n            stack: '切换为堆叠',\n            tiled: '切换为平铺'\n        },\n        option: {},\n        seriesIndex: {}\n    };\n\n    var proto = MagicType.prototype;\n\n    proto.getIcons = function () {\n        var model = this.model;\n        var availableIcons = model.get('icon');\n        var icons = {};\n        zrUtil.each(model.get('type'), function (type) {\n            if (availableIcons[type]) {\n                icons[type] = availableIcons[type];\n            }\n        });\n        return icons;\n    };\n\n    var seriesOptGenreator = {\n        'line': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'line',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.line') || {}, true);\n            }\n        },\n        'bar': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'bar',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.bar') || {}, true);\n            }\n        },\n        'stack': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: '__ec_magicType_stack__'\n                }, model.get('option.stack') || {}, true);\n            }\n        },\n        'tiled': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: ''\n                }, model.get('option.tiled') || {}, true);\n            }\n        }\n    };\n\n    var radioTypes = [\n        ['line', 'bar'],\n        ['stack', 'tiled']\n    ];\n\n    proto.onclick = function (ecModel, api, type) {\n        var model = this.model;\n        var seriesIndex = model.get('seriesIndex.' + type);\n        // Not supported magicType\n        if (!seriesOptGenreator[type]) {\n            return;\n        }\n        var newOption = {\n            series: []\n        };\n        var generateNewSeriesTypes = function (seriesModel) {\n            var seriesType = seriesModel.subType;\n            var seriesId = seriesModel.id;\n            var newSeriesOpt = seriesOptGenreator[type](\n                seriesType, seriesId, seriesModel, model\n            );\n            if (newSeriesOpt) {\n                // PENDING If merge original option?\n                zrUtil.defaults(newSeriesOpt, seriesModel.option);\n                newOption.series.push(newSeriesOpt);\n            }\n            // Modify boundaryGap\n            var coordSys = seriesModel.coordinateSystem;\n            if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n                var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n                if (categoryAxis) {\n                    var axisDim = categoryAxis.dim;\n                    var axisType = axisDim + 'Axis';\n                    var axisModel = ecModel.queryComponents({\n                        mainType: axisType,\n                        index: seriesModel.get(name + 'Index'),\n                        id: seriesModel.get(name + 'Id')\n                    })[0];\n                    var axisIndex = axisModel.componentIndex;\n\n                    newOption[axisType] = newOption[axisType] || [];\n                    for (var i = 0; i <= axisIndex; i++) {\n                        newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n                    }\n                    newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n                }\n            }\n        };\n\n        zrUtil.each(radioTypes, function (radio) {\n            if (zrUtil.indexOf(radio, type) >= 0) {\n                zrUtil.each(radio, function (item) {\n                    model.setIconStatus(item, 'normal');\n                });\n            }\n        });\n\n        model.setIconStatus(type, 'emphasis');\n\n        ecModel.eachComponent(\n            {\n                mainType: 'series',\n                query: seriesIndex == null ? null : {\n                    seriesIndex: seriesIndex\n                }\n            }, generateNewSeriesTypes\n        );\n        api.dispatchAction({\n            type: 'changeMagicType',\n            currentType: type,\n            newOption: newOption\n        });\n    };\n\n    var echarts = require('../../../echarts');\n    echarts.registerAction({\n        type: 'changeMagicType',\n        event: 'magicTypeChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        ecModel.mergeOption(payload.newOption);\n    });\n\n    require('../featureManager').register('magicType', MagicType);\n\n    module.exports = MagicType;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/MagicType.js\n// module id = 605\n// module chunks = 0 1","'use strict';\n\n\n    var history = require('../../dataZoom/history');\n\n    function Restore(model) {\n        this.model = model;\n    }\n\n    Restore.defaultOption = {\n        show: true,\n        icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n        title: '还原'\n    };\n\n    var proto = Restore.prototype;\n\n    proto.onclick = function (ecModel, api, type) {\n        history.clear(ecModel);\n\n        api.dispatchAction({\n            type: 'restore',\n            from: this.uid\n        });\n    };\n\n\n    require('../featureManager').register('restore', Restore);\n\n\n    require('../../../echarts').registerAction(\n        {type: 'restore', event: 'restore', update: 'prepareAndUpdate'},\n        function (payload, ecModel) {\n            ecModel.resetOption('recreate');\n        }\n    );\n\n    module.exports = Restore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/Restore.js\n// module id = 606\n// module chunks = 0 1","\n\n    var env = require('zrender/lib/core/env');\n\n    function SaveAsImage (model) {\n        this.model = model;\n    }\n\n    SaveAsImage.defaultOption = {\n        show: true,\n        icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n        title: '保存为图片',\n        type: 'png',\n        // Default use option.backgroundColor\n        // backgroundColor: '#fff',\n        name: '',\n        excludeComponents: ['toolbox'],\n        pixelRatio: 1,\n        lang: ['右键另存为图片']\n    };\n\n    SaveAsImage.prototype.unusable = !env.canvasSupported;\n\n    var proto = SaveAsImage.prototype;\n\n    proto.onclick = function (ecModel, api) {\n        var model = this.model;\n        var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n        var $a = document.createElement('a');\n        var type = model.get('type', true) || 'png';\n        $a.download = title + '.' + type;\n        $a.target = '_blank';\n        var url = api.getConnectedDataURL({\n            type: type,\n            backgroundColor: model.get('backgroundColor', true)\n                || ecModel.get('backgroundColor') || '#fff',\n            excludeComponents: model.get('excludeComponents'),\n            pixelRatio: model.get('pixelRatio')\n        });\n        $a.href = url;\n        // Chrome and Firefox\n        if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n            var evt = new MouseEvent('click', {\n                view: window,\n                bubbles: true,\n                cancelable: false\n            });\n            $a.dispatchEvent(evt);\n        }\n        // IE\n        else {\n            var lang = model.get('lang');\n            var html = ''\n                + '<body style=\"margin:0;\">'\n                + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + ((lang && lang[0]) || '') + '\" />'\n                + '</body>';\n            var tab = window.open();\n            tab.document.write(html);\n        }\n    };\n\n    require('../featureManager').register(\n        'saveAsImage', SaveAsImage\n    );\n\n    module.exports = SaveAsImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/SaveAsImage.js\n// module id = 607\n// module chunks = 0 1","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 608\n// module chunks = 0 1","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 609\n// module chunks = 0 1","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 610\n// module chunks = 0 1","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 611\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 612\n// module chunks = 0 1","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 613\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 614\n// module chunks = 0 1","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 615\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 616\n// module chunks = 0 1","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 617\n// module chunks = 0 1","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 618\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var parsePercent = numberUtil.parsePercent;\n\n    var STACK_PREFIX = '__ec_stack_';\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    /**\n     * @param {Object} opt\n     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n     * @param {number} opt.count Positive interger.\n     * @param {number} [opt.barWidth]\n     * @param {number} [opt.barMaxWidth]\n     * @param {number} [opt.barGap]\n     * @param {number} [opt.barCategoryGap]\n     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n     */\n    function getLayoutOnAxis(opt, api) {\n        var params = [];\n        var baseAxis = opt.axis;\n        var axisKey = 'axis0';\n\n        if (baseAxis.type !== 'category') {\n            return;\n        }\n        var bandWidth = baseAxis.getBandWidth();\n\n        for (var i = 0; i < opt.count || 0; i++) {\n            params.push(zrUtil.defaults({\n                bandWidth: bandWidth,\n                axisKey: axisKey,\n                stackId: STACK_PREFIX + i\n            }, opt));\n        }\n        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\n        var result = [];\n        for (var i = 0; i < opt.count; i++) {\n            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n            item.offsetCenter = item.offset + item.width / 2;\n            result.push(item);\n        }\n\n        return result;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            return {\n                bandWidth: bandWidth,\n                barWidth: barWidth,\n                barMaxWidth: barMaxWidth,\n                barGap: barGap,\n                barCategoryGap: barCategoryGap,\n                axisKey: getAxisKey(baseAxis),\n                stackId: getSeriesStackId(seriesModel)\n            };\n        });\n\n        return doCalBarWidthAndOffset(seriesInfoList, api);\n    }\n\n    function doCalBarWidthAndOffset(seriesInfoList, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n            var axisKey = seriesInfo.axisKey;\n            var bandWidth = seriesInfo.bandWidth;\n            var columnsOnAxis = columnsMap[axisKey] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[axisKey] = columnsOnAxis;\n\n            var stackId = seriesInfo.stackId;\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            var barWidth = seriesInfo.barWidth;\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            var barMaxWidth = seriesInfo.barMaxWidth;\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            var barGap = seriesInfo.barGap;\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            var barCategoryGap = seriesInfo.barCategoryGap;\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            // Check series coordinate, do layout for cartesian2d only\n            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\n\n    module.exports = barLayoutGrid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/barGrid.js\n// module id = 619\n// module chunks = 0 1","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 620\n// module chunks = 0 1","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 621\n// module chunks = 0 1","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 622\n// module chunks = 0 1","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 623\n// module chunks = 0 1","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 624\n// module chunks = 0 1","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 625\n// module chunks = 0 1","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 626\n// module chunks = 0 1","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 627\n// module chunks = 0 1","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 628\n// module chunks = 0 1","\n\n    var textContain = require('zrender/lib/contain/text');\n    var graphicUtil = require('../../util/graphic');\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 629\n// module chunks = 0 1","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 630\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 631\n// module chunks = 0 1","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 632\n// module chunks = 0 1","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 633\n// module chunks = 0 1","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 634\n// module chunks = 0 1","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 635\n// module chunks = 0 1","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 636\n// module chunks = 0 1","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 637\n// module chunks = 0 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-0d182cbc\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../vue-loader/lib/selector.js?type=styles&index=0!./ECharts.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../vue-style-loader/lib/addStylesClient.js\")(\"3d642fb7\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-0d182cbc\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./~/vue-echarts/components/ECharts.vue\n// module id = 638\n// module chunks = 0 1","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash.debounce/index.js\n// module id = 639\n// module chunks = 0 1","\n/* styles */\nrequire(\"!!../../extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-0d182cbc\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../vue-loader/lib/selector?type=styles&index=0!./ECharts.vue\")\n\nvar Component = require(\"!../../vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../vue-loader/lib/selector?type=script&index=0!./ECharts.vue\"),\n  /* template */\n  require(\"!!../../vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0d182cbc\\\"}!../../vue-loader/lib/selector?type=template&index=0!./ECharts.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-echarts/components/ECharts.vue\n// module id = 640\n// module chunks = 0 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"echarts\"\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-0d182cbc\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-echarts/components/ECharts.vue\n// module id = 641\n// module chunks = 0 1","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 642\n// module chunks = 0 1","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 643\n// module chunks = 0 1","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 644\n// module chunks = 0 1","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 645\n// module chunks = 0 1","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 646\n// module chunks = 0 1","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 647\n// module chunks = 0 1","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 648\n// module chunks = 0 1","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 649\n// module chunks = 0 1","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 650\n// module chunks = 0 1","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 651\n// module chunks = 0 1","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 652\n// module chunks = 0 1","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 653\n// module chunks = 0 1","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 654\n// module chunks = 0 1","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 655\n// module chunks = 0 1","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 656\n// module chunks = 0 1","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 657\n// module chunks = 0 1","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 658\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 659\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 660\n// module chunks = 0 1","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 661\n// module chunks = 0 1","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 662\n// module chunks = 0 1","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 663\n// module chunks = 0 1","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 664\n// module chunks = 0 1","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 665\n// module chunks = 0 1","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 666\n// module chunks = 0 1","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 667\n// module chunks = 0 1","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 668\n// module chunks = 0 1","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 669\n// module chunks = 0 1","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 670\n// module chunks = 0 1","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 671\n// module chunks = 0 1","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 672\n// module chunks = 0 1","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 673\n// module chunks = 0 1","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 674\n// module chunks = 0 1","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 675\n// module chunks = 0 1","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 676\n// module chunks = 0 1","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 677\n// module chunks = 0 1","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 678\n// module chunks = 0 1","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.5.1';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 679\n// module chunks = 0 1","<template>\r\n  <div :class=\"{'drawer-opened': openDrawer}\">\r\n    <mainMenu />\r\n    <mu-appbar title=\"运营数据对比\" class=\"setting-appbar\">\r\n      <div class=\"setting-dropdown\" slot=\"right\">\r\n        <Group :handleChange=\"changeSelect\" />\r\n      </div>\r\n      <div class=\"setting-dropdown\" slot=\"right\">\r\n        <dateSelect :handleChange=\"changeSelect\" />\r\n      </div>\r\n      <div class=\"setting-dropdown\" slot=\"right\">\r\n        <mu-dropDown-menu :value=\"categoryData.code\" @change=\"handleChangeService\" :maxHeight=\"480\" id=\"serviceDropDown\">\r\n          <mu-menu-item value=\"\" title=\"全部服务\" />\r\n          <mu-menu-item v-for=\"item in generalOrderStatistics\" :key=\"item.categoryCode\" :value=\"item.categoryCode\" :title=\"item.categoryName\" />\r\n        </mu-dropDown-menu>\r\n      </div>\r\n    </mu-appbar>\r\n    <div id=\"mainContent\">\r\n      <ECharts :options=\"chartOption\" auto-resize ref=\"bar\"/>\r\n    </div>\r\n    <mu-snackbar v-if=\"snackbar\" :message=\"snackbarMsg\" action=\"关闭\" @actionClick=\"hideSnackbar\" @close=\"hideSnackbar\"/>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Vue from 'vue'\r\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex'\r\nimport mainMenu from './units/mainMenu'\r\nimport Modal from './Modal'\r\nimport Group from './units/group'\r\nimport dateSelect from './units/dateSelect'\r\nimport dropDownMenu from 'muse-components/dropDownMenu'\r\nimport {menuItem} from 'muse-components/menu'\r\nimport snackbar from 'muse-components/snackbar'\r\nimport ECharts from 'vue-echarts/components/ECharts.vue'\r\nimport 'echarts/lib/chart/bar'\r\nimport 'echarts/lib/chart/line'\r\nimport 'echarts/lib/component/title'\r\nimport 'echarts/lib/component/legend'\r\nimport 'echarts/lib/component/tooltip'\r\nimport 'echarts/lib/component/toolbox'\r\n\r\nVue.component(snackbar.name, snackbar)\r\nVue.component(dropDownMenu.name, dropDownMenu)\r\nVue.component(menuItem.name, menuItem)\r\nexport default {\r\n  name: 'Charts',\r\n  components: {\r\n    mainMenu,\r\n    Modal,\r\n    ECharts,\r\n    Group,\r\n    dateSelect\r\n  },\r\n  data () {\r\n    return {\r\n      selectedWorker: '',\r\n      categoryData: {\r\n        code: '',\r\n        name: '全部服务'\r\n      },\r\n      chartOption: {\r\n        title: {\r\n          show: true,\r\n          text: '运营对比图',\r\n          subtext: this.fullDate,\r\n          top: 'top',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        legend: {\r\n          top: '12%'\r\n        },\r\n        toolbox: {\r\n          orient: 'vertical',\r\n          itemSize: 24,\r\n          right: 24,\r\n          top: 12,\r\n          feature: {\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        grid: {\r\n          top: '24%',\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [{\r\n          type: 'category',\r\n          boundaryGap: true\r\n        }],\r\n        yAxis: [{\r\n          type: 'value',\r\n          name: '单量'\r\n        }, {\r\n          type: 'value',\r\n          name: '比率',\r\n          axisLabel: {\r\n            formatter: '{value} %'\r\n          }\r\n        }],\r\n        series: []\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState([\r\n      'city',\r\n      'group',\r\n      'snackbar',\r\n      'snackbarMsg',\r\n      'generalOrderStatistics',\r\n      'trendDataWithCondition',\r\n      'openDrawer'\r\n    ]),\r\n    ...mapGetters([\r\n      'fullDate'\r\n    ]),\r\n    targetNum: function () {\r\n      let arr\r\n      if (this.trendDataWithCondition) {\r\n        arr = this.trendDataWithCondition.map(d => d.targetNum)\r\n      }\r\n      return arr\r\n    },\r\n    completionNum: function () {\r\n      let arr\r\n      if (this.trendDataWithCondition) {\r\n        arr = this.trendDataWithCondition.map(d => d.completionNum)\r\n      }\r\n      return arr\r\n    },\r\n    achievingRate: function () {\r\n      let arr\r\n      if (this.trendDataWithCondition) {\r\n        arr = this.trendDataWithCondition.map(d => d.achievingRate)\r\n      }\r\n      return arr\r\n    },\r\n    linkGrowthRate: function () {\r\n      let arr\r\n      if (this.trendDataWithCondition) {\r\n        arr = this.trendDataWithCondition.map(d => d.linkGrowthRate)\r\n      }\r\n      return arr\r\n    },\r\n    dimension: function () {\r\n      let arr\r\n      if (this.trendDataWithCondition) {\r\n        arr = this.trendDataWithCondition.map(d => d.dimension)\r\n      }\r\n      return arr\r\n    }\r\n  },\r\n  mounted () {\r\n    let bar = this.$refs.bar\r\n    bar.showLoading({\r\n      text: '加载中',\r\n      color: '#c23531',\r\n      textColor: '#000',\r\n      maskColor: 'rgba(255, 255, 255, 0.8)',\r\n      zlevel: 0\r\n    })\r\n    const data = {\r\n      cityCode: this.city,\r\n      date: this.fullDate,\r\n      parentId: this.group\r\n    }\r\n    this.getGeneralOrderStatistics(data)\r\n    this.getData()\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      'hideSnackbar'\r\n    ]),\r\n    ...mapActions([\r\n      'getGeneralOrderStatistics',\r\n      'getTrendDataWithCondition'\r\n    ]),\r\n    getData () {\r\n      const z = this\r\n      const data = {\r\n        cityCode: this.city,\r\n        date: this.fullDate,\r\n        parentId: this.group,\r\n        categoryCode: this.categoryData.code\r\n      }\r\n      this.getTrendDataWithCondition(data).then(function () {\r\n        z.updateBar()\r\n      })\r\n    },\r\n    handleChangeService (v) {\r\n      let name = '全部服务'\r\n      if (v !== '') {\r\n        name = this.generalOrderStatistics.filter(t => t.categoryCode === v)[0].categoryName\r\n      }\r\n      this.categoryData = {\r\n        code: v,\r\n        name: name\r\n      }\r\n      this.changeSelect()\r\n    },\r\n    changeSelect () {\r\n      this.getData()\r\n    },\r\n    updateBar () {\r\n      const z = this\r\n      let bar = z.$refs.bar\r\n      let lengend = []\r\n      let series = []\r\n      let yAxis = []\r\n      let yAxisConfig = {\r\n        a: false,\r\n        b: false\r\n      }\r\n      if (z.targetNum && z.targetNum[0] !== null) {\r\n        lengend.push('目标单量')\r\n        series.push({\r\n          name: '目标单量',\r\n          type: 'bar',\r\n          // stack: '单量',\r\n          areaStyle: {normal: {}},\r\n          // itemStyle: {\r\n          //   normal: {\r\n          //     color: '#26c6da'\r\n          //   },\r\n          //   emphasis: {\r\n          //     color: '#80deea'\r\n          //   }\r\n          // },\r\n          data: z.targetNum\r\n        })\r\n        yAxisConfig.a = true\r\n      }\r\n      if (z.completionNum && z.completionNum[0] !== null) {\r\n        lengend.push('完成单量')\r\n        series.push({\r\n          name: '完成单量',\r\n          type: 'bar',\r\n          // stack: '单量',\r\n          areaStyle: {normal: {}},\r\n          // itemStyle: {\r\n          //   normal: {\r\n          //     color: '#66bb6a'\r\n          //   },\r\n          //   emphasis: {\r\n          //     color: '#a5d6a7'\r\n          //   }\r\n          // },\r\n          data: z.completionNum\r\n        })\r\n        yAxisConfig.a = true\r\n      }\r\n      if ((z.targetNum && z.targetNum[0] !== null) && (z.achievingRate && z.achievingRate[0] !== null)) {\r\n        lengend.push('目标达成率')\r\n        series.push({\r\n          name: '目标达成率',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          formatter: '{value} %',\r\n          data: z.achievingRate\r\n        })\r\n        yAxisConfig.b = true\r\n      }\r\n      if (z.linkGrowthRate && z.linkGrowthRate[0] !== null) {\r\n        lengend.push('环比增长率')\r\n        series.push({\r\n          name: '环比增长率',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          formatter: '{value} %',\r\n          data: z.linkGrowthRate\r\n        })\r\n        yAxisConfig.b = true\r\n      }\r\n      if (yAxisConfig.a === true) {\r\n        yAxis.push({\r\n          type: 'value',\r\n          name: '单量'\r\n        })\r\n      }\r\n      if (yAxisConfig.b === true) {\r\n        yAxis.push({\r\n          type: 'value',\r\n          name: '比率',\r\n          axisLabel: {\r\n            formatter: '{value} %'\r\n          }\r\n        })\r\n      }\r\n      this.chartOption = {\r\n        title: {\r\n          show: true,\r\n          text: z.categoryData.name + '-运营对比图',\r\n          subtext: this.fullDate,\r\n          top: 'top',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        legend: {\r\n          top: '12%',\r\n          data: lengend\r\n        },\r\n        toolbox: {\r\n          orient: 'vertical',\r\n          itemSize: 24,\r\n          right: 24,\r\n          top: 12,\r\n          feature: {\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        grid: {\r\n          top: '24%',\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [{\r\n          type: 'category',\r\n          boundaryGap: true,\r\n          data: z.dimension\r\n        }],\r\n        yAxis: yAxis,\r\n        series: series\r\n      }\r\n      bar.hideLoading()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\nhtml,\r\nbody {\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n}\r\n#mainContent {\r\n  height: calc(100vh - 75px);\r\n  overflow: auto;\r\n}\r\n.setting-appbar.mu-appbar {\r\n  height: 74px;\r\n  padding-left: 100px;\r\n  background-color: #00bcd4;\r\n}\r\n\r\n.setting-dropdown {\r\n  line-height: 46px;\r\n  margin-right: 48px;\r\n}\r\n\r\n.setting-dropdown label {\r\n  vertical-align: text-bottom;\r\n}\r\n\r\n.setting-dropdown .mu-dropDown-menu-text {\r\n  color: #fff;\r\n}\r\n\r\n#orderTypeBox {\r\n  display: flex;\r\n  height: 240px;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  align-content: center;\r\n}\r\n#orderTypeBox .status-box {\r\n  margin: 6px 12px;\r\n}\r\n#orderTypeBox .status-box:first-child .status-button {\r\n  height: 228px;\r\n  width: 120px;\r\n}\r\n#orderTypeBox .status-box .status-button {\r\n  height: 108px;\r\n  width: 120px;\r\n}\r\n#orderTypeBox .status-box.selected .status-button {\r\n  background-color: #fffde7 !important;\r\n}\r\n#orderTypeBox .status-box .head-status-number {\r\n  font-size: 24px;\r\n}\r\n#orderTypeBox .status-box .mu-flat-button-label {\r\n  font-size: 18px;\r\n}\r\n#app div.echarts {\r\n  width: 100%;\r\n  min-height: 500px;\r\n  height: 100%;\r\n}\r\n#yearDropDown, #monthDropDown {\r\n  margin-right: -34px;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// compareChart.vue?f9bcf17c","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"body,html{overflow-x:auto;overflow-y:hidden}#mainContent{height:calc(100vh - 75px);overflow:auto}.setting-appbar.mu-appbar{height:74px;padding-left:100px;background-color:#00bcd4}.setting-dropdown{line-height:46px;margin-right:48px}.setting-dropdown label{vertical-align:text-bottom}.setting-dropdown .mu-dropDown-menu-text{color:#fff}#orderTypeBox{display:-webkit-box;display:-ms-flexbox;display:flex;height:240px;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center}#orderTypeBox .status-box{margin:6px 12px}#orderTypeBox .status-box:first-child .status-button{height:228px;width:120px}#orderTypeBox .status-box .status-button{height:108px;width:120px}#orderTypeBox .status-box.selected .status-button{background-color:#fffde7!important}#orderTypeBox .status-box .head-status-number{font-size:24px}#orderTypeBox .status-box .mu-flat-button-label{font-size:18px}#app div.echarts{width:100%;min-height:500px;height:100%}#monthDropDown,#yearDropDown{margin-right:-34px}\", \"\", {\"version\":3,\"sources\":[\"D:/code/vue-dashboard/src/components/compareChart.vue\"],\"names\":[],\"mappings\":\"AACA,UAEE,gBAAiB,AACjB,iBAAmB,CACpB,AACD,aACE,0BAA2B,AAC3B,aAAe,CAChB,AACD,0BACE,YAAa,AACb,mBAAoB,AACpB,wBAA0B,CAC3B,AACD,kBACE,iBAAkB,AAClB,iBAAmB,CACpB,AACD,wBACE,0BAA4B,CAC7B,AACD,yCACE,UAAY,CACb,AACD,cACE,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,aAAc,AACd,mBAAoB,AAChB,eAAgB,AACpB,4BAA6B,AAC7B,6BAA8B,AAC1B,0BAA2B,AACvB,sBAAuB,AAC/B,yBAA0B,AACtB,sBAAuB,AACnB,mBAAoB,AAC5B,0BAA2B,AACvB,oBAAsB,CAC3B,AACD,0BACE,eAAiB,CAClB,AACD,qDACE,aAAc,AACd,WAAa,CACd,AACD,yCACE,aAAc,AACd,WAAa,CACd,AACD,kDACE,kCAAqC,CACtC,AACD,8CACE,cAAgB,CACjB,AACD,gDACE,cAAgB,CACjB,AACD,iBACE,WAAY,AACZ,iBAAkB,AAClB,WAAa,CACd,AACD,6BACE,kBAAoB,CACrB\",\"file\":\"compareChart.vue\",\"sourcesContent\":[\"\\nhtml,\\r\\nbody {\\r\\n  overflow-x: auto;\\r\\n  overflow-y: hidden;\\n}\\n#mainContent {\\r\\n  height: calc(100vh - 75px);\\r\\n  overflow: auto;\\n}\\n.setting-appbar.mu-appbar {\\r\\n  height: 74px;\\r\\n  padding-left: 100px;\\r\\n  background-color: #00bcd4;\\n}\\n.setting-dropdown {\\r\\n  line-height: 46px;\\r\\n  margin-right: 48px;\\n}\\n.setting-dropdown label {\\r\\n  vertical-align: text-bottom;\\n}\\n.setting-dropdown .mu-dropDown-menu-text {\\r\\n  color: #fff;\\n}\\n#orderTypeBox {\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  height: 240px;\\r\\n  -ms-flex-wrap: wrap;\\r\\n      flex-wrap: wrap;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-box-direction: normal;\\r\\n      -ms-flex-direction: column;\\r\\n          flex-direction: column;\\r\\n  -webkit-box-align: center;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center;\\r\\n  -ms-flex-line-pack: center;\\r\\n      align-content: center;\\n}\\n#orderTypeBox .status-box {\\r\\n  margin: 6px 12px;\\n}\\n#orderTypeBox .status-box:first-child .status-button {\\r\\n  height: 228px;\\r\\n  width: 120px;\\n}\\n#orderTypeBox .status-box .status-button {\\r\\n  height: 108px;\\r\\n  width: 120px;\\n}\\n#orderTypeBox .status-box.selected .status-button {\\r\\n  background-color: #fffde7 !important;\\n}\\n#orderTypeBox .status-box .head-status-number {\\r\\n  font-size: 24px;\\n}\\n#orderTypeBox .status-box .mu-flat-button-label {\\r\\n  font-size: 18px;\\n}\\n#app div.echarts {\\r\\n  width: 100%;\\r\\n  min-height: 500px;\\r\\n  height: 100%;\\n}\\n#yearDropDown, #monthDropDown {\\r\\n  margin-right: -34px;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-d7fe7df2\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/compareChart.vue\n// module id = 694\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-d7fe7df2\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./compareChart.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"10d7d185\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-d7fe7df2\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/compareChart.vue\n// module id = 703\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: {\n      'drawer-opened': _vm.openDrawer\n    }\n  }, [_c('mainMenu'), _vm._v(\" \"), _c('mu-appbar', {\n    staticClass: \"setting-appbar\",\n    attrs: {\n      \"title\": \"运营数据对比\"\n    }\n  }, [_c('div', {\n    staticClass: \"setting-dropdown\",\n    slot: \"right\"\n  }, [_c('Group', {\n    attrs: {\n      \"handleChange\": _vm.changeSelect\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"setting-dropdown\",\n    slot: \"right\"\n  }, [_c('dateSelect', {\n    attrs: {\n      \"handleChange\": _vm.changeSelect\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"setting-dropdown\",\n    slot: \"right\"\n  }, [_c('mu-dropDown-menu', {\n    attrs: {\n      \"value\": _vm.categoryData.code,\n      \"maxHeight\": 480,\n      \"id\": \"serviceDropDown\"\n    },\n    on: {\n      \"change\": _vm.handleChangeService\n    }\n  }, [_c('mu-menu-item', {\n    attrs: {\n      \"value\": \"\",\n      \"title\": \"全部服务\"\n    }\n  }), _vm._v(\" \"), _vm._l((_vm.generalOrderStatistics), function(item) {\n    return _c('mu-menu-item', {\n      key: item.categoryCode,\n      attrs: {\n        \"value\": item.categoryCode,\n        \"title\": item.categoryName\n      }\n    })\n  })], 2)], 1)]), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"mainContent\"\n    }\n  }, [_c('ECharts', {\n    ref: \"bar\",\n    attrs: {\n      \"options\": _vm.chartOption,\n      \"auto-resize\": \"\"\n    }\n  })], 1), _vm._v(\" \"), (_vm.snackbar) ? _c('mu-snackbar', {\n    attrs: {\n      \"message\": _vm.snackbarMsg,\n      \"action\": \"关闭\"\n    },\n    on: {\n      \"actionClick\": _vm.hideSnackbar,\n      \"close\": _vm.hideSnackbar\n    }\n  }) : _vm._e()], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-d7fe7df2\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/compareChart.vue\n// module id = 711\n// module chunks = 1"],"sourceRoot":""}